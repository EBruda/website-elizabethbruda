{"version":3,"sources":["constants.ts","utils.tsx","components/Button/index.tsx","components/ActionRow/index.tsx","types.ts","log.ts","beans/Course.ts","beans/Section.ts","beans/SortingOption.ts","beans/Feedback.ts","beans/Oscar.ts","contexts/index.ts","components/TimeBlocks/index.tsx","components/Calendar/index.tsx","components/CombinationContainer/index.tsx","components/Course/index.tsx","components/CourseAdd/index.tsx","components/CourseContainer/index.tsx","components/CourseFilter/index.tsx","vendor/ics.js","hooks/useCookie.ts","hooks/useJsonCookie.ts","hooks/useMobile.ts","components/Header/index.tsx","components/Instructor/index.tsx","components/MapView/index.tsx","components/DaySelection/index.tsx","components/Map/index.tsx","components/NavDrawer/index.tsx","components/NavMenu/index.tsx","components/Palette/index.tsx","components/Prerequisite/index.tsx","components/Scheduler/index.tsx","components/Section/index.tsx","components/Select/index.tsx","components/Tab/index.tsx","components/Attribution/index.tsx","components/Feedback/index.tsx","components/App/index.tsx","index.tsx"],"names":["OPEN","DAYS","PALETTE","DELIVERY_MODES","CAMPUSES","Video","Online","BACKEND_BASE_URL","stringToTime","string","regexResult","exec","hour","minute","timeToString","time","ampm","hh","mm","padStart","A","timeToShortString","periodToString","period","start","end","getRandomColor","colors","flat","Math","random","length","getContentClassName","color","parseInt","substring","hasConflictBetween","section1","section2","meetings","some","meeting1","meeting2","day","days","includes","classes","classList","filter","c","join","isMobile","window","innerWidth","simplifyName","name","tokens","split","shift","pop","unique","array","Array","from","Set","isLab","section","type","scheduleType","isLecture","getSemesterName","term","year","semester","Number","humanizeArrayReact","conjunction","String","init","last","trim","serializePrereqs","reqs","openPar","closePar","i","isArray","subClauses","forEach","req","id","Button","className","disabled","href","onClick","children","rel","target","tabIndex","onKeyDown","event","key","role","ActionRow","label","actions","restProps","flatMap","action","map","icon","styling","dataTip","dataFor","onMouseEnter","onMouseLeave","rest","fixedWidth","style","isTheme","theme","defaultTermData","desiredCourses","pinnedCrns","excludedCrns","colorMap","sortingOptionIndex","ErrorWithFields","message","source","fields","baseName","topMessage","Error","stack","getName","console","group","this","error","allFields","getAllFields","Object","keys","log","groupEnd","softError","logToConsole","Sentry","contexts","__do_not_use_type_in_sentry_it_is_special","Course","oscar","courseId","data","subject","number","title","sections","prereqs","hasLab","onlyLectures","onlyLabs","allInOnes","sectionGroups","entries","sectionId","sectionData","Section","err","lecture","associatedLabs","lab","startsWith","associatedLectures","lonelyLectures","lonelyLabs","distinct","groups","sectionGroupMeetings","sectionGroupHash","JSON","stringify","sectionGroup","push","hash","a","replace","encodedCourse","encodeURIComponent","url","axios","get","responseData","baseId","cleanedId","gpaMap","rawAverageGpa","header","avg_gpa","actual","averageGpa","raw","instructorData","rawInstructor","instructor_name","idx","instructorGpa","GPA","instructor","nameSegments","lastName","firstName","course","crn","seating","credits","campus","deliveryMode","gradeBasis","instructors","scheduleTypeIndex","campusIndex","attributeIndices","gradeBasisIndex","scheduleTypes","campuses","attributes","attributeIndex","attribute","find","gradeBases","periodIndex","where","locationIndex","dateRangeIndex","periods","location","locations","dateRange","dateRanges","Date","to","reduce","accum","prevDate","currDate","now","method","headers","then","response","tableRow","cheerio","load","$","eq","first","text","catch","fill","SortingOption","calculateFactor","rating","feedback","Oscar","updatedAt","version","courses","courseMap","crnMap","sortingOptions","caches","periodSegments","cacheIndex","segments","v","setHours","combination","startMap","endMap","tot","min","ends","values","starts","crnsList","dfs","courseIndex","crns","undefined","findCourse","isIncluded","isPinned","hasConflict","crnSection","findSection","pinnedOnlyLecture","pinnedOnlyLab","pinnedAllInOne","iterateTimeBlocks","combinations","sortingOption","actualSortingOptionsLength","factor","sort","b","callback","meeting","EMPTY_OSCAR","ThemeContext","React","createContext","TermsContext","TermContext","setTerm","setOscar","patchTermData","OverlayCrnsContext","makeSizeInfoKey","TimeBlocks","overlay","preview","capture","isAutosized","sizeInfo","useContext","contentClassName","sizeInfoKey","sizeInfoDay","sizeInfoPeriodDay","top","height","width","rowSize","left","indexOf","rowIndex","backgroundColor","place","effect","Calendar","overlayCrns","crnSizeInfo","updateJoinedRowSizes","periodInfos","seen","curCrn","curPeriod","newRowSize","has","add","period2Info","maxMeetingLen","max","m","dayPeriodInfos","info","curRowSize","acc","courseSizeInfo","daySizeInfo","_","CombinationContainer","setOverlayCrns","handleResetPinnedCrns","useCallback","confirm","useMemo","getCombinations","sortedCombinations","sortCombinations","Select","onChange","newSortingOptionIndex","value","options","outline","rowCount","rowHeight","rowRenderer","index","onAddCourse","useState","expanded","setExpanded","prereqOpen","setPrereqOpen","paletteShown","setPaletteShown","setGpaMap","isSearching","Boolean","useEffect","fetchGpa","handleRemoveCourse","newColorMap","handleIncludeSections","hasPrereqs","instructorMap","primaryInstructor","instructorSections","excludedInstructors","every","includedInstructors","prereqControl","nextPrereqOpen","nextExpanded","prereqAction","faShareAlt","transform","infoAction","faInfoCircle","pinnedSections","totalCredits","faPlus","faAngleUp","faAngleDown","faPalette","faTrash","toFixed","Palette","onSelectColor","col","Instructor","gpa","Prerequisite","isSortKey","sortKey","CourseAdd","keyword","setKeyword","setFilter","activeIndex","setActiveIndex","inputRef","useRef","handleChangeKeyword","e","input","results","toUpperCase","keywordMatch","filterMatch","tags","sortValue","doesFilterMatchCourse","handleAddCourse","toBeExcludedCrns","timeDecided","doesFilterMatchSection","current","focus","handleKeyDown","preventDefault","handleToggleFilter","tag","handleResetFilter","activeCourse","ref","placeholder","property","labels","CourseFilter","selectedTags","onReset","onToggle","CourseContainer","ago","selectedTag","ics","uidDomain","prodId","navigator","userAgent","SEPARATOR","appVersion","calendarEvents","calendarStart","calendarEnd","BYDAY_VALUES","events","calendar","addEvent","description","begin","stop","rrule","freq","until","isNaN","parse","interval","count","byday","prototype","toString","call","d","elem","pos","start_date","end_date","now_date","start_year","getFullYear","slice","start_month","getMonth","start_day","getDate","start_hours","getHours","start_minutes","getMinutes","start_seconds","getSeconds","end_year","end_month","end_day","end_hours","end_minutes","end_seconds","now_year","now_month","now_day","now_hours","now_minutes","now_seconds","start_time","end_time","rruleString","uDate","toISOString","calendarEvent","splice","download","filename","ext","blob","Blob","bb","BlobBuilder","append","getBlob","document","characterSet","saveAs","build","useCookieWithDefault","defaultValue","setValue","setCookieValue","val","Cookies","set","expires","useJsonCookie","useCookie","rawValue","setRawValue","parsedValue","patchValue","patch","rawVal","useMobile","mobile","setMobile","handleResize","newMobile","addEventListener","removeEventListener","Header","currentTab","onChangeTab","onToggleMenu","tabs","terms","setTheme","captureRef","handleThemeChange","newTheme","handleExport","cal","getTime","getDay","setDate","M","T","W","R","F","alert","handleDownload","captureElement","computed","getComputedStyle","getPropertyValue","domtoimage","toBlob","offsetWidth","offsetHeight","crnButton","faBars","currentTerm","tabLabel","tabIdx","Tab","active","faDownload","faCalendarAlt","faPaste","delayHide","afterShow","copy","setTimeout","ReactTooltip","hide","faAdjust","faGithub","includeSection","excludeSections","sectionList","instructorPinned","includedSections","excludedSections","excludeTooltipId","faGraduationCap","faBan","pinned","MapView","latitude","longitude","zoom","viewState","setViewState","unknown","coords","mapStyle","mapboxApiAccessToken","process","onViewStateChange","newViewState","lat","long","faMapPin","Fragment","showZoom","showCompass","isDay","rawDay","DaySelection","courseDateMap","activeDay","setActiveDay","colorPalette","daysOfTheWeek","formatTime","floor","adjustedHour","date","padding","timeLabel","times","daysOfWeek","Map","firstMeeting","activeLocations","loc","NavDrawer","open","onClose","faTimes","NavMenu","items","currentItem","onChangeItem","item","paletteColor","BASE_ITEM_STYLE","fontSize","content","PrerequisiteEmpty","op","PrerequisiteClauseDisplay","clause","subClause","PrerequisiteOption","operator","PrerequisiteHeader","PrerequisiteItem","isLast","Scheduler","setTabIndex","overlayContextValue","tabTitle","Provider","setSeating","hovering","excludeSection","sect","pinSection","faThumbtack","faChair","fetchSeating","newSeating","afterHide","opened","setOpened","selectedOption","option","faCaretDown","optionValue","optionLabel","Attribution","Feedback","submit","setSubmit","setRating","setFeedback","loading","setLoading","faCommentAlt","size","marginLeft","marginRight","FormSubmit","NAV_TABS","App","setTerms","termData","filteredTermData","crnFilter","themeContextValue","termsContextValue","termContextValue","cookieKey","swal","button","alt","src","res","newOscar","newTerms","test","reverse","recentTerm","currentTabIndex","isDrawerOpen","setIsDrawerOpen","openDrawer","closeDrawer","fallback","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e8eed9c.chunk.js","sourcesContent":["const OPEN = 8 * 60;\nconst CLOSE = 21 * 60;\nconst DAYS = ['M', 'T', 'W', 'R', 'F'];\n\nconst PNG_SCALE_FACTOR = 2;\n\nconst PALETTE = [\n  [\n    '#4D4D4D',\n    '#999999',\n    '#FFFFFF',\n    '#F44E3B',\n    '#FE9200',\n    '#FCDC00',\n    '#DBDF00',\n    '#A4DD00',\n    '#68CCCA',\n    '#73D8FF',\n    '#AEA1FF',\n    '#FDA1FF',\n  ],\n  [\n    '#333333',\n    '#808080',\n    '#CCCCCC',\n    '#D33115',\n    '#E27300',\n    '#FCC400',\n    '#B0BC00',\n    '#68BC00',\n    '#16A5A5',\n    '#009CE0',\n    '#7B64FF',\n    '#FA28FF',\n  ],\n  [\n    '#000000',\n    '#666666',\n    '#B3B3B3',\n    '#9F0500',\n    '#C45100',\n    '#FB9E00',\n    '#808900',\n    '#194D33',\n    '#0C797D',\n    '#0062B1',\n    '#653294',\n    '#AB149E',\n  ],\n];\n\nconst ASYNC_DELIVERY_MODE = 'Remote Asynchronous Course';\n\nconst DELIVERY_MODES: Record<string, string> = {\n  'Hybrid Course': 'Hybrid',\n  'Remote Synchronous Course': 'Remote Synchronous',\n  'Remote Asynchronous Course': 'Remote Asynchronous',\n  'Residential Course': 'Residential',\n};\n\nconst CAMPUSES: Record<string, string> = {\n  'Georgia Tech-Atlanta *': 'Atlanta',\n  'GT Lorraine-Undergrad Programs': 'Lorraine Undergrad',\n  'GT Lorraine-Graduate Programs': 'Lorraine Graduate',\n  'Georgia Tech - Shenzhen': 'Shenzhen',\n  Video: 'Video',\n  Online: 'Online',\n  'MBA Evening Program': 'MBA Evening',\n};\n\nconst BACKEND_BASE_URL = 'https://gt-scheduler.azurewebsites.net';\n\nexport {\n  OPEN,\n  CLOSE,\n  DAYS,\n  PNG_SCALE_FACTOR,\n  PALETTE,\n  ASYNC_DELIVERY_MODE,\n  DELIVERY_MODES,\n  CAMPUSES,\n  BACKEND_BASE_URL,\n};\n","import React from 'react';\n\nimport { Section } from './beans';\nimport { DAYS, PALETTE } from './constants';\nimport { Period, PrerequisiteClause } from './types';\n\nexport const stringToTime = (string: string): number => {\n  const regexResult = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  if (regexResult === null) return 0;\n  const [, hour, minute, ampm] = (regexResult as unknown) as [\n    string,\n    string,\n    string,\n    string\n  ];\n  return ((ampm === 'p' ? 12 : 0) + (+hour % 12)) * 60 + +minute;\n};\n\nexport const timeToString = (time: number, ampm = true): string => {\n  const hour = (time / 60) | 0;\n  const minute = time % 60;\n  const hh = hour > 12 ? hour - 12 : hour;\n  const mm = `${minute}`.padStart(2, '0');\n  const A = `${hour < 12 ? 'a' : 'p'}m`;\n  return ampm ? `${hh}:${mm} ${A}` : `${hh}:${mm}`;\n};\n\nexport const timeToShortString = (time: number): string => {\n  const hour = (time / 60) | 0;\n  return `${hour > 12 ? hour - 12 : hour}${hour < 12 ? 'a' : 'p'}m`;\n};\n\nexport const periodToString = (period: Period | undefined): string =>\n  period != null\n    ? `${timeToString(period.start, false)} - ${timeToString(period.end)}`\n    : 'TBA';\n\nexport const getRandomColor = (): string => {\n  const colors = PALETTE.flat();\n  const index = (Math.random() * colors.length) | 0;\n  return colors[index] ?? '#333333';\n};\n\nexport const getContentClassName = (color: string | undefined): string => {\n  if (color == null) return 'light-content';\n  const r = parseInt(color.substring(1, 3), 16);\n  const g = parseInt(color.substring(3, 5), 16);\n  const b = parseInt(color.substring(5, 7), 16);\n  return r * 0.299 + g * 0.587 + b * 0.114 > 128\n    ? 'light-content'\n    : 'dark-content';\n};\n\nexport const hasConflictBetween = (\n  section1: Section,\n  section2: Section\n): boolean =>\n  section1.meetings.some((meeting1) =>\n    section2.meetings.some(\n      (meeting2) =>\n        meeting1.period &&\n        meeting2.period &&\n        DAYS.some(\n          (day) => meeting1.days.includes(day) && meeting2.days.includes(day)\n        ) &&\n        meeting1.period.start < meeting2.period.end &&\n        meeting2.period.start < meeting1.period.end\n    )\n  );\n\nexport const classes = (\n  ...classList: (string | boolean | null | undefined)[]\n): string => classList.filter((c) => c).join(' ');\n\nexport const isMobile = (): boolean => window.innerWidth < 1024;\n\nexport const simplifyName = (name: string): string => {\n  const tokens = name.split(' ');\n  const firstName = tokens.shift();\n  const lastName = tokens.pop();\n  return [firstName, lastName].join(' ');\n};\n\nexport function unique<T>(array: T[]): T[] {\n  return Array.from(new Set(array));\n}\n\nexport const isLab = (section: Section): boolean =>\n  ['Lab', 'Studio'].some((type) => section.scheduleType.includes(type));\n\nexport const isLecture = (section: Section): boolean =>\n  section.scheduleType.includes('Lecture');\n\nexport const getSemesterName = (term: string): string => {\n  const year = term.substring(0, 4);\n  const semester = ((): string => {\n    switch (Number.parseInt(term.substring(4), 10)) {\n      case 1:\n        return 'Winter';\n      case 2:\n      case 3:\n        return 'Spring';\n      case 5:\n      case 6:\n        return 'Summer';\n      case 8:\n      case 9:\n        return 'Fall';\n      default:\n        return 'Unknown';\n    }\n  })();\n  return `${semester} ${year}`;\n};\n\nexport function humanizeArray<T>(array: T[], conjunction = 'and'): string {\n  if (array.length <= 2) {\n    return array.join(` ${conjunction} `);\n  }\n  const init = [...array];\n  const last = init.pop();\n  return `${init.join(', ')}, ${conjunction} ${String(last)}`;\n}\n\nexport function humanizeArrayReact<T>(\n  array: T[],\n  conjunction: React.ReactNode = 'and'\n): React.ReactNode {\n  if (array.length === 0) {\n    return null;\n  }\n  if (array.length === 1) {\n    return String(array[0]);\n  }\n  if (array.length === 2) {\n    return (\n      <>\n        {String(array[0])} {conjunction} {String(array[1])}\n      </>\n    );\n  }\n\n  const init = [...array];\n  const last = init.pop();\n  return (\n    <>\n      {`${init.join(', ')},`.trim()} {conjunction} {String(last)}\n    </>\n  );\n}\n\nexport const serializePrereqs = (\n  reqs: PrerequisiteClause,\n  openPar = false,\n  closePar = false\n): string => {\n  // This function accepts the index of a sub-clause\n  // from the sub-clause slice of a compound prereq clause\n  // (i.e. the [...sub-clauses] part of a clause\n  // that itself is of the form [operator, ...sub-clauses]).\n  // As such, we compare to the clause length - 2\n  // (since the sub-clauses[0] is really reqs[1])\n  const last = (i: number): boolean =>\n    Array.isArray(reqs) && i === reqs.length - 2;\n  let string = '';\n\n  if (!Array.isArray(reqs)) {\n    string += (openPar ? '(' : '') + reqs.id + (closePar ? ')' : '');\n  } else if (reqs[0] === 'and') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string +=\n        serializePrereqs(req, i === 0, last(i)) + (last(i) ? '' : ' and ');\n    });\n  } else if (reqs[0] === 'or') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string += serializePrereqs(req) + (last(i) ? '' : ' or ');\n    });\n  }\n\n  return string;\n};\n","import React from 'react';\n\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type ButtonProps = {\n  className?: string;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  children?: React.ReactNode;\n};\n\nexport default function Button({\n  className,\n  disabled = false,\n  href,\n  onClick,\n  children,\n}: ButtonProps): React.ReactElement {\n  if (disabled)\n    return (\n      <div className={classes('Button', 'disabled', className)}>{children}</div>\n    );\n\n  if (href != null)\n    return (\n      <a\n        className={classes('Button', className)}\n        href={href}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {children}\n      </a>\n    );\n\n  return (\n    <div\n      className={classes('Button', className)}\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={(event): void => {\n        // Intercept enter presses\n        if (event.key === 'Enter' && onClick != null) onClick();\n      }}\n      role=\"button\"\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils';\nimport Button, { ButtonProps } from '../Button';\n\nimport './stylesheet.scss';\n\ntype FontAwesomeProps = React.ComponentProps<typeof FontAwesomeIcon>;\nexport type Action = {\n  icon: FontAwesomeProps['icon'];\n  styling?: React.CSSProperties;\n  dataTip?: boolean;\n  dataFor?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n} & Omit<ButtonProps, 'children'>;\n\ntype BaseActionRowProps = {\n  label: string;\n  actions: (Action | null | undefined)[];\n  className?: string;\n  children?: React.ReactNode;\n};\nexport type ActionRowProps = BaseActionRowProps &\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof BaseActionRowProps>;\n\nexport default function ActionRow({\n  className,\n  label,\n  children,\n  actions,\n  ...restProps\n}: ActionRowProps): React.ReactElement {\n  return (\n    <div className={classes('ActionRow', className)} {...restProps}>\n      <div className=\"action-row-header\">\n        <div className=\"label\">{label}</div>\n        <div className={classes('actions', 'default')}>\n          {actions\n            .flatMap((action) => (action != null ? [action] : []))\n            .map(\n              (\n                {\n                  icon,\n                  styling,\n                  dataTip,\n                  dataFor,\n                  onMouseEnter,\n                  onMouseLeave,\n                  ...rest\n                },\n                i\n              ) => (\n                <Button className=\"action\" {...rest} key={i}>\n                  <FontAwesomeIcon\n                    fixedWidth\n                    style={styling}\n                    icon={icon}\n                    data-tip={dataTip}\n                    data-for={dataFor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                  />\n                </Button>\n              )\n            )}\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n}\n","export type Theme = 'light' | 'dark';\n\nexport function isTheme(theme: string): theme is Theme {\n  switch (theme) {\n    case 'light':\n    case 'dark':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type TermData = {\n  desiredCourses: string[];\n  pinnedCrns: string[];\n  excludedCrns: string[];\n  colorMap: Record<string, string>;\n  sortingOptionIndex: number;\n};\n\nexport const defaultTermData: TermData = {\n  desiredCourses: [],\n  pinnedCrns: [],\n  excludedCrns: [],\n  colorMap: {},\n  sortingOptionIndex: 0,\n};\n\n// Declare (better) types for the ICS library\nexport type ICS = {\n  download(filename: string, ext?: string): string | false;\n  addEvent(\n    subject: string,\n    description: string,\n    location: string,\n    begin: string | Date,\n    stop: string | Date,\n    rrule: unknown\n  ): false | string[];\n};\n\nexport interface Combination {\n  crns: string[];\n  startMap: Record<string, number>;\n  endMap: Record<string, number>;\n}\n\nexport interface Period {\n  start: number;\n  end: number;\n}\n\nexport interface DateRange {\n  from: Date;\n  to: Date;\n}\n\nexport interface Location {\n  lat: number;\n  long: number;\n}\n\nexport interface Meeting {\n  period: Period | undefined;\n  days: string[];\n  where: string;\n  location: Location | null;\n  instructors: string[];\n  dateRange: DateRange;\n}\n\nexport interface CourseGpa {\n  averageGpa?: number;\n  [instructor: string]: number | undefined;\n}\n\n// Meeting type (imported as `CrawlerMeeting`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type CrawlerMeeting = [\n  /**\n   * an integer index into `caches.periods`,\n   * specifying the class's start/end times\n   */\n  periodIndex: number,\n  /**\n   * a string specifying what days the class takes place on\n   * (e.g. `\"MW\"` or `\"TR\"`)\n   */\n  days: string,\n  /**\n   * a string giving the room/location where the course will be held\n   * (e.g. `\"College of Business 224\"`)\n   */\n  room: string,\n  /**\n   * an integer index into `caches.locations`,\n   * containing the latitude and longitude for a given course\n   */\n  locationIndex: number,\n  /**\n   * an array of strings listing all the instructors for this section,\n   * along with a 1-character code to mark the principal instructor\n   * (e.g. `[\"Katarzyna Rubar (P)\"]`)\n   */\n  instructors: string[],\n  /**\n   * an integer index into `caches.dateRanges`,\n   * specifying the start/end date of the class this semester\n   */\n  dateRangeIndex: number\n];\n\n// Section type (imported as `CrawlerSection`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains  information about the course's section\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerSection = [\n  /**\n   * the CRN number of this section of the course\n   */\n  crn: string,\n  /**\n   * array of information about the section's meeting\n   * times/places/professors/etc.; in most cases, this array will only contain\n   * 1 item\n   */\n  meetings: CrawlerMeeting[],\n  /**\n   * integer number of credit hours this course is worth\n   */\n  creditHours: number,\n  /**\n   * integer index into `caches.scheduleTypes`\n   */\n  scheduleTypeIndex: number,\n  /**\n   * integer index into `caches.campuses`,\n   * specifying which campus the class is being taught at\n   */\n  campusIndex: number,\n  /**\n   * array of integer indices into `caches.attributes`,\n   * specifying any additional attributes the course has\n   */\n  attributeIndices: number[],\n  /**\n   * integer index into caches.gradeBases,\n   * specifying the grading scheme of the class\n   */\n  gradeBaseIndex: number\n];\n\n// Prerequisite types:\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type MinimumGrade = 'A' | 'B' | 'C' | 'D' | 'T';\nexport type PrerequisiteCourse = { id: string; grade?: MinimumGrade };\nexport type PrerequisiteClause = PrerequisiteCourse | PrerequisiteSet;\nexport type PrerequisiteOperator = 'and' | 'or';\nexport type PrerequisiteSet = [\n  operator: PrerequisiteOperator,\n  ...clauses: PrerequisiteClause[]\n];\n\n/**\n * Recursive data structure that is the sequence of all prerequisites in prefix\n * notation, parsed from the information on Oscar\n *\n * @example\n *\n * ```json\n   [\n     \"and\",\n     [\n       \"or\",\n       {\"id\":\"CS 3510\", \"grade\":\"C\"},\n       {\"id\":\"CS 3511\", \"grade\":\"C\"}\n     ]\n   ]\n * ```\n */\nexport type CrawlerPrerequisites = PrerequisiteSet | [];\n\n// Caches type (imported as `CrawlerCaches`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains data shared by multiple class descriptions\n */\nexport interface CrawlerCaches {\n  /**\n   * List of all the different time ranges that classes can be offered at\n   * (e.g. `\"8:00 am - 8:50 am\"`;\n   * there is one `\"TBA\"` string for classes whose time is \"To Be Announced\")\n   */\n  periods: string[];\n  /**\n   * List of all possible start/ending dates that classes can be offered between\n   * (e.g. `\"Aug 17, 2020 - Dec 10, 2020\"`)\n   */\n  dateRanges: string[];\n  /**\n   * List of the different types of classes for each time block\n   * (e.g. `\"Lecture*\"`, `\"Recitation*\"`, or `\"Internship/Practicum*\"`)\n   */\n  scheduleTypes: string[];\n  /**\n   * List of the different GT campus locations that a class could take place at\n   * (e.g. `\"Georgia Tech-Atlanta *\"` or `\"Online\"`)\n   */\n  campuses: string[];\n  /**\n   * List of other miscellaneous attributes that can be associated with a class\n   * (e.g. `\"Hybrid Course\"`, `\"Honors Program\"`, or `\"Capstone\"`)\n   */\n  attributes: string[];\n  /**\n   * List of the different kinds of grading schemes a course can have\n   */\n  gradeBases: string[];\n  /**\n   * List of the different building locations a class can be at\n   */\n  locations: Location[];\n}\n\n// Course type (imported as `CrawlerCourse`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains information about a single class\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerCourse = [\n  /**\n   * the full, human-readable name of the course (e.g. \"Accounting I\")\n   */\n  fullName: string,\n  /**\n   * a JSON object with information about each section of the course;\n   * the section IDs are the keys (`\"A\"`, `\"B\"`, `\"S2\"`, etc.)\n   */\n  sections: Record<string, CrawlerSection>,\n  /**\n     * a tree of prerequisite classes and the necessary grades in them\n     * (using boolean expressions in prefix order)\n     *\n     * @example\n     *\n     * ```json\n       [\n         \"and\",\n         [\n            \"or\",\n            {\"id\":\"CS 3510\", \"grade\":\"C\"},\n            {\"id\":\"CS 3511\", \"grade\":\"C\"}\n         ]\n       ]\n     * ```\n     */\n  // ! Type had `undefined` explicitly added to ensure we check when accessing\n  prerequisites: CrawlerPrerequisites | undefined,\n  /**\n   * Description pulled from Oscar\n   */\n  description: string | null\n];\n\n// TermData type (imported as `CrawlerTermData`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Primary JSON object returned by the API.\n * See https://github.com/GTBitsOfGood/gt-scheduler/issues/1#issuecomment-694326220\n * for more info on the shape\n */\nexport interface CrawlerTermData {\n  /**\n   * Contains information about each class;\n   * this makes up the vast bulk of the resultant JSON.\n   * The course IDs are the keys (`\"ACCT 2101\"`, `\"CS 2340\"`, etc.)\n   */\n  courses: Record<string, CrawlerCourse>;\n  /**\n   * Contains data shared by multiple class descriptions\n   */\n  caches: CrawlerCaches;\n  /**\n   * Contains the time this JSON file was retrieved\n   */\n  updatedAt: Date;\n  /**\n   * Version number for the term data\n   */\n  version: number;\n}\n","// Disable no-console for the entire file since this is the only location where\n// any logging should be performed.\n/* eslint-disable no-console */\n\nimport * as Sentry from '@sentry/react';\n\nexport class ErrorWithFields extends Error {\n  fields: Record<string, unknown>;\n\n  source: unknown;\n\n  topMessage: string;\n\n  baseName: string;\n\n  constructor({\n    message,\n    source,\n    fields = {},\n    baseName = 'ErrorWithFields',\n  }: {\n    message: string;\n    source?: unknown;\n    fields?: Record<string, unknown>;\n    baseName?: string;\n  }) {\n    super();\n    if (source instanceof Error) {\n      this.message = `${message}: ${source.message}`;\n      if (source.stack != null) this.stack = source.stack;\n    } else {\n      this.message = message;\n    }\n\n    this.baseName = baseName;\n    this.name = this.getName();\n    this.fields = fields;\n    this.source = source;\n    this.topMessage = message;\n  }\n\n  logToConsole(): void {\n    console.group(`error: ${this.topMessage}`);\n    console.error({ source: this.source });\n\n    const allFields = this.getAllFields();\n    if (Object.keys(allFields).length > 0) {\n      console.log(allFields);\n    }\n\n    console.groupEnd();\n  }\n\n  getName(): string {\n    let baseName: string | null = null;\n    if (this.source instanceof ErrorWithFields) {\n      baseName = this.source.getName();\n    } else if (this.source instanceof Error) {\n      baseName = this.source.name;\n    }\n\n    if (baseName === null) return this.name;\n    return `${this.name}(${baseName})`;\n  }\n\n  getAllFields(): Record<string, unknown> {\n    if (this.source instanceof ErrorWithFields) {\n      return { ...this.source.getAllFields(), ...this.fields };\n    }\n    return this.fields;\n  }\n}\n\n/**\n * Logs an error to the console and reports it to Sentry.\n * Does not re-throw any errors and can be used when there is reasonable\n * fallback behavior.\n * @param error - an instance of `ErrorWithFields`\n */\nexport function softError(error: ErrorWithFields): void {\n  error.logToConsole();\n\n  // Report the error to Sentry if in production\n  if (process.env.NODE_ENV === 'production') {\n    const fields = error.getAllFields();\n    const { type, ...rest } = fields;\n    Sentry.captureException(error, {\n      contexts: {\n        // https://docs.sentry.io/platforms/ruby/enriching-events/context/#structured-context\n        fields: { ...rest, __do_not_use_type_in_sentry_it_is_special: type },\n      },\n    });\n  }\n}\n","import axios from 'axios';\n\nimport { Oscar, Section } from '.';\nimport {\n  CourseGpa,\n  CrawlerCourse,\n  CrawlerPrerequisites,\n  Period,\n} from '../types';\nimport { hasConflictBetween, isLab, isLecture } from '../utils';\nimport { ErrorWithFields, softError } from '../log';\n\ninterface SectionGroupMeeting {\n  days: string[];\n  period: Period | undefined;\n}\n\ninterface SectionGroup {\n  /**\n   * Equal to`JSON.stringify(this.sectionGroupMeetings)`\n   */\n  hash: string;\n  meetings: SectionGroupMeeting[];\n  sections: Section[];\n}\n\nexport default class Course {\n  id: string;\n\n  subject: string;\n\n  number: string;\n\n  title: string;\n\n  sections: Section[];\n\n  prereqs: CrawlerPrerequisites | undefined;\n\n  hasLab: boolean;\n\n  onlyLectures: Section[] | undefined;\n\n  onlyLabs: Section[] | undefined;\n\n  allInOnes: Section[] | undefined;\n\n  sectionGroups: Record<string, SectionGroup> | undefined;\n\n  constructor(oscar: Oscar, courseId: string, data: CrawlerCourse) {\n    const [title, sections, prereqs] = data;\n\n    this.id = courseId;\n    const [subject, number] = this.id.split(' ');\n    if (subject == null || number == null) {\n      throw new ErrorWithFields({\n        message: 'course ID could not be parsed',\n        fields: {\n          id: this.id,\n          subject,\n          number,\n        },\n      });\n    }\n    this.subject = subject;\n    this.number = number;\n\n    this.title = title;\n    this.sections = Object.entries(sections).flatMap<Section>(\n      ([sectionId, sectionData]) => {\n        if (sectionData == null) return [];\n        try {\n          return [new Section(oscar, this, sectionId, sectionData)];\n        } catch (err) {\n          softError(\n            new ErrorWithFields({\n              message: 'could not construct Section bean',\n              source: err,\n              fields: {\n                courseId,\n              },\n            })\n          );\n          return [];\n        }\n      }\n    );\n    this.prereqs = prereqs;\n\n    const onlyLectures = this.sections.filter(\n      (section) => isLecture(section) && !isLab(section)\n    );\n    const onlyLabs = this.sections.filter(\n      (section) => isLab(section) && !isLecture(section)\n    );\n    this.hasLab = !!onlyLectures.length && !!onlyLabs.length;\n    if (this.hasLab) {\n      for (const lecture of onlyLectures) {\n        lecture.associatedLabs = onlyLabs.filter((lab) =>\n          lab.id.startsWith(lecture.id)\n        );\n      }\n      for (const lab of onlyLabs) {\n        lab.associatedLectures = onlyLectures.filter((lecture) =>\n          lab.id.startsWith(lecture.id)\n        );\n      }\n      const lonelyLectures = onlyLectures.filter(\n        (lecture) => !lecture.associatedLabs.length\n      );\n      const lonelyLabs = onlyLabs.filter(\n        (lab) => !lab.associatedLectures.length\n      );\n      for (const lecture of lonelyLectures) {\n        lecture.associatedLabs = lonelyLabs.filter(\n          (lab) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      for (const lab of lonelyLabs) {\n        lab.associatedLectures = lonelyLectures.filter(\n          (lecture) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      this.onlyLectures = onlyLectures;\n      this.onlyLabs = onlyLabs;\n      this.allInOnes = this.sections.filter(\n        (section) => isLecture(section) && isLab(section)\n      );\n    } else {\n      this.sectionGroups = this.distinct(this.sections);\n    }\n  }\n\n  distinct(sections: Section[]): Record<string, SectionGroup> {\n    const groups: Record<string, SectionGroup> = {};\n    sections.forEach((section) => {\n      const sectionGroupMeetings = section.meetings.map<SectionGroupMeeting>(\n        ({ days, period }) => ({\n          days,\n          period,\n        })\n      );\n      const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n      const sectionGroup = groups[sectionGroupHash];\n      if (sectionGroup) {\n        sectionGroup.sections.push(section);\n      } else {\n        groups[sectionGroupHash] = {\n          hash: sectionGroupHash,\n          meetings: sectionGroupMeetings,\n          sections: [section],\n        };\n      }\n    });\n    return groups;\n  }\n\n  async fetchGpa(): Promise<CourseGpa> {\n    const base =\n      'https://c4citk6s9k.execute-api.us-east-1.amazonaws.com/test/data';\n    // We have to clean up the course ID before sending it to the API,\n    // since courses like CHEM 1212K should become CHEM 1212\n    const id = `${this.subject} ${this.number.replace(/\\D/g, '')}`;\n    const encodedCourse = encodeURIComponent(id);\n    const url = `${base}/course?courseID=${encodedCourse}`;\n\n    let responseData: CourseDetailsAPIResponse;\n    try {\n      responseData = (await axios.get<CourseDetailsAPIResponse>(url)).data;\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'fetching course details from Course Critique API',\n          source: err,\n          fields: {\n            baseId: this.id,\n            cleanedId: id,\n            url,\n          },\n        })\n      );\n      return {};\n    }\n\n    // Extract the relevant fields from the response\n    // We catch (or even throw) errors here to defensively ensure that\n    // the data coming out of this function is safely typed\n    try {\n      const gpaMap: CourseGpa = {};\n\n      // Extract the course-wide average GPA\n      const rawAverageGpa = responseData.header[0].avg_gpa;\n      if (typeof rawAverageGpa !== 'number')\n        throw new ErrorWithFields({\n          message: `data at \".header[0].avg_gpa\" was not a number`,\n          fields: {\n            actual: rawAverageGpa,\n          },\n        });\n      gpaMap.averageGpa = rawAverageGpa;\n\n      // Extract the GPA for each instructor\n      responseData.raw.forEach((instructorData, i) => {\n        // Extract the instructor's name\n        const rawInstructor = instructorData.instructor_name;\n        if (typeof rawInstructor !== 'string')\n          throw new ErrorWithFields({\n            message: `data at \".raw[idx].instructor_name\" was not a string`,\n            fields: {\n              idx: i,\n              actual: rawInstructor,\n            },\n          });\n\n        // Extract the instructor's GPA\n        const instructorGpa = instructorData.GPA;\n        if (typeof instructorGpa !== 'number')\n          throw new ErrorWithFields({\n            message: `data at \".raw[idx].GPA\" was not a number`,\n            fields: {\n              idx: i,\n              actual: instructorGpa,\n            },\n          });\n\n        // Normalize the instructor name from \"LN, FN\" to \"FN LN\"\n        let instructor = rawInstructor;\n        const nameSegments = instructor.split(', ');\n        if (nameSegments.length === 2) {\n          const [lastName, firstName] = nameSegments as [string, string];\n          instructor = `${firstName} ${lastName}`;\n        }\n\n        gpaMap[instructor] = instructorGpa;\n      });\n\n      return gpaMap;\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'extracting course GPA from Course Critique API response',\n          source: err,\n          fields: {\n            baseId: this.id,\n            cleanedId: id,\n            url,\n          },\n        })\n      );\n      return {};\n    }\n  }\n}\n\n// Based on response for CS 6035 on 2021-08-28\n// from the Course Critique API.\n// Each field has `| unknown` added to ensure\n// that we narrow the type before using them.\ninterface CourseDetailsAPIResponse {\n  header: [\n    {\n      course_name: string | unknown;\n      description: string | unknown;\n      credits: number | unknown;\n      avg_gpa: number | unknown;\n      avg_a: number | unknown;\n      avg_b: number | unknown;\n      avg_c: number | unknown;\n      avg_d: number | unknown;\n      avg_f: number | unknown;\n      avg_w: number | unknown;\n      full_name: string | unknown;\n    }\n  ];\n  raw: Array<{\n    instructor_gt_username: string | unknown;\n    instructor_name: string | unknown;\n    link: string | unknown;\n    class_size_group: string | unknown;\n    GPA: number | unknown;\n    A: number | unknown;\n    B: number | unknown;\n    C: number | unknown;\n    D: number | unknown;\n    F: number | unknown;\n    W: number | unknown;\n    sections: number | unknown;\n  }>;\n}\n","import axios from 'axios';\nimport cheerio from 'cheerio';\n\nimport { unique } from '../utils';\nimport { DELIVERY_MODES, BACKEND_BASE_URL } from '../constants';\nimport Course from './Course';\nimport Oscar from './Oscar';\nimport { CrawlerMeeting, Meeting } from '../types';\n\nexport type Seating = [\n  seating:\n    | [] // Loading state\n    | [\n        // Loaded state\n        seatsCurrent: number,\n        seatsTotal: number,\n        waitlistCurrent: number,\n        waitlistTotal: number\n      ]\n    | string[], // Error state\n  fetchTime: number\n];\n\ntype SectionConstructionData = [\n  crn: string,\n  meetings: CrawlerMeeting[],\n  credits: number,\n  scheduleTypeIndex: number,\n  campusIndex: number,\n  attributeIndices: number[],\n  gradeBasisIndex: number\n];\n\nexport default class Section {\n  course: Course;\n\n  id: string;\n\n  crn: string;\n\n  seating: Seating;\n\n  credits: number;\n\n  scheduleType: string;\n\n  campus: string;\n\n  deliveryMode: string | undefined;\n\n  gradeBasis: string;\n\n  meetings: Meeting[];\n\n  instructors: string[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLabs: Section[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLectures: Section[];\n\n  constructor(\n    oscar: Oscar,\n    course: Course,\n    sectionId: string,\n    data: SectionConstructionData\n  ) {\n    const [\n      crn,\n      meetings,\n      credits,\n      scheduleTypeIndex,\n      campusIndex,\n      attributeIndices,\n      gradeBasisIndex,\n    ] = data;\n\n    this.course = course;\n    this.id = sectionId;\n    this.crn = crn;\n    this.seating = [[], 0];\n    this.credits = credits;\n    this.scheduleType = oscar.scheduleTypes[scheduleTypeIndex] ?? 'unknown';\n    this.campus = oscar.campuses[campusIndex] ?? 'unknown';\n\n    const attributes = attributeIndices\n      .map((attributeIndex) => oscar.attributes[attributeIndex])\n      .flatMap((attribute) => (attribute == null ? [] : [attribute]));\n    this.deliveryMode = attributes.find(\n      (attribute) => attribute in DELIVERY_MODES\n    );\n\n    this.gradeBasis = oscar.gradeBases[gradeBasisIndex] ?? 'unknown';\n    this.meetings = meetings.map<Meeting>(\n      ([\n        periodIndex,\n        days,\n        where,\n        locationIndex,\n        instructors,\n        dateRangeIndex,\n      ]) => ({\n        period: oscar.periods[periodIndex],\n        days: days === '&nbsp;' ? [] : days.split(''),\n        where,\n        location: oscar.locations[locationIndex] ?? null,\n        instructors: instructors.map((instructor) =>\n          instructor.replace(/ \\(P\\)$/, '')\n        ),\n        // We need some fallback here\n        dateRange: oscar.dateRanges[dateRangeIndex] ?? {\n          from: new Date(),\n          to: new Date(),\n        },\n      })\n    );\n    this.instructors = unique(\n      this.meetings\n        .map<string[]>(({ instructors }) => instructors)\n        .reduce((accum, instructors) => [...accum, ...instructors], [])\n    );\n\n    // These fields are initialized after construction\n    // inside `Course.constructor`\n    this.associatedLabs = [];\n    this.associatedLectures = [];\n  }\n\n  async fetchSeating(term: string): Promise<Seating> {\n    const prevDate = this.seating[1];\n    const currDate = Date.now();\n\n    if (currDate - prevDate > 300000) {\n      const url = `${BACKEND_BASE_URL}/proxy/class_section?term=${term}&crn=${this.crn}`;\n      return axios({\n        url,\n        method: 'get',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          'Content-Type': 'text/html',\n        },\n      })\n        .then((response) => {\n          const $ = cheerio.load(response.data);\n          const availabilityTable = $('.datadisplaytable .datadisplaytable');\n          const tableRow = availabilityTable.find('tr');\n\n          this.seating = [\n            [\n              parseInt(tableRow.eq(1).children('td').first().text(), 10),\n              parseInt(tableRow.eq(1).children('td').eq(1).text(), 10),\n              parseInt(tableRow.eq(2).children('td').first().text(), 10),\n              parseInt(tableRow.eq(2).children('td').eq(1).text(), 10),\n            ],\n            currDate,\n          ];\n\n          return this.seating;\n        })\n        .catch(() => [new Array(4).fill('N/A'), currDate]);\n    }\n    return this.seating;\n  }\n}\n","import { Combination } from '../types';\n\nexport default class SortingOption {\n  label: string;\n\n  calculateFactor: (combo: Combination) => number;\n\n  constructor(label: string, calculateFactor: (combo: Combination) => number) {\n    this.label = label;\n    this.calculateFactor = calculateFactor;\n  }\n}\n","import axios from 'axios';\n\nimport { BACKEND_BASE_URL } from '../constants';\n\nexport default async function FormSubmit({\n  rating,\n  feedback,\n}: {\n  rating: number;\n  feedback: string;\n}): Promise<void> {\n  const url = `${BACKEND_BASE_URL}/feedback`;\n  await axios({\n    method: 'post',\n    url,\n    data: {\n      rating,\n      feedback,\n    },\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n  });\n}\n","import { Course, Section, SortingOption } from '.';\nimport { hasConflictBetween, stringToTime } from '../utils';\nimport {\n  Combination,\n  Period,\n  DateRange,\n  Location,\n  CrawlerTermData,\n} from '../types';\nimport { ErrorWithFields, softError } from '../log';\n\n// `new Oscar(...)` gets the entirety of the crawler JSON data\ntype OscarConstructionDate = CrawlerTermData;\n\nexport default class Oscar {\n  periods: (Period | undefined)[];\n\n  dateRanges: DateRange[];\n\n  scheduleTypes: string[];\n\n  campuses: string[];\n\n  attributes: string[];\n\n  gradeBases: string[];\n\n  locations: (Location | null)[];\n\n  updatedAt: Date;\n\n  version: number;\n\n  courses: Course[];\n\n  courseMap: Record<string, Course>;\n\n  crnMap: Record<string, Section>;\n\n  sortingOptions: SortingOption[];\n\n  constructor(data: OscarConstructionDate) {\n    const { courses, caches, updatedAt, version } = data;\n\n    this.periods = caches.periods.map((period, i) => {\n      if (period === 'TBA') {\n        return undefined;\n      }\n\n      const periodSegments = period.split(' - ');\n      if (periodSegments.length !== 2) {\n        softError(\n          new ErrorWithFields({\n            message: 'period did not follow expected format',\n            fields: {\n              period,\n              cacheIndex: i,\n            },\n          })\n        );\n        return undefined;\n      }\n\n      const [start, end] = periodSegments as [string, string];\n      return {\n        start: stringToTime(start),\n        end: stringToTime(end),\n      };\n    });\n\n    this.dateRanges = caches.dateRanges.map((dateRange, i) => {\n      let segments = dateRange.split(' - ');\n      if (segments.length !== 2) {\n        softError(\n          new ErrorWithFields({\n            message: 'date range did not follow expected format',\n            fields: {\n              dateRange,\n              cacheIndex: i,\n            },\n          })\n        );\n        // We need some fallback here\n        segments = ['Jan 1, 1970', 'Jan 2, 1970'];\n      }\n\n      const [from, to] = segments.map((v) => new Date(v)) as [Date, Date];\n      from.setHours(0);\n      to.setHours(23, 59, 59, 999);\n      return { from, to };\n    });\n\n    this.scheduleTypes = caches.scheduleTypes;\n    this.campuses = caches.campuses;\n    this.attributes = caches.attributes;\n    this.gradeBases = caches.gradeBases;\n    this.locations = caches.locations;\n    this.updatedAt = new Date(updatedAt);\n    this.version = version;\n\n    this.courses = Object.entries(courses).flatMap(([courseId, source]) => {\n      try {\n        return [new Course(this, courseId, source)];\n      } catch (err) {\n        softError(\n          new ErrorWithFields({\n            message: 'could not initialize Course bean',\n            fields: {\n              courseId,\n              source,\n            },\n          })\n        );\n        return [];\n      }\n    });\n\n    this.courseMap = {};\n    this.crnMap = {};\n    this.courses.forEach((course) => {\n      this.courseMap[course.id] = course;\n      course.sections.forEach((section) => {\n        this.crnMap[section.crn] = section;\n      });\n    });\n\n    this.sortingOptions = [\n      new SortingOption('Most Compact', (combination) => {\n        const { startMap, endMap } = combination;\n        const diffs = Object.keys(startMap).map((day) => {\n          const end = endMap[day];\n          const start = startMap[day];\n          if (end == null || start == null) return 0;\n          return end - start;\n        });\n        const sum = diffs.reduce((tot, min) => tot + min, 0);\n        return +sum;\n      }),\n      new SortingOption('Earliest Ending', (combination) => {\n        const { endMap } = combination;\n        const ends = Object.values(endMap);\n        const sum = ends.reduce<number>((tot, end) => tot + (end ?? 0), 0);\n        const avg = sum / ends.length;\n        return +avg;\n      }),\n      new SortingOption('Latest Beginning', (combination) => {\n        const { startMap } = combination;\n        const starts = Object.values(startMap);\n        const sum = starts.reduce<number>((tot, min) => tot + (min ?? 0), 0);\n        const avg = sum / starts.length;\n        return -avg;\n      }),\n    ];\n  }\n\n  findCourse(courseId: string): Course | undefined {\n    return this.courseMap[courseId];\n  }\n\n  findSection(crn: string): Section | undefined {\n    return this.crnMap[crn];\n  }\n\n  getCombinations(\n    desiredCourses: string[],\n    pinnedCrns: string[],\n    excludedCrns: string[]\n  ): Combination[] {\n    const crnsList: string[][] = [];\n    const dfs = (courseIndex = 0, crns: string[] = []): void => {\n      if (courseIndex === desiredCourses.length) {\n        crnsList.push(crns);\n        return;\n      }\n      const courseId = desiredCourses[courseIndex];\n      if (courseId === undefined) return;\n      const course = this.findCourse(courseId);\n      if (course === undefined) return;\n      const isIncluded = (section: Section): boolean =>\n        !excludedCrns.includes(section.crn);\n      const isPinned = (section: Section): boolean =>\n        pinnedCrns.includes(section.crn);\n      const hasConflict = (section: Section): boolean =>\n        [...pinnedCrns, ...crns].some((crn) => {\n          const crnSection = this.findSection(crn);\n          if (crnSection === undefined) return false;\n          return hasConflictBetween(crnSection, section);\n        });\n      if (course.hasLab) {\n        // If a course has a lab, then `onlyLectures`, `onlyLabs`,\n        // and `allInOnes` should be non-undefined, but we have to check\n        // anyways here to satisfy TypeScript\n        const pinnedOnlyLecture = (course.onlyLectures ?? []).find(isPinned);\n        const pinnedOnlyLab = (course.onlyLabs ?? []).find(isPinned);\n        const pinnedAllInOne = (course.allInOnes ?? []).find(isPinned);\n        if ((pinnedOnlyLecture && pinnedOnlyLab) || pinnedAllInOne) {\n          dfs(courseIndex + 1, crns);\n        } else if (pinnedOnlyLecture) {\n          pinnedOnlyLecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n            if (hasConflict(lab)) return;\n            dfs(courseIndex + 1, [...crns, lab.crn]);\n          });\n        } else if (pinnedOnlyLab) {\n          pinnedOnlyLab.associatedLectures\n            .filter(isIncluded)\n            .forEach((lecture) => {\n              if (hasConflict(lecture)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn]);\n            });\n        } else {\n          (course.onlyLectures ?? []).filter(isIncluded).forEach((lecture) => {\n            if (hasConflict(lecture)) return;\n            lecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n              if (hasConflict(lab)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn, lab.crn]);\n            });\n          });\n          (course.allInOnes ?? []).filter(isIncluded).forEach((section) => {\n            if (hasConflict(section)) return;\n            dfs(courseIndex + 1, [...crns, section.crn]);\n          });\n        }\n      } else if (course.sections.some(isPinned)) {\n        dfs(courseIndex + 1, crns);\n      } else {\n        // If a course does not have a lab, then `sectionGroups` should be\n        // non-undefined, but we have to check anyways here to satisfy\n        // TypeScript\n        Object.values(course.sectionGroups ?? {}).forEach((sectionGroup) => {\n          if (sectionGroup == null) return;\n          const section = sectionGroup.sections.find(isIncluded);\n          if (!section || hasConflict(section)) return;\n          dfs(courseIndex + 1, [...crns, section.crn]);\n        });\n      }\n    };\n    dfs();\n    return crnsList.map((crns) => {\n      const startMap: Record<string, number> = {};\n      const endMap: Record<string, number> = {};\n      this.iterateTimeBlocks([...pinnedCrns, ...crns], (day, period) => {\n        if (period === undefined) return;\n        const end = endMap[day];\n        const start = startMap[day];\n        if (start == null || start > period.start) startMap[day] = period.start;\n        if (end == null || end < period.end) endMap[day] = period.end;\n      });\n      return {\n        crns,\n        startMap,\n        endMap,\n      };\n    });\n  }\n\n  sortCombinations(\n    combinations: Combination[],\n    sortingOptionIndex: number\n  ): Combination[] {\n    const sortingOption = this.sortingOptions[sortingOptionIndex];\n    if (sortingOption === undefined) {\n      throw new ErrorWithFields({\n        message: `sorting option index was out of bounds`,\n        fields: {\n          sortingOptionIndex,\n          actualSortingOptionsLength: this.sortingOptions.length,\n        },\n      });\n    }\n\n    return combinations\n      .map((combination) => ({\n        ...combination,\n        factor: sortingOption.calculateFactor(combination),\n      }))\n      .sort((a, b) => a.factor - b.factor);\n  }\n\n  iterateTimeBlocks(\n    crns: string[],\n    callback: (day: string, period: Period | undefined) => void\n  ): void {\n    crns.forEach((crn) => {\n      const section = this.findSection(crn);\n      if (section !== undefined) {\n        section.meetings.forEach(\n          (meeting) =>\n            meeting.period &&\n            meeting.days.forEach((day) => {\n              callback(day, meeting.period);\n            })\n        );\n      }\n    });\n  }\n}\n\n/**\n * Create an empty instance of the Oscar bean\n * to use as the default context value\n */\nexport const EMPTY_OSCAR = new Oscar({\n  courses: {},\n  caches: {\n    periods: [],\n    dateRanges: [],\n    scheduleTypes: [],\n    campuses: [],\n    attributes: [],\n    gradeBases: [],\n    locations: [],\n  },\n  updatedAt: new Date(),\n  version: 1,\n});\n","import React from 'react';\n\nimport { Theme, defaultTermData, TermData } from '../types';\nimport Oscar, { EMPTY_OSCAR } from '../beans/Oscar';\nimport { ErrorWithFields } from '../log';\n\ntype Setter<T> = (next: T) => void;\n\nexport type ThemeContextValue = [Theme, Setter<Theme>];\nexport const ThemeContext = React.createContext<ThemeContextValue>([\n  'light',\n  (): void => {\n    throw new ErrorWithFields({\n      message: 'empty ThemeContext.setTheme value being used',\n    });\n  },\n]);\n\nexport type TermsContextValue = [string[], Setter<string[]>];\nexport const TermsContext = React.createContext<TermsContextValue>([\n  [],\n  (): void => {\n    throw new ErrorWithFields({\n      message: 'empty TermsContext.setTerms value being used',\n    });\n  },\n]);\n\nexport type TermContextData = {\n  term: string;\n  oscar: Oscar;\n} & TermData;\nexport type TermContextSetters = {\n  setTerm: Setter<string>;\n  setOscar: Setter<Oscar>;\n  patchTermData: Setter<Partial<TermData>>;\n};\nexport type TermContextValue = [TermContextData, TermContextSetters];\nexport const TermContext = React.createContext<TermContextValue>([\n  {\n    term: '',\n    oscar: EMPTY_OSCAR,\n    ...defaultTermData,\n  },\n  {\n    setTerm: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty TermContext.setTerm value being used',\n      });\n    },\n    setOscar: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty TermContext.setOscar value being used',\n      });\n    },\n    patchTermData: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty TermContext.patchTermData value being used',\n      });\n    },\n  },\n]);\n\nexport type OverlayCrnsContextValue = [string[], Setter<string[]>];\nexport const OverlayCrnsContext = React.createContext<OverlayCrnsContextValue>([\n  [],\n  (): void => {\n    throw new ErrorWithFields({\n      message: 'empty OverlayCrnsContext.setOverlayCrns value being used',\n    });\n  },\n]);\n","import React, { useContext } from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { classes, getContentClassName, periodToString } from '../../utils';\nimport { CLOSE, OPEN, DAYS } from '../../constants';\nimport { TermContext } from '../../contexts';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport interface TimeBlockPosition {\n  rowIndex: number;\n  rowSize: number;\n  period: Period;\n  crn: string;\n}\n\nexport type SizeInfo = Record<string, Record<string, TimeBlockPosition>>;\n\nexport type TimeBlocksProps = {\n  className?: string;\n  crn: string;\n  overlay?: boolean;\n  capture: boolean;\n  preview: boolean;\n  isAutosized: boolean;\n  sizeInfo: SizeInfo;\n};\n\nexport function makeSizeInfoKey(period: Period): string {\n  return [period.start, period.end].join('-');\n}\n\nexport default function TimeBlocks({\n  className,\n  crn,\n  overlay = false,\n  preview,\n  capture,\n  isAutosized,\n  sizeInfo,\n}: TimeBlocksProps): React.ReactElement | null {\n  const [{ oscar, colorMap }] = useContext(TermContext);\n\n  const section = oscar.findSection(crn);\n  if (section == null) return null;\n\n  const color = colorMap[section.course.id];\n  const contentClassName = getContentClassName(color);\n\n  return (\n    <div\n      className={classes(\n        'TimeBlocks',\n        capture && 'capture',\n        overlay && 'overlay',\n        className\n      )}\n    >\n      {section.meetings.map((meeting, i) => {\n        const { period } = meeting;\n        if (period == null) return;\n\n        const sizeInfoKey = makeSizeInfoKey(period);\n        return meeting.days.map((day) => {\n          const sizeInfoDay = sizeInfo[day];\n          if (sizeInfoDay == null) return;\n          const sizeInfoPeriodDay = sizeInfoDay[sizeInfoKey];\n          if (sizeInfoPeriodDay == null) return;\n\n          return (\n            <div\n              className={classes('meeting', contentClassName, 'default', day)}\n              key={[i, day].join('-')}\n              style={{\n                top: `${((period.start - OPEN) / (CLOSE - OPEN)) * 100}%`,\n                height: `${\n                  ((period.end - period.start) / (CLOSE - OPEN)) * 100\n                }%`,\n                width: `${20 / sizeInfoPeriodDay.rowSize}%`,\n                left: `${\n                  DAYS.indexOf(day) * 20 +\n                  sizeInfoPeriodDay.rowIndex * (20 / sizeInfoPeriodDay.rowSize)\n                }%`,\n                backgroundColor: color,\n              }}\n              data-tip\n              data-for={crn}\n            >\n              {!preview && (\n                <div className=\"meeting-wrapper\">\n                  <div className=\"ids\">\n                    <span className=\"course-id\">{section.course.id}</span>\n                    <span className=\"section-id\">&nbsp;{section.id}</span>\n                  </div>\n                  <span className=\"period\">{periodToString(period)}</span>\n                  <span className=\"where\">{meeting.where}</span>\n                  <span className=\"instructors\">\n                    {meeting.instructors.join(', ')}\n                  </span>\n                </div>\n              )}\n            </div>\n          );\n        });\n      })}\n\n      {!isAutosized && (\n        <ReactTooltip\n          id={crn}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"top\"\n          effect=\"solid\"\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Course Name</b>\n                </td>\n                <td>{section.course.title}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Delivery Type</b>\n                </td>\n                <td>{section.deliveryMode}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Course Number</b>\n                </td>\n                <td>{section.crn}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Credit Hours</b>\n                </td>\n                <td>{section.credits}</td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport { CLOSE, DAYS, OPEN } from '../../constants';\nimport { classes, timeToShortString } from '../../utils';\nimport { TimeBlocks } from '..';\nimport { TermContext } from '../../contexts';\nimport { makeSizeInfoKey, TimeBlockPosition } from '../TimeBlocks';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport type CalendarProps = {\n  className?: string;\n  overlayCrns: string[];\n  preview?: boolean;\n  capture?: boolean;\n  isAutosized?: boolean;\n};\n\nexport default function Calendar({\n  className,\n  overlayCrns,\n  preview = false,\n  capture = false,\n  isAutosized = false,\n}: CalendarProps): React.ReactElement {\n  const [{ pinnedCrns, oscar }] = useContext(TermContext);\n\n  // Contains the rowIndex's and rowSize's passed into each crn's TimeBlocks\n  // e.g. crnSizeInfo[crn][day][\"period.start-period.end\"].rowIndex\n  const crnSizeInfo: Record<\n    string,\n    Record<string, Record<string, TimeBlockPosition>>\n  > = {};\n\n  // Recursively sets the rowSize of all time blocks within the current\n  // connected grouping of blocks to the current block's rowSize\n  const updateJoinedRowSizes = (\n    periodInfos: TimeBlockPosition[],\n    seen: Set<string>,\n    curCrn: string,\n    curPeriod: Period,\n    newRowSize: number\n  ): void => {\n    if (seen.has(curCrn)) {\n      return;\n    }\n    seen.add(curCrn);\n\n    periodInfos\n      .filter(\n        (period2Info) =>\n          period2Info.period.start < curPeriod.end &&\n          period2Info.period.end > curPeriod.start\n      )\n      .forEach((period2Info) => {\n        period2Info.rowSize = newRowSize;\n        updateJoinedRowSizes(\n          periodInfos,\n          seen,\n          period2Info.crn,\n          period2Info.period,\n          newRowSize\n        );\n      });\n  };\n\n  const crns = Array.from(new Set([...pinnedCrns, ...(overlayCrns || [])]));\n  const maxMeetingLen = (crn: string): number => {\n    const section = oscar.findSection(crn);\n    if (section == null) return 0;\n    return Math.max(\n      ...section.meetings.flatMap(({ period }) => {\n        if (period == null) return [];\n        return [period.end - period.start];\n      })\n    );\n  };\n\n  crns.sort((a, b) => maxMeetingLen(a) - maxMeetingLen(b));\n\n  // Populates crnSizeInfo by iteratively finding the next time block's\n  // rowSize and rowIndex (1 more than greatest of already processed connected\n  // blocks), updating the processed connected blocks to match its rowSize\n  crns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n\n    section.meetings\n      .filter((m) => m.period)\n      .forEach((meeting) => {\n        const { period } = meeting;\n        if (period == null) return;\n\n        meeting.days.forEach((day) => {\n          const dayPeriodInfos = Object.values(crnSizeInfo)\n            .flatMap<TimeBlockPosition | undefined>((days) =>\n              days != null ? Object.values(days[day] ?? {}) : []\n            )\n            .flatMap<TimeBlockPosition>((info) => (info == null ? [] : [info]));\n\n          const curRowSize = dayPeriodInfos\n            .filter(\n              (period2Info) =>\n                period2Info.period.start < period.end &&\n                period2Info.period.end > period.start\n            )\n            .reduce(\n              (acc, period2Info) => Math.max(acc, period2Info.rowSize + 1),\n              1\n            );\n\n          updateJoinedRowSizes(\n            dayPeriodInfos,\n            new Set(),\n            crn,\n            period,\n            curRowSize\n          );\n\n          const courseSizeInfo = crnSizeInfo[crn] || {};\n          crnSizeInfo[crn] = courseSizeInfo;\n\n          const daySizeInfo = courseSizeInfo[day] || {};\n          courseSizeInfo[day] = daySizeInfo;\n\n          daySizeInfo[makeSizeInfoKey(period)] = {\n            period,\n            crn,\n            rowIndex: curRowSize - 1,\n            rowSize: curRowSize,\n          };\n        });\n      });\n  });\n\n  return (\n    <div\n      className={classes(\n        'Calendar',\n        capture && 'capture',\n        preview && 'preview',\n        className\n      )}\n    >\n      {!preview && (\n        <div className=\"times\">\n          {new Array((CLOSE - OPEN) / 60).fill(0).map((_, i) => {\n            const time = OPEN + i * 60;\n            return (\n              <div className=\"time\" key={time}>\n                <span className=\"label\">{timeToShortString(time)}</span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {!preview && (\n        <div className=\"days\">\n          {DAYS.map((day) => (\n            <div className=\"day\" key={day}>\n              <span className=\"label\">{day}</span>\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"meetings\">\n        {pinnedCrns.map((crn) => (\n          <TimeBlocks\n            key={crn}\n            crn={crn}\n            preview={preview}\n            capture={capture}\n            isAutosized={isAutosized}\n            sizeInfo={crnSizeInfo[crn] ?? {}}\n          />\n        ))}\n        {overlayCrns &&\n          overlayCrns\n            .filter((crn) => !pinnedCrns.includes(crn))\n            .map((crn) => (\n              <TimeBlocks\n                key={crn}\n                crn={crn}\n                overlay={!preview}\n                preview={preview}\n                capture={capture}\n                isAutosized\n                sizeInfo={crnSizeInfo[crn] ?? {}}\n              />\n            ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport { Button, Calendar, Select } from '..';\nimport { OverlayCrnsContext, TermContext } from '../../contexts';\nimport { Combination } from '../../types';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function CombinationContainer(): React.ReactElement {\n  const [\n    { oscar, desiredCourses, pinnedCrns, excludedCrns, sortingOptionIndex },\n    { patchTermData },\n  ] = useContext(TermContext);\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n\n  const handleResetPinnedCrns = useCallback(() => {\n    if (window.confirm('Are you sure to reset sections you selected?')) {\n      patchTermData({\n        pinnedCrns: [],\n      });\n    }\n  }, [patchTermData]);\n\n  const combinations = useMemo(\n    () => oscar.getCombinations(desiredCourses, pinnedCrns, excludedCrns),\n    [oscar, desiredCourses, pinnedCrns, excludedCrns]\n  );\n  const sortedCombinations = useMemo(\n    () => oscar.sortCombinations(combinations, sortingOptionIndex),\n    [oscar, combinations, sortingOptionIndex]\n  );\n\n  return (\n    <div className=\"CombinationContainer\">\n      <Select\n        onChange={(newSortingOptionIndex): void =>\n          patchTermData({ sortingOptionIndex: newSortingOptionIndex })\n        }\n        value={sortingOptionIndex}\n        options={oscar.sortingOptions.map((sortingOption, i) => ({\n          value: i,\n          label: sortingOption.label,\n        }))}\n      />\n      <Button\n        className=\"reset\"\n        onClick={handleResetPinnedCrns}\n        disabled={pinnedCrns.length === 0}\n      >\n        Reset Sections\n      </Button>\n      <div className=\"scroller\">\n        <AutoSizer>\n          {({ width, height }): React.ReactElement => (\n            <List\n              width={width}\n              height={height}\n              style={{ outline: 'none' }}\n              rowCount={sortedCombinations.length}\n              rowHeight={108}\n              rowRenderer={({ index, key, style }): React.ReactElement => {\n                const { crns } = sortedCombinations[index] as Combination;\n                return (\n                  <div className=\"list-item\" style={style} key={key}>\n                    <div\n                      className=\"combination\"\n                      onMouseEnter={(): void => setOverlayCrns(crns)}\n                      onMouseLeave={(): void => setOverlayCrns([])}\n                      onClick={(): void =>\n                        patchTermData({\n                          pinnedCrns: [...pinnedCrns, ...crns],\n                        })\n                      }\n                    >\n                      <div className=\"number\">{index + 1}</div>\n                      <Calendar\n                        className=\"calendar-preview\"\n                        overlayCrns={crns}\n                        isAutosized\n                        preview\n                      />\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faInfoCircle,\n  faShareAlt,\n  faPalette,\n  faPlus,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, getContentClassName } from '../../utils';\nimport { ActionRow, Instructor, Palette, Prerequisite } from '..';\nimport { TermContext } from '../../contexts';\nimport { Course as CourseBean, Section } from '../../beans';\nimport { CourseGpa, CrawlerPrerequisites } from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\n\nexport type CourseProps = {\n  className?: string;\n  courseId: string;\n  onAddCourse?: () => void;\n};\n\nexport default function Course({\n  className,\n  courseId,\n  onAddCourse,\n}: CourseProps): React.ReactElement | null {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [prereqOpen, setPrereqOpen] = useState<boolean>(false);\n  const [paletteShown, setPaletteShown] = useState<boolean>(false);\n  const [gpaMap, setGpaMap] = useState<CourseGpa | null>(null);\n  const isSearching = Boolean(onAddCourse);\n  const [\n    { oscar, term, desiredCourses, pinnedCrns, excludedCrns, colorMap },\n    { patchTermData },\n  ] = useContext(TermContext);\n\n  useEffect(() => {\n    if (!isSearching) {\n      const course = oscar.findCourse(courseId);\n      if (course == null) return;\n      course\n        .fetchGpa()\n        .then(setGpaMap)\n        .catch((err) => {\n          softError(\n            new ErrorWithFields({\n              message: 'error fetching course GPA',\n              source: err,\n              fields: {\n                courseId,\n              },\n            })\n          );\n        });\n    }\n  }, [isSearching, oscar, courseId]);\n\n  const handleRemoveCourse = useCallback(\n    (course: CourseBean) => {\n      const newColorMap = { ...colorMap };\n      delete newColorMap[course.id];\n\n      patchTermData({\n        desiredCourses: desiredCourses.filter((id) => id !== course.id),\n        pinnedCrns: pinnedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        excludedCrns: excludedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        colorMap: newColorMap,\n      });\n    },\n    [desiredCourses, pinnedCrns, excludedCrns, colorMap, patchTermData]\n  );\n\n  const handleIncludeSections = useCallback(\n    (sections: Section[]) => {\n      const crns = sections.map((section) => section.crn);\n      patchTermData({\n        excludedCrns: excludedCrns.filter((crn) => !crns.includes(crn)),\n      });\n    },\n    [excludedCrns, patchTermData]\n  );\n\n  const course = oscar.findCourse(courseId);\n  if (course == null) return null;\n\n  const color = colorMap[course.id];\n  const contentClassName = color != null && getContentClassName(color);\n\n  const hasPrereqs = oscar.version > 1;\n  let prereqs: CrawlerPrerequisites | null = null;\n  if (hasPrereqs) {\n    prereqs = course.prereqs ?? [];\n  }\n\n  const instructorMap: Record<string, Section[] | undefined> = {};\n  course.sections.forEach((section) => {\n    const [primaryInstructor = 'Not Assigned'] = section.instructors;\n\n    const instructorSections = instructorMap[primaryInstructor] ?? [];\n    instructorSections.push(section);\n    instructorMap[primaryInstructor] = instructorSections;\n  });\n\n  const instructors = Object.keys(instructorMap);\n  const excludedInstructors = instructors.filter((instructor) => {\n    const sections = instructorMap[instructor];\n    if (sections == null) return false;\n    return sections.every((section) => excludedCrns.includes(section.crn));\n  });\n  const includedInstructors = instructors.filter(\n    (instructor) => !excludedInstructors.includes(instructor)\n  );\n\n  const prereqControl = (\n    nextPrereqOpen: boolean,\n    nextExpanded: boolean\n  ): void => {\n    setPrereqOpen(nextPrereqOpen);\n    setExpanded(nextExpanded);\n  };\n  const prereqAction = {\n    icon: faShareAlt,\n    styling: { transform: 'rotate(90deg)' },\n    onClick: (): void => {\n      prereqControl(true, !prereqOpen ? true : !expanded);\n    },\n  };\n\n  const infoAction = {\n    icon: faInfoCircle,\n    href:\n      `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n      `course_detail?cat_term_in=${term}&subj_code_in=` +\n      `${course.subject}&crse_numb_in=${course.number}`,\n  };\n\n  const pinnedSections = course.sections.filter((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n  const totalCredits = pinnedSections.reduce(\n    (credits, section) => credits + section.credits,\n    0\n  );\n\n  return (\n    <div\n      className={classes('Course', contentClassName, 'default', className)}\n      style={{ backgroundColor: color }}\n      key={course.id}\n    >\n      <ActionRow\n        label={[\n          course.id,\n          pinnedSections.map((section) => section.id).join(', '),\n        ].join(' ')}\n        actions={\n          isSearching\n            ? [\n                { icon: faPlus, onClick: onAddCourse },\n                hasPrereqs ? prereqAction : infoAction,\n              ]\n            : [\n                {\n                  icon: expanded ? faAngleUp : faAngleDown,\n                  onClick: (): void => prereqControl(false, !expanded),\n                },\n                hasPrereqs ? prereqAction : infoAction,\n                {\n                  icon: faPalette,\n                  onClick: (): void => setPaletteShown(!paletteShown),\n                },\n                {\n                  icon: faTrash,\n                  onClick: (): void => handleRemoveCourse(course),\n                },\n              ]\n        }\n      >\n        <div className=\"course-row\">\n          <span className=\"course-title\">{course.title}</span>\n          <span className=\"section-crns\">\n            {pinnedSections.map((section) => section.crn).join(', ')}\n          </span>\n        </div>\n        {!isSearching && (\n          <div className=\"course-row\">\n            <span className=\"gpa\">\n              Course GPA:{' '}\n              {gpaMap === null\n                ? 'Loading...'\n                : gpaMap.averageGpa\n                ? gpaMap.averageGpa.toFixed(2)\n                : 'N/A'}\n            </span>\n            {totalCredits > 0 && (\n              <span className=\"credits\">{totalCredits} Credits</span>\n            )}\n          </div>\n        )}\n        {paletteShown && (\n          <Palette\n            className=\"palette\"\n            onSelectColor={(col): void =>\n              patchTermData({ colorMap: { ...colorMap, [courseId]: col } })\n            }\n            color={color ?? null}\n            onMouseLeave={(): void => setPaletteShown(false)}\n          />\n        )}\n      </ActionRow>\n      {expanded && !prereqOpen && (\n        <div className={classes('hover-container', 'nested')}>\n          {includedInstructors.map((name) => {\n            let instructorGpa: number | undefined = 0;\n            if (gpaMap !== null) {\n              instructorGpa = gpaMap[name];\n            }\n            return (\n              <Instructor\n                key={name}\n                color={color}\n                name={name}\n                sections={instructorMap[name] ?? []}\n                gpa={\n                  gpaMap === null\n                    ? 'Loading...'\n                    : instructorGpa\n                    ? instructorGpa.toFixed(2)\n                    : 'N/A'\n                }\n              />\n            );\n          })}\n          {excludedInstructors.length > 0 && (\n            <div className=\"excluded-instructor-container\">\n              {excludedInstructors.map((name) => (\n                <span\n                  className=\"excluded-instructor\"\n                  key={name}\n                  onClick={(): void => {\n                    const instructorSections = instructorMap[name];\n                    if (instructorSections == null) return;\n                    handleIncludeSections(instructorSections);\n                  }}\n                >\n                  {name}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      {expanded && prereqOpen && prereqs !== null && (\n        <Prerequisite course={course} prereqs={prereqs} />\n      )}\n    </div>\n  );\n}\n","import React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { Course, CourseFilter } from '..';\nimport { classes, getRandomColor } from '../../utils';\nimport { ASYNC_DELIVERY_MODE, CAMPUSES, DELIVERY_MODES } from '../../constants';\nimport { TermContext } from '../../contexts';\nimport { Course as CourseBean, Section } from '../../beans';\n\nimport './stylesheet.scss';\n\nexport type CourseAddProps = {\n  className?: string;\n};\n\ntype SortKey = 'deliveryMode' | 'campus';\n\ntype SortFilter = {\n  [sortKey in SortKey]: string[];\n};\n\nfunction isSortKey(sortKey: string): sortKey is SortKey {\n  switch (sortKey) {\n    case 'deliveryMode':\n    case 'campus':\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction doesFilterMatchCourse(\n  course: CourseBean,\n  filter: SortFilter\n): boolean {\n  return Object.entries(filter).every(([key, tags]) => {\n    if (!isSortKey(key)) return true;\n\n    return (\n      tags.length === 0 ||\n      course.sections.some((section) => {\n        const sortValue = section[key];\n        if (sortValue == null) return false;\n\n        return tags.includes(sortValue);\n      })\n    );\n  });\n}\n\nfunction doesFilterMatchSection(section: Section, filter: SortFilter): boolean {\n  return Object.entries(filter).every(([key, tags]) => {\n    if (tags.length === 0) return true;\n    if (!isSortKey(key)) return true;\n\n    const sortValue = section[key];\n    if (sortValue == null) return false;\n\n    return tags.includes(sortValue);\n  });\n}\n\nexport default function CourseAdd({\n  className,\n}: CourseAddProps): React.ReactElement {\n  const [\n    { oscar, desiredCourses, excludedCrns, colorMap },\n    { patchTermData },\n  ] = useContext(TermContext);\n  const [keyword, setKeyword] = useState('');\n  const [filter, setFilter] = useState<SortFilter>({\n    deliveryMode: [],\n    campus: [],\n  });\n  const [activeIndex, setActiveIndex] = useState(0);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleChangeKeyword = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      let input = e.target.value.trim();\n      const results = /^([A-Z]+)(\\d.*)$/i.exec(input);\n      if (results != null) {\n        const [, subject, number] = (results as unknown) as [\n          string,\n          string,\n          string\n        ];\n        input = `${subject} ${number}`;\n      }\n      setKeyword(input);\n    },\n    []\n  );\n\n  const courses = useMemo(() => {\n    const results = /^([A-Z]+) ?((\\d.*)?)$/i.exec(keyword.toUpperCase());\n    if (!results) {\n      return [];\n    }\n    const [, subject, number] = (results as unknown) as [\n      string,\n      string,\n      string\n    ];\n\n    setActiveIndex(0);\n\n    return oscar.courses\n      .filter((course) => {\n        const keywordMatch =\n          course.subject === subject && course.number.startsWith(number);\n        const filterMatch = doesFilterMatchCourse(course, filter);\n        return keywordMatch && filterMatch;\n      })\n      .filter((course) => !desiredCourses.includes(course.id));\n  }, [oscar, keyword, filter, desiredCourses]);\n\n  const handleAddCourse = useCallback(\n    (course: CourseBean) => {\n      if (desiredCourses.includes(course.id)) return;\n      const toBeExcludedCrns = course.sections\n        .filter((section) => {\n          const timeDecided =\n            section.deliveryMode === ASYNC_DELIVERY_MODE ||\n            (section.meetings.length &&\n              section.meetings.every(\n                (meeting) => meeting.days.length && meeting.period\n              ));\n          const filterMatch = doesFilterMatchSection(section, filter);\n          return !timeDecided || !filterMatch;\n        })\n        .map((section) => section.crn);\n      patchTermData({\n        desiredCourses: [...desiredCourses, course.id],\n        excludedCrns: [...excludedCrns, ...toBeExcludedCrns],\n        colorMap: { ...colorMap, [course.id]: getRandomColor() },\n      });\n      setKeyword('');\n      inputRef.current?.focus();\n    },\n    [filter, desiredCourses, excludedCrns, colorMap, inputRef, patchTermData]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      switch (e.key) {\n        case 'Enter': {\n          const course = courses[activeIndex];\n          if (course != null) {\n            handleAddCourse(course);\n          }\n          break;\n        }\n        case 'ArrowDown':\n          setActiveIndex(Math.min(activeIndex + 1, courses.length - 1));\n          break;\n        case 'ArrowUp':\n          setActiveIndex(Math.max(activeIndex - 1, 0));\n          break;\n        default:\n          return;\n      }\n      e.preventDefault();\n    },\n    [courses, handleAddCourse, activeIndex]\n  );\n\n  const handleToggleFilter = useCallback(\n    (key: SortKey, tag: string) => {\n      const tags = filter[key];\n      setFilter({\n        ...filter,\n        [key]: tags.includes(tag)\n          ? tags.filter((v) => v !== tag)\n          : [...tags, tag],\n      });\n    },\n    [filter]\n  );\n\n  const handleResetFilter = useCallback(\n    (key) => {\n      setFilter({\n        ...filter,\n        [key]: [],\n      });\n    },\n    [filter]\n  );\n\n  const activeCourse = courses[activeIndex];\n\n  return (\n    <div className={classes('CourseAdd', className)}>\n      <div className=\"add\">\n        <div className=\"primary\">\n          <FontAwesomeIcon\n            className={classes('icon', courses.length > 0 && 'active')}\n            fixedWidth\n            icon={faPlus}\n          />\n          <div className=\"keyword-wrapper\">\n            {activeCourse && (\n              <div className={classes('keyword', 'autocomplete')}>\n                {activeCourse.id}\n              </div>\n            )}\n            <input\n              type=\"text\"\n              ref={inputRef}\n              value={keyword}\n              onChange={handleChangeKeyword}\n              className=\"keyword\"\n              placeholder=\"XX 0000\"\n              onKeyDown={handleKeyDown}\n            />\n          </div>\n        </div>\n        {[\n          ['Delivery Mode', 'deliveryMode', DELIVERY_MODES] as const,\n          ['Campus', 'campus', CAMPUSES] as const,\n        ].map(([name, property, labels]) => (\n          <CourseFilter\n            key={property}\n            name={name}\n            labels={labels}\n            selectedTags={filter[property]}\n            onReset={(): void => handleResetFilter(property)}\n            onToggle={(tag): void => handleToggleFilter(property, tag)}\n          />\n        ))}\n      </div>\n      {courses.length > 0 ? (\n        courses.map((course) => (\n          <Course\n            key={course.id}\n            className={classes(course === activeCourse && 'active')}\n            courseId={course.id}\n            onAddCourse={(): void => handleAddCourse(course)}\n          />\n        ))\n      ) : (\n        <div className=\"disclaimer\">\n          Disclaimer: GT Scheduler should be used as general reference only, and\n          users are solely responsible for ensuring any information including\n          registration restrictions.\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport ago from 's-ago';\n\nimport { Button, Course, CourseAdd } from '..';\nimport { TermContext } from '../../contexts';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function CourseContainer(): React.ReactElement {\n  const [{ oscar, desiredCourses }] = useContext(TermContext);\n\n  return (\n    <div className=\"CourseContainer\">\n      <div className=\"scroller\">\n        <div className=\"course-list\">\n          {desiredCourses.map((courseId) => {\n            return <Course courseId={courseId} key={courseId} />;\n          })}\n        </div>\n        <CourseAdd className=\"course-add\" />\n      </div>\n      <Button\n        className=\"updated-at\"\n        href=\"https://github.com/gt-scheduler/crawler\"\n      >\n        Course data fetched {ago(oscar.updatedAt)}\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes, humanizeArrayReact } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type CourseFilterProps = {\n  name: string;\n  labels: Record<string, string>;\n  selectedTags: string[];\n  onReset: () => void;\n  onToggle: (tag: string) => void;\n};\n\nexport default function CourseFilter({\n  name,\n  labels,\n  selectedTags,\n  onReset,\n  onToggle,\n}: CourseFilterProps): React.ReactElement {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"CourseFilter\">\n      <div\n        className={classes('header', selectedTags.length > 0 && 'active')}\n        onClick={(): void => setExpanded(!expanded)}\n      >\n        {!expanded && selectedTags.length > 0 ? (\n          <div className=\"name\">\n            {humanizeArrayReact(\n              selectedTags.flatMap<string>((tag) => {\n                const selectedTag = labels[tag];\n                return selectedTag != null ? [selectedTag] : [];\n              }),\n              <span className=\"or\">or</span>\n            )}\n          </div>\n        ) : (\n          <div className=\"name\">{name}</div>\n        )}\n        <FontAwesomeIcon fixedWidth icon={expanded ? faAngleUp : faAngleDown} />\n      </div>\n      {expanded && (\n        <div className=\"tag-container\">\n          <div\n            className={classes('tag', selectedTags.length === 0 && 'active')}\n            onClick={onReset}\n          >\n            All\n          </div>\n          {Object.keys(labels).map((tag) => (\n            <div\n              key={tag}\n              className={classes('tag', selectedTags.includes(tag) && 'active')}\n              property={tag}\n              onClick={(): void => onToggle(tag)}\n            >\n              {labels[tag]}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/* global saveAs, BlobBuilder */\n/* exported ics */\n\nconst ics = (uidDomain, prodId) => {\n  if (\n    navigator.userAgent.indexOf('MSIE') > -1 &&\n    navigator.userAgent.indexOf('MSIE 10') === -1\n  ) {\n    // eslint-disable-next-line no-console\n    console.log('Unsupported Browser');\n    return;\n  }\n\n  if (typeof uidDomain === 'undefined') {\n    uidDomain = 'default';\n  }\n  if (typeof prodId === 'undefined') {\n    prodId = 'Calendar';\n  }\n\n  const SEPARATOR = navigator.appVersion.indexOf('Win') !== -1 ? '\\r\\n' : '\\n';\n  const calendarEvents = [];\n  const calendarStart = [\n    'BEGIN:VCALENDAR',\n    `PRODID:${prodId}`,\n    'VERSION:2.0',\n  ].join(SEPARATOR);\n  const calendarEnd = `${SEPARATOR}END:VCALENDAR`;\n  const BYDAY_VALUES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n  return {\n    /**\n     * Returns events array\n     * @return {array} Events\n     */\n    events() {\n      return calendarEvents;\n    },\n\n    /**\n     * Returns calendar\n     * @return {string} Calendar in iCalendar format\n     */\n    calendar() {\n      return (\n        calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd\n      );\n    },\n\n    /**\n     * Add event to the calendar\n     * @param  {string} subject     Subject/Title of event\n     * @param  {string} description Description of event\n     * @param  {string} location    Location of event\n     * @param  {string} begin       Beginning date of event\n     * @param  {string} stop        Ending date of event\n     */\n    addEvent(subject, description, location, begin, stop, rrule) {\n      // I'm not in the mood to make these optional... So they are all required\n      if (\n        typeof subject === 'undefined' ||\n        typeof description === 'undefined' ||\n        typeof location === 'undefined' ||\n        typeof begin === 'undefined' ||\n        typeof stop === 'undefined'\n      ) {\n        return false;\n      }\n\n      // validate rrule\n      if (rrule) {\n        if (!rrule.rrule) {\n          if (\n            rrule.freq !== 'YEARLY' &&\n            rrule.freq !== 'MONTHLY' &&\n            rrule.freq !== 'WEEKLY' &&\n            rrule.freq !== 'DAILY'\n          ) {\n            throw new Error(\n              \"Recurrence rrule frequency must be provided and be one of the following: 'YEARLY', 'MONTHLY', 'WEEKLY', or 'DAILY'\"\n            );\n          }\n\n          if (rrule.until) {\n            if (Number.isNaN(Date.parse(rrule.until))) {\n              throw new Error(\n                \"Recurrence rrule 'until' must be a valid date string\"\n              );\n            }\n          }\n\n          if (rrule.interval) {\n            if (Number.isNaN(parseInt(rrule.interval, 10))) {\n              throw new Error(\"Recurrence rrule 'interval' must be an integer\");\n            }\n          }\n\n          if (rrule.count) {\n            if (Number.isNaN(parseInt(rrule.count, 10))) {\n              throw new Error(\"Recurrence rrule 'count' must be an integer\");\n            }\n          }\n\n          if (typeof rrule.byday !== 'undefined') {\n            if (\n              Object.prototype.toString.call(rrule.byday) !== '[object Array]'\n            ) {\n              throw new Error(\"Recurrence rrule 'byday' must be an array\");\n            }\n\n            if (rrule.byday.length > 7) {\n              throw new Error(\n                \"Recurrence rrule 'byday' array must not be longer than the 7 days in a week\"\n              );\n            }\n\n            // Filter any possible repeats\n            rrule.byday = rrule.byday.filter((elem, pos) => {\n              return rrule.byday.indexOf(elem) === pos;\n            });\n\n            for (const d in rrule.byday) {\n              if (BYDAY_VALUES.indexOf(rrule.byday[d]) < 0) {\n                throw new Error(\n                  \"Recurrence rrule 'byday' values must include only the following: 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'\"\n                );\n              }\n            }\n          }\n        }\n      }\n\n      // TODO add time and time zone? use moment to format?\n      const start_date = new Date(begin);\n      const end_date = new Date(stop);\n      const now_date = new Date();\n\n      const start_year = `0000${start_date.getFullYear().toString()}`.slice(-4);\n      const start_month = `00${(start_date.getMonth() + 1).toString()}`.slice(\n        -2\n      );\n      const start_day = `00${start_date.getDate().toString()}`.slice(-2);\n      const start_hours = `00${start_date.getHours().toString()}`.slice(-2);\n      const start_minutes = `00${start_date.getMinutes().toString()}`.slice(-2);\n      const start_seconds = `00${start_date.getSeconds().toString()}`.slice(-2);\n\n      const end_year = `0000${end_date.getFullYear().toString()}`.slice(-4);\n      const end_month = `00${(end_date.getMonth() + 1).toString()}`.slice(-2);\n      const end_day = `00${end_date.getDate().toString()}`.slice(-2);\n      const end_hours = `00${end_date.getHours().toString()}`.slice(-2);\n      const end_minutes = `00${end_date.getMinutes().toString()}`.slice(-2);\n      const end_seconds = `00${end_date.getSeconds().toString()}`.slice(-2);\n\n      const now_year = `0000${now_date.getFullYear().toString()}`.slice(-4);\n      const now_month = `00${(now_date.getMonth() + 1).toString()}`.slice(-2);\n      const now_day = `00${now_date.getDate().toString()}`.slice(-2);\n      const now_hours = `00${now_date.getHours().toString()}`.slice(-2);\n      const now_minutes = `00${now_date.getMinutes().toString()}`.slice(-2);\n      const now_seconds = `00${now_date.getSeconds().toString()}`.slice(-2);\n\n      let start_time = '';\n      let end_time = '';\n      if (\n        start_hours +\n          start_minutes +\n          start_seconds +\n          end_hours +\n          end_minutes +\n          end_seconds !==\n        0\n      ) {\n        start_time = `T${start_hours}${start_minutes}${start_seconds}`;\n        end_time = `T${end_hours}${end_minutes}${end_seconds}`;\n      }\n      const now_time = `T${now_hours}${now_minutes}${now_seconds}`;\n\n      const start = start_year + start_month + start_day + start_time;\n      const end = end_year + end_month + end_day + end_time;\n      const now = now_year + now_month + now_day + now_time;\n\n      // recurrence rrule vars\n      let rruleString;\n      if (rrule) {\n        if (rrule.rrule) {\n          rruleString = rrule.rrule;\n        } else {\n          rruleString = `RRULE:FREQ=${rrule.freq}`;\n\n          if (rrule.until) {\n            const uDate = new Date(Date.parse(rrule.until)).toISOString();\n            rruleString += `;UNTIL=${uDate\n              .substring(0, uDate.length - 13)\n              .replace(/[-]/g, '')}000000Z`;\n          }\n\n          if (rrule.interval) {\n            rruleString += `;INTERVAL=${rrule.interval}`;\n          }\n\n          if (rrule.count) {\n            rruleString += `;COUNT=${rrule.count}`;\n          }\n\n          if (rrule.byday && rrule.byday.length > 0) {\n            rruleString += `;BYDAY=${rrule.byday.join(',')}`;\n          }\n        }\n      }\n\n      // var stamp = new Date().toISOString();\n\n      let calendarEvent = [\n        'BEGIN:VEVENT',\n        `UID:${calendarEvents.length}@${uidDomain}`,\n        'CLASS:PUBLIC',\n        `DESCRIPTION:${description}`,\n        `DTSTAMP;VALUE=DATE-TIME:${now}`,\n        `DTSTART;VALUE=DATE-TIME:${start}`,\n        `DTEND;VALUE=DATE-TIME:${end}`,\n        `LOCATION:${location}`,\n        `SUMMARY;LANGUAGE=en-us:${subject}`,\n        'TRANSP:TRANSPARENT',\n        'END:VEVENT',\n      ];\n\n      if (rruleString) {\n        calendarEvent.splice(4, 0, rruleString);\n      }\n\n      calendarEvent = calendarEvent.join(SEPARATOR);\n\n      calendarEvents.push(calendarEvent);\n      return calendarEvent;\n    },\n\n    /**\n     * Download calendar using the saveAs function from filesave.js\n     * @param  {string} filename Filename\n     * @param  {string} ext      Extention\n     */\n    download(filename, ext) {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      ext = typeof ext !== 'undefined' ? ext : '.ics';\n      filename = typeof filename !== 'undefined' ? filename : 'calendar';\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      let blob;\n      if (navigator.userAgent.indexOf('MSIE 10') === -1) {\n        // chrome or firefox\n        blob = new Blob([calendar]);\n      } else {\n        // ie\n        const bb = new BlobBuilder();\n        bb.append(calendar);\n        blob = bb.getBlob(`text/x-vCalendar;charset=${document.characterSet}`);\n      }\n      saveAs(blob, filename + ext);\n      return calendar;\n    },\n\n    /**\n     * Build and return the ical contents\n     */\n    build() {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      return calendar;\n    },\n  };\n};\n\nexport default ics;\n","import { useCallback, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\n\nexport default function useCookie(\n  key: string\n): [string | undefined, (next: string) => void] {\n  const [value, setValue] = useState<string | undefined>(undefined);\n\n  const setCookieValue = useCallback(\n    (val) => {\n      setValue(val);\n      Cookies.set(key, val, { expires: 1460 });\n    },\n    [key, setValue]\n  );\n\n  useEffect(() => {\n    let val;\n    if (key !== undefined && key !== '') {\n      val = Cookies.get(key);\n    }\n    setValue(val);\n  }, [key]);\n\n  return [value, setCookieValue];\n}\n\nexport function useCookieWithDefault(\n  key: string,\n  defaultValue: string\n): [string, (next: string) => void] {\n  const [value, setValue] = useState<string>(defaultValue);\n\n  const setCookieValue = useCallback(\n    (val) => {\n      setValue(val);\n      Cookies.set(key, val, { expires: 1460 });\n    },\n    [key, setValue]\n  );\n\n  useEffect(() => {\n    let val;\n    if (key !== undefined) {\n      val = Cookies.get(key);\n    }\n    setValue(val === undefined ? defaultValue : val);\n  }, [key, defaultValue]);\n\n  return [value, setCookieValue];\n}\n","import { useCallback, useMemo } from 'react';\n\nimport { useCookie } from '.';\nimport { ErrorWithFields } from '../log';\n\nexport default function useJsonCookie<T extends Record<string, unknown>>(\n  key: string,\n  defaultValue: T\n): [T, (patch: Partial<T>) => void] {\n  const [rawValue, setRawValue] = useCookie(key);\n\n  const value = useMemo(() => {\n    if (rawValue !== undefined) {\n      try {\n        const parsedValue = JSON.parse(rawValue) as T;\n        return {\n          ...defaultValue,\n          ...parsedValue,\n        };\n      } catch (err) {\n        throw new ErrorWithFields({\n          message: `failed to parse cookie data`,\n          source: err,\n          fields: {\n            rawValue,\n            key,\n            defaultValue,\n          },\n        });\n      }\n    }\n    return defaultValue;\n  }, [rawValue, defaultValue]);\n\n  const patchValue = useCallback(\n    (patch) => {\n      const rawVal = JSON.stringify({\n        ...value,\n        ...patch,\n      });\n      setRawValue(rawVal);\n    },\n    [value, setRawValue]\n  );\n\n  return [value, patchValue];\n}\n","import { useState, useEffect } from 'react';\n\nimport { isMobile } from '../utils';\n\n/**\n * Subscribes to resize events on the page\n *\n * ? Would this be better to subscribe to a media query ?\n */\nexport default function useMobile(): boolean {\n  const [mobile, setMobile] = useState(isMobile());\n  useEffect(() => {\n    const handleResize = (): void => {\n      const newMobile = isMobile();\n      if (mobile !== newMobile) {\n        setMobile(newMobile);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return (): void => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [mobile]);\n\n  return mobile;\n}\n","import React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAdjust,\n  faBars,\n  faCalendarAlt,\n  faDownload,\n  faPaste,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport Cookies from 'js-cookie';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport ReactTooltip from 'react-tooltip';\nimport copy from 'copy-to-clipboard';\n\nimport { getSemesterName } from '../../utils';\nimport { PNG_SCALE_FACTOR } from '../../constants';\nimport ics from '../../vendor/ics';\nimport { Button, Calendar, Select, Tab } from '..';\nimport { useMobile } from '../../hooks';\nimport { TermContext, TermsContext, ThemeContext } from '../../contexts';\nimport { ICS } from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\nimport 'react-virtualized/styles.css';\n\nexport type HeaderProps = {\n  currentTab: number;\n  onChangeTab: (newTab: number) => void;\n  onToggleMenu: () => void;\n  tabs: string[];\n};\n\n/**\n * Renders the top header component,\n * and includes controls for top-level tab-based navigation\n */\nexport default function Header({\n  currentTab,\n  onChangeTab,\n  onToggleMenu,\n  tabs,\n}: HeaderProps): React.ReactElement {\n  const [{ term, oscar, pinnedCrns }, { setTerm }] = useContext(TermContext);\n  const [terms] = useContext(TermsContext);\n  const [theme, setTheme] = useContext(ThemeContext);\n  const captureRef = useRef<HTMLDivElement>(null);\n\n  const handleThemeChange = useCallback(() => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    Cookies.set('theme', newTheme, { expires: 1460 });\n    setTheme(newTheme);\n  }, [theme, setTheme]);\n\n  const totalCredits = useMemo(() => {\n    return pinnedCrns.reduce((credits, crn) => {\n      const crnSection = oscar.findSection(crn);\n      return credits + (crnSection != null ? crnSection.credits : 0);\n    }, 0);\n  }, [pinnedCrns, oscar]);\n\n  const handleExport = useCallback(() => {\n    const cal = ics() as ICS | undefined;\n    if (cal == null) {\n      window.alert('This browser does not support calendar export');\n      return;\n    }\n\n    pinnedCrns.forEach((crn) => {\n      const section = oscar.findSection(crn);\n      if (section == null) return;\n\n      section.meetings.forEach((meeting) => {\n        if (!meeting.period || !meeting.days.length) return;\n        const { from, to } = meeting.dateRange;\n        const subject = section.course.id;\n        const description = section.course.title;\n        const location = meeting.where;\n        const begin = new Date(from.getTime());\n        while (\n          !meeting.days.includes(\n            ['-', 'M', 'T', 'W', 'R', 'F', '-'][begin.getDay()] ?? '-'\n          )\n        ) {\n          begin.setDate(begin.getDate() + 1);\n        }\n        begin.setHours(meeting.period.start / 60, meeting.period.start % 60);\n        const end = new Date(begin.getTime());\n        end.setHours(meeting.period.end / 60, meeting.period.end % 60);\n        const rrule = {\n          freq: 'WEEKLY',\n          until: to,\n          byday: meeting.days\n            .map(\n              (day) =>\n                ({ M: 'MO', T: 'TU', W: 'WE', R: 'TH', F: 'FR' }[day] ?? null)\n            )\n            .filter((day) => !!day),\n        };\n        cal.addEvent(subject, description, location, begin, end, rrule);\n      });\n    });\n    cal.download('gt-scheduler');\n  }, [oscar, pinnedCrns]);\n\n  const handleDownload = useCallback(() => {\n    const captureElement = captureRef.current;\n    if (captureElement == null) return;\n\n    const computed = window\n      .getComputedStyle(captureElement)\n      .getPropertyValue('left');\n\n    domtoimage\n      .toBlob(captureElement, {\n        width: captureElement.offsetWidth * PNG_SCALE_FACTOR,\n        height: captureElement.offsetHeight * PNG_SCALE_FACTOR,\n        style: {\n          transform: `scale(${PNG_SCALE_FACTOR})`,\n          'transform-origin': `${computed} 0px`,\n          'background-color': theme === 'light' ? '#FFFFFF' : '#333333',\n        },\n      })\n      .then((blob) => saveAs(blob, 'schedule.png'))\n      .catch((err) =>\n        softError(\n          new ErrorWithFields({\n            message:\n              'could not take screenshot of shadow calendar for schedule export',\n            source: err,\n          })\n        )\n      );\n  }, [captureRef, theme]);\n\n  // Obtain a ref to the copy button to only close its tooltip\n  const crnButton = useRef<HTMLDivElement>(null);\n\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = useMobile();\n  return (\n    <div className=\"Header\">\n      {/* Menu button, only displayed on mobile */}\n      {mobile && (\n        <Button className=\"nav-menu-button\" onClick={onToggleMenu}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faBars} />\n        </Button>\n      )}\n\n      {/* Left-aligned logo */}\n      <Button className=\"logo\">\n        <span className=\"gt\">GT </span>\n        <span className=\"scheduler\">Scheduler</span>\n      </Button>\n\n      {/* Term selector */}\n      <Select\n        onChange={setTerm}\n        value={term}\n        options={terms.map((currentTerm) => ({\n          value: currentTerm,\n          label: getSemesterName(currentTerm),\n        }))}\n        className=\"semester\"\n      />\n\n      <span className=\"credits\">{totalCredits} Credits</span>\n\n      {/* Include middle-aligned tabs on desktop */}\n      {!mobile && (\n        <div className=\"tabs\">\n          {tabs.map((tabLabel, tabIdx) => (\n            <Tab\n              key={tabIdx}\n              active={tabIdx === currentTab}\n              onClick={(): void => onChangeTab(tabIdx)}\n              label={tabLabel}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Action bar */}\n      <div className=\"menu\">\n        <Button onClick={handleDownload} disabled={pinnedCrns.length === 0}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faDownload} />\n          <div className=\"text\">Download</div>\n        </Button>\n        <Button onClick={handleExport} disabled={pinnedCrns.length === 0}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faCalendarAlt} />\n          <div className=\"text\">Export</div>\n        </Button>\n\n        {/* Include separate button and tooltip component\n            with manually controlled closing logic */}\n        <div\n          className=\"menu\"\n          data-tip\n          data-for=\"copy-crn\"\n          delay-hide=\"1000\"\n          ref={crnButton}\n        >\n          <Button disabled={pinnedCrns.length === 0}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faPaste} />\n            <div className=\"text\">CRNs</div>\n          </Button>\n        </div>\n        {/* Only enable the tooltip logic if there are CRNS to copy */}\n        {pinnedCrns.length > 0 && (\n          <ReactTooltip\n            id=\"copy-crn\"\n            type=\"dark\"\n            place=\"bottom\"\n            effect=\"solid\"\n            event=\"click\"\n            delayHide={1000}\n            afterShow={(): void => {\n              copy(pinnedCrns.join(', '));\n              setTimeout(\n                () => ReactTooltip.hide(crnButton.current ?? undefined),\n                1000\n              );\n            }}\n          >\n            Copied to clipboard!\n          </ReactTooltip>\n        )}\n\n        <Button onClick={handleThemeChange}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faAdjust} />\n          <div className=\"text\">Theme</div>\n        </Button>\n        <Button href=\"https://github.com/gt-scheduler/website\">\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faGithub} />\n          <div className=\"text\">GitHub</div>\n        </Button>\n      </div>\n\n      {/* Fake calendar used to capture screenshots */}\n      <div className=\"capture-container\" ref={captureRef}>\n        <Calendar className=\"fake-calendar\" capture overlayCrns={[]} />\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faBan,\n  faGraduationCap,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, simplifyName, unique } from '../../utils';\nimport { Section as SectionBean } from '../../beans';\nimport { ActionRow, Section } from '..';\nimport { TermContext } from '../../contexts';\n\nimport './stylesheet.scss';\n\nexport type InstructorProps = {\n  className?: string;\n  color: string | undefined;\n  name: string;\n  sections: SectionBean[];\n  gpa: string;\n};\n\nexport default function Instructor({\n  className,\n  color,\n  name,\n  sections,\n  gpa,\n}: InstructorProps): React.ReactElement {\n  const [{ pinnedCrns, excludedCrns }, { patchTermData }] = useContext(\n    TermContext\n  );\n  const [expanded, setExpanded] = useState(true);\n\n  const includeSection = useCallback(\n    (section: SectionBean) => {\n      patchTermData({\n        excludedCrns: excludedCrns.filter((crn) => crn !== section.crn),\n      });\n    },\n    [excludedCrns, patchTermData]\n  );\n\n  const excludeSections = useCallback(\n    (sectionList: SectionBean[]) => {\n      const crns = sectionList.map((section) => section.crn);\n      patchTermData({\n        excludedCrns: unique([...excludedCrns, ...crns]),\n        pinnedCrns: pinnedCrns.filter((crn) => !crns.includes(crn)),\n      });\n    },\n    [excludedCrns, pinnedCrns, patchTermData]\n  );\n\n  const instructorPinned = sections.some((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n\n  const includedSections = sections.filter(\n    (section) => !excludedCrns.includes(section.crn)\n  );\n  const excludedSections = sections.filter((section) =>\n    excludedCrns.includes(section.crn)\n  );\n\n  const excludeTooltipId = `exclude-instructor-${name.replace(' ', '-')}`;\n  return (\n    <div\n      className={classes(\n        'Instructor',\n        !expanded && 'divider-bottom',\n        className\n      )}\n    >\n      <ActionRow\n        label={name || 'Not Assigned'}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: (): void => setExpanded(!expanded),\n          },\n          !['TBA', 'Not Assigned'].includes(name)\n            ? {\n                icon: faGraduationCap,\n                href: `http://www.ratemyprofessors.com/search.jsp?queryBy=teacherName&schoolName=Georgia+Institute+of+Technology&query=${encodeURIComponent(\n                  simplifyName(name)\n                )}`,\n              }\n            : null,\n          {\n            icon: faBan,\n            dataTip: true,\n            dataFor: excludeTooltipId,\n            onClick: (): void => excludeSections(sections),\n          },\n        ]}\n        style={instructorPinned ? { backgroundColor: color } : undefined}\n      >\n        <div className=\"instructor-row\">\n          <span className=\"gpa\">Instructor GPA: {gpa || 'N/A'}</span>\n        </div>\n      </ActionRow>\n      <ReactTooltip\n        id={excludeTooltipId}\n        type=\"dark\"\n        place=\"bottom\"\n        effect=\"solid\"\n      >\n        Exclude from Combinations\n      </ReactTooltip>\n      {expanded && (\n        <div className={classes('section-container', 'nested')}>\n          {includedSections.map((section) => {\n            const pinned = pinnedCrns.includes(section.crn);\n            return (\n              <Section\n                key={section.id}\n                className=\"divider-bottom\"\n                section={section}\n                color={color}\n                pinned={pinned}\n              />\n            );\n          })}\n          {excludedSections.length > 0 && (\n            <div className=\"excluded-section-container\">\n              {excludedSections.map((section) => (\n                <span\n                  className=\"excluded-section\"\n                  key={section.id}\n                  onClick={(): void => includeSection(section)}\n                >\n                  {section.id}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl';\nimport { ViewState } from 'react-map-gl/src/mapbox/mapbox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin } from '@fortawesome/free-solid-svg-icons';\n\nimport { Location } from '../../types';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './stylesheet.scss';\n\nexport type MapLocation = {\n  section: string;\n  id: string;\n  title: string;\n  days: string[];\n  time: string;\n  coords: Location | null;\n};\n\nexport type MapViewProps = {\n  locations: MapLocation[];\n};\n\nexport default function MapView({\n  locations,\n}: MapViewProps): React.ReactElement {\n  // These initial coordinates start the map looking at the GT Atlanta campus\n  const [viewState, setViewState] = useState<ViewState>({\n    latitude: 33.7765,\n    longitude: -84.3963,\n    zoom: 15,\n  });\n\n  const unknown: MapLocation[] = [];\n  locations.forEach((location) => {\n    if (location.coords === null) unknown.push(location);\n  });\n\n  return (\n    <div className=\"mapbox\">\n      <ReactMapGL\n        height=\"100%\"\n        width=\"100%\"\n        viewState={viewState}\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\n        // TypeScript wants this to use square-brackets since it's an index\n        // signature\n        // eslint-disable-next-line dot-notation\n        mapboxApiAccessToken={process.env['REACT_APP_MAPBOX_TOKEN'] ?? ''}\n        onViewStateChange={({\n          viewState: newViewState,\n        }: {\n          viewState: ViewState;\n        }): void => setViewState(newViewState)}\n      >\n        {locations.map((location, i) =>\n          !location.coords ? (\n            <React.Fragment key={i} />\n          ) : (\n            <Marker\n              key={i}\n              latitude={location.coords.lat}\n              longitude={location.coords.long}\n            >\n              <FontAwesomeIcon icon={faMapPin} className=\"pin-icon\" />\n              <p className=\"pin-text\">\n                {location.id} {location.section}\n              </p>\n            </Marker>\n          )\n        )}\n        {unknown.length > 0 && (\n          <div className=\"unknown-container\">\n            <b>Undetermined</b>\n            {unknown.map((location, i) => (\n              <div className=\"class\" key={i}>\n                {location.id} {location.section}\n              </div>\n            ))}\n          </div>\n        )}\n        <div className=\"navigation\">\n          <NavigationControl showZoom showCompass />\n        </div>\n      </ReactMapGL>\n    </div>\n  );\n}\n","import React from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { ActionRow } from '..';\nimport { classes, getContentClassName } from '../../utils';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport type Day = 'M' | 'T' | 'W' | 'R' | 'F';\n\nexport function isDay(rawDay: string): rawDay is Day {\n  switch (rawDay) {\n    case 'M':\n    case 'T':\n    case 'W':\n    case 'R':\n    case 'F':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport interface CourseDateItem {\n  id: string;\n  title: string;\n  times: Period | undefined;\n  daysOfWeek: string[];\n}\n\nexport type DaySelectionProps = {\n  courseDateMap: Record<Day, CourseDateItem[]>;\n  activeDay: Day | '';\n  setActiveDay: (next: Day | '') => void;\n};\n\nexport default function DaySelection({\n  courseDateMap,\n  activeDay,\n  setActiveDay,\n}: DaySelectionProps): React.ReactElement {\n  const colorPalette = ['#FCB9AA', '#FFDBCC', '#ECEAE4', '#A2E1DB', '#55CBCD'];\n  const daysOfTheWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n  ];\n\n  const formatTime = (time: number): string => {\n    if (Math.floor(time / 60) >= 12) {\n      const adjustedHour = Math.floor(time / 60) % 12;\n      const hour = adjustedHour === 0 ? '12' : adjustedHour;\n      const minute = String(time % 60).padStart(2, '0');\n      return `${hour}:${minute}pm`;\n    }\n\n    const hour = Math.floor(time / 60);\n    const minute = String(time % 60).padStart(2, '0');\n    return `${hour}:${minute}am`;\n  };\n\n  return (\n    <div className=\"date-container\">\n      {Object.keys(courseDateMap).map((date, i) => {\n        if (!isDay(date)) return null;\n        const courses = courseDateMap[date];\n        return (\n          <div\n            key={date}\n            className={classes(\n              'date',\n              getContentClassName(colorPalette[i]),\n              'default'\n            )}\n            style={{ backgroundColor: colorPalette[i] }}\n          >\n            <ActionRow\n              label={daysOfTheWeek[i] ?? ''}\n              className=\"day-select\"\n              actions={[\n                {\n                  icon: date === activeDay ? faAngleUp : faAngleDown,\n                  onClick: (): void =>\n                    date !== activeDay ? setActiveDay(date) : setActiveDay(''),\n                },\n              ]}\n            />\n            {activeDay === date && (\n              <div className=\"dropdown-content\">\n                {courses == null || courses.length === 0 ? (\n                  <div className=\"course-content\" style={{ padding: 8 }}>\n                    No classes this day!\n                  </div>\n                ) : (\n                  courses.map((course) => {\n                    let timeLabel = 'TBA';\n                    const { times } = course;\n                    if (times != null) {\n                      const { start, end } = times;\n                      timeLabel = `${formatTime(start)} - ${formatTime(end)}`;\n                    }\n\n                    return (\n                      <div className=\"course-content\" key={course.id}>\n                        <div className=\"course-id\">{course.id}</div>\n                        <span className=\"course-row\">{course.title}</span>\n                        <span className=\"course-row\">\n                          {course.daysOfWeek} {timeLabel}\n                        </span>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\n\nimport MapView, { MapLocation } from '../MapView';\nimport { periodToString } from '../../utils';\nimport { TermContext } from '../../contexts';\nimport DaySelection, { CourseDateItem, Day, isDay } from '../DaySelection';\nimport { Meeting } from '../../types';\n\nimport './stylesheet.scss';\n\nexport default function Map(): React.ReactElement {\n  const [{ oscar, pinnedCrns }] = useContext(TermContext);\n  const [activeDay, setActiveDay] = useState<Day | ''>('M');\n  const locations: MapLocation[] = [];\n  const courseDateMap: Record<Day, CourseDateItem[]> = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: [],\n  };\n\n  // Construct the courseDateMap and locations data structures\n  pinnedCrns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n    const { meetings } = section;\n    if (meetings.length === 0) return;\n    const firstMeeting = meetings[0] as Meeting;\n\n    firstMeeting.days.forEach((day) => {\n      if (!isDay(day)) return;\n      const courses = courseDateMap[day] ?? [];\n      courses.push({\n        id: section.course.id,\n        title: section.course.title,\n        times: firstMeeting.period,\n        daysOfWeek: firstMeeting.days,\n      });\n      courseDateMap[day] = courses;\n    });\n\n    locations.push({\n      section: section.id,\n      id: section.course.id,\n      title: section.course.title,\n      days: firstMeeting.days,\n      time: periodToString(firstMeeting.period),\n      coords: firstMeeting.location,\n    });\n  });\n\n  let activeLocations: MapLocation[] = [];\n  if (activeDay !== '') {\n    activeLocations = locations.filter((loc) =>\n      (courseDateMap[activeDay] ?? []).some((course) => course.id === loc.id)\n    );\n  }\n\n  return (\n    <div className=\"map-content\">\n      <DaySelection\n        courseDateMap={courseDateMap}\n        activeDay={activeDay}\n        setActiveDay={setActiveDay}\n      />\n      <MapView locations={activeLocations} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils';\nimport { Button } from '..';\n\nimport './stylesheet.scss';\n\nexport type NavDrawerProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\n\n/**\n * Renders a nav drawer and the overlay when it is open\n */\nexport default function NavDrawer({\n  open,\n  onClose,\n  children,\n}: NavDrawerProps): React.ReactElement {\n  return (\n    <>\n      <div\n        className={classes('drawer-overlay', open && 'open')}\n        tabIndex={-1}\n        onClick={onClose}\n        role=\"presentation\"\n      />\n      <div className={classes('drawer-outer', open && 'open')}>\n        <div className=\"drawer-header\">\n          <Button className=\"drawer-close\" onClick={onClose}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faTimes} />\n          </Button>\n        </div>\n        {children}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Button } from '..';\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type NavMenuProps = {\n  items: string[];\n  currentItem: number;\n  onChangeItem: (next: number) => void;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a vertical nav menu with a single active item\n */\nexport default function NavMenu({\n  items,\n  currentItem,\n  onChangeItem,\n  className,\n  style,\n}: NavMenuProps): React.ReactElement {\n  return (\n    <div className={classes('nav-menu', className)} style={style}>\n      {items.map((item, idx) => (\n        <Button\n          className={classes('nav-button', currentItem === idx && 'active')}\n          onClick={(): void => onChangeItem(idx)}\n          key={idx}\n        >\n          {item}\n        </Button>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\nimport { PALETTE } from '../../constants';\n\nimport './stylesheet.scss';\n\nexport type PaletteProps = {\n  className?: string;\n  color: string | null;\n  onSelectColor: (newColor: string) => void;\n  onMouseLeave: () => void;\n};\n\nexport default function Palette({\n  className,\n  color,\n  onSelectColor,\n  onMouseLeave,\n}: PaletteProps): React.ReactElement {\n  return (\n    <div className={classes('Palette', className)} onMouseLeave={onMouseLeave}>\n      {PALETTE.map((colors, i) => (\n        <div className=\"palette-row\" key={i}>\n          {colors.map((paletteColor) => (\n            <div\n              className={classes('color', paletteColor === color && 'frame')}\n              key={paletteColor}\n              style={{ backgroundColor: paletteColor }}\n              onClick={(): void => onSelectColor(paletteColor)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport {\n  faInfoCircle,\n  faAngleUp,\n  faAngleDown,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { TermContext } from '../../contexts';\nimport { classes, serializePrereqs } from '../../utils';\nimport { ActionRow } from '..';\nimport { Course } from '../../beans';\nimport {\n  CrawlerPrerequisites,\n  PrerequisiteClause,\n  PrerequisiteOperator,\n} from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nconst BASE_ITEM_STYLE = { fontSize: '0.9em', padding: '8px' };\n\nexport type PrerequisiteProps = {\n  course: Course;\n  prereqs: CrawlerPrerequisites;\n};\n\n/**\n * Renders the prereqs for a single course, given that the crawler version\n * supports prereqs. (Make sure to check this before). An empty prereq list is\n * an authoritative statement that the course has no prereqs, and as such a\n * message will be displayed telling the user. Otherwise, this component tries\n * to render the prereq tree in a way that is easily consumable without taking\n * up too much screen space, first trying to split the prereqs up into separate\n * \"options\" (sub-clauses of an OR set) if possible before rendering a list of\n * items with operators in between. Finally, in each item, there is the\n * flattened textual representation of the remainder of the subtree, which\n * restores parentheses groupings (much like the original Oscar prereq syntax)\n */\nexport default function Prerequisite({\n  course,\n  prereqs,\n}: PrerequisiteProps): React.ReactElement {\n  let content: React.ReactNode;\n  if (prereqs.length === 0) {\n    content = <PrerequisiteEmpty />;\n  } else {\n    // `prereqs` isn't an empty array, so it must be `PrerequisiteSet`\n    // (here we manually `Exclude` the empty array case)\n    const [op, ...subClauses] = prereqs as Exclude<CrawlerPrerequisites, []>;\n\n    switch (op) {\n      case 'and':\n        // We only consider this a single \"option\",\n        // so just render the content as a direct child\n        content = <PrerequisiteClauseDisplay clause={['and', ...subClauses]} />;\n        break;\n      case 'or':\n        if (subClauses.length === 1) {\n          // There is only 1 option:\n          // just render the content as a direct child\n          content = (\n            <PrerequisiteClauseDisplay\n              clause={subClauses[0] as PrerequisiteClause}\n            />\n          );\n        } else {\n          // Render an option for each sub-clause\n          content = (\n            <>\n              {subClauses.map((subClause, i) => (\n                <PrerequisiteOption key={i} clause={subClause} index={i} />\n              ))}\n            </>\n          );\n        }\n        break;\n      default:\n        softError(\n          new ErrorWithFields({\n            message: 'invalid operator found in top-level prereqs',\n            fields: {\n              courseId: course.id,\n              operator: op,\n            },\n          })\n        );\n        content = null;\n    }\n  }\n\n  return (\n    <div className={classes('hover-container', 'nested')}>\n      <PrerequisiteHeader course={course} />\n      <div className={classes('nested')}>{content}</div>\n    </div>\n  );\n}\n\n// Private sub-components\n\ntype PrerequisiteHeaderProps = {\n  course: Course;\n};\n\n/**\n * Renders the \"header\" at the top of a prereq display,\n * which includes a link to Oscar giving the original prereq source,\n * plus other course information.\n */\nfunction PrerequisiteHeader({\n  course,\n}: PrerequisiteHeaderProps): React.ReactElement {\n  const [{ term }] = useContext(TermContext);\n\n  return (\n    <ActionRow\n      className={classes('hover-container')}\n      label=\"Prerequisites\"\n      actions={[\n        {\n          icon: faInfoCircle,\n          href:\n            `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n            `course_detail?cat_term_in=${term}&subj_code_in=` +\n            `${course.subject}&crse_numb_in=${course.number}`,\n        },\n      ]}\n    />\n  );\n}\n\ntype PrerequisiteOptionProps = {\n  clause: PrerequisiteClause;\n  index: number;\n};\n\n/**\n * Renders a single prereq option -- a sub-clause of a larger \"OR\" prereq set\n * that is independently collapse-able from the other sibling options.\n * Inside, uses `PrerequisiteClauseDisplay` to render the sub-clause if\n * the option is expanded.\n */\nfunction PrerequisiteOption({\n  clause,\n  index,\n}: PrerequisiteOptionProps): React.ReactElement {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <>\n      <ActionRow\n        className={classes('hover-container')}\n        label={`Option ${index + 1}`}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: (): void => setExpanded(!expanded),\n          },\n        ]}\n      />\n      {expanded && (\n        <div className={classes('nested')}>\n          <PrerequisiteClauseDisplay clause={clause} />\n        </div>\n      )}\n    </>\n  );\n}\n\ntype PrerequisiteClauseDisplayProps = {\n  clause: PrerequisiteClause;\n};\n\n/**\n * Renders an arbitrary prereq clause. If the clause is a singular course,\n * then it renders a single Item. Otherwise, if the clause is a set,\n * this component renders an item for each member of the set, and includes\n * an operator at the end of each item's text to indicate that each item\n * is part of a larger prereq set.\n */\nfunction PrerequisiteClauseDisplay({\n  clause,\n}: PrerequisiteClauseDisplayProps): React.ReactElement {\n  if (!Array.isArray(clause)) {\n    // Render the single prereq course\n    return <PrerequisiteItem clause={clause} operator=\"and\" isLast />;\n  }\n\n  // Render a list of prereq items\n  const [operator, ...subClauses] = clause;\n  return (\n    <>\n      {subClauses.map((subClause, i) => (\n        <PrerequisiteItem\n          key={i}\n          clause={subClause}\n          operator={operator}\n          isLast={i === subClauses.length - 1}\n        />\n      ))}\n    </>\n  );\n}\n\ntype PrerequisiteItemProps = {\n  clause: PrerequisiteClause;\n  operator: PrerequisiteOperator;\n  isLast: boolean;\n};\n\n/**\n * Renders a single \"item\" -- a div with the completely flattened text\n * representation of the prereq subtree passed in as `clause` (whether\n * that's a single prereq course or a sprawling sub-tree with many branches).\n * Includes the ability to display a higher-level operator between different\n * `PrerequisiteItem`'s as long as `isLast` is false, which is used by\n * `PrerequisiteClauseDisplay` when it needs to render a prerequisite set.\n `\n */\nfunction PrerequisiteItem({\n  clause,\n  operator,\n  isLast,\n}: PrerequisiteItemProps): React.ReactElement {\n  return (\n    <div className={classes('divider-bottom')} style={BASE_ITEM_STYLE}>\n      {serializePrereqs(clause)} {!isLast && <strong>{operator}</strong>}\n    </div>\n  );\n}\n\n/**\n * Replacement prerequisite \"item\"-like component that simply contains\n * a notification to the user that the course has no prereqs.\n */\nfunction PrerequisiteEmpty(): React.ReactElement {\n  return (\n    <div style={BASE_ITEM_STYLE}>No prerequisites. You&apos;re good to go!</div>\n  );\n}\n","import React, { useMemo, useState } from 'react';\n\nimport { classes } from '../../utils';\nimport { Button, Calendar, CombinationContainer, CourseContainer } from '..';\nimport { OverlayCrnsContext, OverlayCrnsContextValue } from '../../contexts';\nimport { useMobile } from '../../hooks';\n\n/**\n * Wraps around the root top-level component of the Scheduler tab\n */\nexport default function Scheduler(): React.ReactElement {\n  const mobile = useMobile();\n\n  // Store the current set of CRNs that are shown on the Calendar overlay\n  const [overlayCrns, setOverlayCrns] = useState<string[]>([]);\n\n  // Control second-level navigation between panes on mobile\n  const [tabIndex, setTabIndex] = useState<number>(0);\n\n  // Memoize the CRN overlay set's context value so it is stable\n  const overlayContextValue = useMemo<OverlayCrnsContextValue>(\n    () => [overlayCrns, setOverlayCrns],\n    [overlayCrns, setOverlayCrns]\n  );\n\n  return (\n    <>\n      {mobile && (\n        <div className=\"tab-container\">\n          {['Courses', 'Combinations', 'Calendar'].map((tabTitle, i) => (\n            <Button\n              key={tabTitle}\n              className={classes('tab', tabIndex === i && 'active')}\n              onClick={(): void => setTabIndex(i)}\n            >\n              {tabTitle}\n            </Button>\n          ))}\n        </div>\n      )}\n      <OverlayCrnsContext.Provider value={overlayContextValue}>\n        <div className=\"main\">\n          {(!mobile || tabIndex === 0) && <CourseContainer />}\n          {(!mobile || tabIndex === 1) && <CombinationContainer />}\n          {(!mobile || tabIndex === 2) && (\n            <div className=\"calendar-container\">\n              <Calendar className=\"calendar\" overlayCrns={overlayCrns} />\n            </div>\n          )}\n        </div>\n      </OverlayCrnsContext.Provider>\n    </>\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faBan,\n  faChair,\n  faThumbtack,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, periodToString } from '../../utils';\nimport { ActionRow } from '..';\nimport { OverlayCrnsContext, TermContext } from '../../contexts';\nimport { DELIVERY_MODES } from '../../constants';\nimport { Section as SectionBean } from '../../beans';\nimport { Seating } from '../../beans/Section';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\n\nexport type SectionProps = {\n  className?: string;\n  section: SectionBean;\n  pinned: boolean;\n  color: string | undefined;\n};\n\nexport default function Section({\n  className,\n  section,\n  pinned,\n  color,\n}: SectionProps): React.ReactElement {\n  const [{ term, pinnedCrns, excludedCrns }, { patchTermData }] = useContext(\n    TermContext\n  );\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n  const [seating, setSeating] = useState<Seating>([[], 0]);\n\n  let hovering = false;\n  const handleHover = (): void => {\n    hovering = true;\n    setTimeout(() => {\n      if (hovering) {\n        section\n          .fetchSeating(term)\n          .then((newSeating) => {\n            setSeating(newSeating);\n          })\n          .catch((err) =>\n            softError(\n              new ErrorWithFields({\n                message: 'error while fetching seating',\n                source: err,\n                fields: { crn: section.crn },\n              })\n            )\n          );\n      }\n    }, 333);\n  };\n\n  const excludeSection = useCallback(\n    (sect: SectionBean) => {\n      patchTermData({\n        excludedCrns: [...excludedCrns, sect.crn],\n        pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn),\n      });\n    },\n    [pinnedCrns, excludedCrns, patchTermData]\n  );\n\n  const pinSection = useCallback(\n    (sect: SectionBean) => {\n      if (pinnedCrns.includes(sect.crn)) {\n        patchTermData({\n          pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn),\n        });\n      } else {\n        patchTermData({\n          pinnedCrns: [...pinnedCrns, sect.crn],\n          excludedCrns: excludedCrns.filter((crn) => crn !== sect.crn),\n        });\n      }\n    },\n    [pinnedCrns, excludedCrns, patchTermData]\n  );\n\n  const excludeTooltipId = `section-exclude-${section.id}`;\n  return (\n    <ActionRow\n      label={section.id}\n      className={classes('Section', className)}\n      onMouseEnter={(): void => setOverlayCrns([section.crn])}\n      onMouseLeave={(): void => setOverlayCrns([])}\n      actions={[\n        {\n          icon: pinned ? faTimes : faThumbtack,\n          onClick: (): void => pinSection(section),\n        },\n        {\n          icon: faChair,\n          dataTip: true,\n          dataFor: section.id,\n          href: `https://oscar.gatech.edu/pls/bprod/bwckschd.p_disp_detail_sched?term_in=${term}&crn_in=${section.crn}`,\n        },\n        {\n          icon: faBan,\n          dataTip: true,\n          dataFor: excludeTooltipId,\n          onClick: (): void => excludeSection(section),\n        },\n      ]}\n      style={pinned ? { backgroundColor: color } : undefined}\n    >\n      <ReactTooltip\n        id={excludeTooltipId}\n        className=\"tooltip\"\n        type=\"dark\"\n        place=\"right\"\n        effect=\"solid\"\n      >\n        Exclude from Combinations\n      </ReactTooltip>\n      <div className=\"section-details\">\n        <div className=\"delivery-mode\">\n          {section.deliveryMode != null\n            ? DELIVERY_MODES[section.deliveryMode]\n            : ''}\n        </div>\n        <div className=\"meeting-container\">\n          {section.meetings.map((meeting, i) => {\n            return (\n              <div className=\"meeting\" key={i}>\n                <span className=\"days\">{meeting.days.join('')}</span>\n                <span className=\"period\">{periodToString(meeting.period)}</span>\n              </div>\n            );\n          })}\n        </div>\n\n        <ReactTooltip\n          id={section.id}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"right\"\n          effect=\"solid\"\n          afterShow={(): void => handleHover()}\n          afterHide={(): void => {\n            hovering = false;\n          }}\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Seats Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][1] ?? '<unknown>'} of ${\n                        seating[0][0] ?? '<unknown>'\n                      }`\n                    : `N/A`}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Waitlist Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][3] ?? '<unknown>'} of ${\n                        seating[0][2] ?? '<unknown>'\n                      }`\n                    : `N/A`}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      </div>\n    </ActionRow>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { classes } from '../../utils';\nimport { Button } from '..';\n\nimport './stylesheet.scss';\n\nexport type SelectProps<V extends string | number> = {\n  className?: string;\n  value: V;\n  onChange: (newValue: V) => void;\n  options: SelectOption<V>[];\n};\n\nexport type SelectOption<V> = {\n  value: V;\n  label: React.ReactNode;\n};\n\nexport default function Select<V extends string | number>({\n  className,\n  value,\n  onChange,\n  options,\n}: SelectProps<V>): React.ReactElement {\n  const [opened, setOpened] = useState(false);\n\n  const selectedOption = options.find((option) => option.value === value);\n  const label = selectedOption ? selectedOption.label : '-';\n\n  return (\n    <div\n      className={classes('Button', 'Select', className)}\n      onClick={(): void => setOpened(!opened)}\n    >\n      <div className=\"text\">{label}</div>\n      <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n      {opened && (\n        <div className=\"intercept\" onClick={(): void => setOpened(false)} />\n      )}\n      {opened && (\n        <div className=\"option-container\">\n          {options.map(({ value: optionValue, label: optionLabel }) => (\n            <Button\n              className=\"option\"\n              key={optionValue}\n              onClick={(): void => onChange(optionValue)}\n            >\n              {optionLabel}\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type TabProps = {\n  label: string;\n  onClick: () => void;\n  active?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a single top-level tab that is used in a horizontal list\n */\nexport default function Tab({\n  label,\n  active = false,\n  onClick,\n  className,\n  style,\n}: TabProps): React.ReactElement {\n  return (\n    <button\n      className={classes('Tab', active && 'active', className)}\n      style={style}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {label}\n    </button>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\nimport { useMobile } from '../../hooks';\n\nimport './stylesheet.scss';\n\nexport default function Attribution(): React.ReactElement {\n  const mobile = useMobile();\n  return (\n    <div className={classes('Attribution')}>\n      <p>\n        Copyright (c) 2021 with{' '}\n        <span role=\"img\" aria-label=\"love\">\n          ❤️\n        </span>{' '}\n        by <a href=\"https://jasonpark.me\">Jinseo Park</a>,{' '}\n        <a href=\"https://bitsofgood.org\">Bits of Good</a>, and{' '}\n        <a href=\"https://github.com/gt-scheduler/website/graphs/contributors\">\n          {mobile ? 'others' : 'the GT Scheduler contributors'}\n        </a>\n        .\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCommentAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from '..';\nimport { classes } from '../../utils';\nimport { FormSubmit } from '../../beans';\n\nimport './stylesheet.scss';\n\nexport default function Feedback(): React.ReactElement {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [submit, setSubmit] = useState<boolean>(false);\n  const [rating, setRating] = useState<number | null>(null);\n  const [feedback, setFeedback] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onSubmit = (): void => {\n    setLoading(true);\n    // Add 1 to the rating to move it from [0,4] to [1,5]\n    FormSubmit({ rating: (rating ?? 0) + 1, feedback })\n      .then(() => {\n        setSubmit(true);\n        setLoading(false);\n      })\n      .catch(() => {\n        setSubmit(true);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      {!expanded && (\n        <Button\n          className=\"FeedbackButton\"\n          onClick={(): void => setExpanded(true)}\n        >\n          <FontAwesomeIcon icon={faCommentAlt} size=\"2x\" />\n        </Button>\n      )}\n      {expanded && (\n        <div>\n          <form className=\"FeedbackForm\">\n            <div className=\"container\">\n              <FontAwesomeIcon\n                icon={faTimes}\n                className=\"CloseIcon\"\n                onClick={(): void => setExpanded(false)}\n              />\n              <h3 className=\"FeedbackTitle\">Feedback</h3>\n              {!submit && (\n                <div>\n                  <p className=\"text\">How would you rate your experience?</p>\n                  <div className=\"FormButtons\">\n                    {[1, 2, 3, 4, 5].map((i) => (\n                      <Button\n                        key={i}\n                        className={classes(\n                          'FormButton',\n                          rating === i - 1 && 'active'\n                        )}\n                        onClick={(): void => setRating(i - 1)}\n                      >\n                        {i}\n                      </Button>\n                    ))}\n                  </div>\n                  <div className=\"ScoreLabels\">\n                    <span className=\"score\" style={{ marginLeft: '4px' }}>\n                      Poor\n                    </span>\n                    <span className=\"score\" style={{ marginRight: '4px' }}>\n                      Great\n                    </span>\n                  </div>\n                  <textarea\n                    className=\"FeedbackTextArea\"\n                    placeholder=\"Please let us know if you have any more feedback!\"\n                    onChange={(event): void => setFeedback(event.target.value)}\n                    value={feedback}\n                  />\n                  <Button\n                    className=\"SubmitButton\"\n                    onClick={onSubmit}\n                    disabled={rating == null || loading}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              )}\n              {submit && (\n                <div className=\"submitted\">\n                  <p className=\"submitted-thanks text\">\n                    <span>Thank you for your feedback!</span>\n                  </p>\n                  <div>\n                    <Button\n                      className=\"SubmitButton\"\n                      onClick={(): void => setExpanded(false)}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport swal from '@sweetalert/with-react';\nimport * as Sentry from '@sentry/react';\nimport Cookies from 'js-cookie';\n\nimport { classes } from '../../utils';\nimport { Header, Scheduler, Map, NavDrawer, NavMenu, Attribution } from '..';\nimport Feedback from '../Feedback';\nimport { Oscar } from '../../beans';\nimport { useCookieWithDefault, useJsonCookie, useMobile } from '../../hooks';\nimport {\n  TermContext,\n  TermContextValue,\n  TermsContext,\n  TermsContextValue,\n  ThemeContext,\n  ThemeContextValue,\n} from '../../contexts';\nimport { defaultTermData, isTheme } from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nconst NAV_TABS = ['Scheduler', 'Map'];\n\nexport default function App(): React.ReactElement {\n  const [terms, setTerms] = useState<string[]>([]);\n  const [oscar, setOscar] = useState<Oscar | null>(null);\n\n  // Persist the theme, term, and some term data as cookies\n  const [theme, setTheme] = useCookieWithDefault('theme', 'dark');\n  const [term, setTerm] = useCookieWithDefault('term', '');\n  const [termData, patchTermData] = useJsonCookie(term, defaultTermData);\n\n  // Only consider courses and CRNs that exist\n  // (fixes issues where a CRN/course is removed from Oscar\n  // after a schedule was made with them)\n  const filteredTermData = useMemo(() => {\n    const courseFilter = (courseId: string): boolean =>\n      oscar != null && oscar.findCourse(courseId) != null;\n    const crnFilter = (crn: string): boolean =>\n      oscar != null && oscar.findSection(crn) != null;\n\n    const desiredCourses = termData.desiredCourses.filter(courseFilter);\n    const pinnedCrns = termData.pinnedCrns.filter(crnFilter);\n    const excludedCrns = termData.excludedCrns.filter(crnFilter);\n\n    return { ...termData, desiredCourses, pinnedCrns, excludedCrns };\n  }, [oscar, termData]);\n\n  // Memoize context values so that their references are stable\n  const themeContextValue = useMemo<ThemeContextValue>(\n    () => [isTheme(theme) ? theme : 'dark', setTheme],\n    [theme, setTheme]\n  );\n  const termsContextValue = useMemo<TermsContextValue>(\n    () => [terms, setTerms],\n    [terms, setTerms]\n  );\n  const termContextValue = useMemo<TermContextValue>(\n    () => [\n      // We ensure that oscar is non-null when we give this to the context\n      // provider, so while this is an unsafe cast we ensure the safety\n      // manually.\n      { term, oscar: oscar as Oscar, ...filteredTermData },\n      { setTerm, setOscar, patchTermData },\n    ],\n    [term, oscar, filteredTermData, setTerm, setOscar, patchTermData]\n  );\n\n  // display popup when first visiting the site\n  useEffect(() => {\n    const cookieKey = 'visited-merge-notice';\n    if (!Cookies.get(cookieKey)) {\n      swal({\n        button: 'Got It!',\n        content: (\n          <div>\n            <img\n              style={{ width: '175px' }}\n              alt=\"GT Scheduler Logo\"\n              src=\"/mascot.png\"\n            />\n            <h1>GT Scheduler</h1>\n            <p>\n              Hey there, yellow jackets!{' '}\n              <a href=\"https://github.com/gt-scheduler\">GT Scheduler</a> is a\n              new collaboration between{' '}\n              <a href=\"https://bitsofgood.org/\">Bits of Good</a> and{' '}\n              <a href=\"https://jasonpark.me/\">Jason (Jinseo) Park</a> aimed at\n              making class registration easier for everybody! Now, you can\n              access course prerequisites, instructor GPAs, live seating\n              information, and more all in one location.\n            </p>\n            <p>\n              If you enjoy our work and are interested in contributing, feel\n              free to{' '}\n              <a href=\"https://github.com/gt-scheduler/website/pulls\">\n                open a pull request\n              </a>{' '}\n              with your improvements. Thank you and enjoy!\n            </p>\n          </div>\n        ),\n      }).catch((err) => {\n        softError(\n          new ErrorWithFields({\n            message: 'error with swal call',\n            source: err,\n            fields: {\n              cookieKey,\n            },\n          })\n        );\n      });\n\n      Cookies.set(cookieKey, 'true', { expires: 365 });\n    }\n  }, []);\n\n  // Fetch the current term's scraper information\n  useEffect(() => {\n    setOscar(null);\n    if (term) {\n      const url = `https://gt-scheduler.github.io/crawler/${term}.json`;\n      axios\n        .get(url)\n        .then((res) => {\n          const newOscar = new Oscar(res.data);\n          setOscar(newOscar);\n        })\n        .catch((err) => {\n          softError(\n            new ErrorWithFields({\n              message: 'error fetching crawler data',\n              source: err,\n              fields: {\n                term,\n                url,\n              },\n            })\n          );\n        });\n    }\n  }, [term]);\n\n  // Fetch all terms via the GitHub API\n  useEffect(() => {\n    const url =\n      'https://api.github.com/repos/gt-scheduler/crawler/contents?ref=gh-pages';\n    axios\n      .get(url)\n      .then((res) => {\n        const newTerms = (res.data as { name: string }[])\n          .map((content) => content.name)\n          .filter((name) => /\\d{6}\\.json/.test(name))\n          .map((name) => name.replace(/\\.json$/, ''))\n          .sort()\n          .reverse();\n        setTerms(newTerms);\n      })\n      .catch((err) => {\n        softError(\n          new ErrorWithFields({\n            message: 'error fetching list of terms',\n            source: err,\n            fields: {\n              url,\n            },\n          })\n        );\n      });\n  }, [setTerms]);\n\n  // Set the term to be the first one if it is unset\n  // (once the terms load)\n  useEffect(() => {\n    if (term === '' && terms.length > 0) {\n      const [recentTerm] = terms as [string];\n      setTerm(recentTerm);\n    }\n  }, [terms, term, setTerm]);\n\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = useMobile();\n  const className = classes('App', mobile && 'mobile', theme);\n\n  // Allow top-level tab-based navigation\n  const [currentTabIndex, setTabIndex] = useState(0);\n\n  // Handle the status of the drawer being open on mobile\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const openDrawer = useCallback(() => setIsDrawerOpen(true), []);\n  const closeDrawer = useCallback(() => setIsDrawerOpen(false), []);\n  useEffect(() => {\n    // Close the drawer if switching to desktop\n    if (isDrawerOpen && !mobile) {\n      setIsDrawerOpen(false);\n    }\n  }, [isDrawerOpen, mobile]);\n\n  // If the scraped JSON hasn't been loaded,\n  // then show an empty div as a loading intermediate\n  if (!oscar) {\n    return <div className={className} />;\n  }\n\n  return (\n    <ThemeContext.Provider value={themeContextValue}>\n      <TermsContext.Provider value={termsContextValue}>\n        <TermContext.Provider value={termContextValue}>\n          <div className={classes('App', className)}>\n            <Sentry.ErrorBoundary fallback=\"An error has occurred\">\n              {/* On mobile, show the nav drawer + overlay */}\n              {mobile && (\n                <NavDrawer open={isDrawerOpen} onClose={closeDrawer}>\n                  <NavMenu\n                    items={NAV_TABS}\n                    currentItem={currentTabIndex}\n                    onChangeItem={setTabIndex}\n                  />\n                </NavDrawer>\n              )}\n              {/* The header controls top-level navigation\n              and is always present */}\n              <Header\n                currentTab={currentTabIndex}\n                onChangeTab={setTabIndex}\n                onToggleMenu={openDrawer}\n                tabs={NAV_TABS}\n              />\n              {currentTabIndex === 0 && <Scheduler />}\n              {currentTabIndex === 1 && <Map />}\n              <Feedback />\n            </Sentry.ErrorBoundary>\n            <Attribution />\n          </div>\n        </TermContext.Provider>\n      </TermsContext.Provider>\n    </ThemeContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport App from './components/App';\n\nimport 'normalize.css';\nimport './stylesheet.scss';\n\n// Only initialize sentry on production\nif (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line no-console\n  console.log('Initializing Sentry');\n  Sentry.init({\n    dsn:\n      'https://8955ef982197469e97c7644a8c090db1@o552970.ingest.sentry.io/5679614',\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 0.2,\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}