{"version":3,"sources":["constants.ts","log.ts","vendor/ics.js","utils.tsx","components/Button/index.tsx","components/ActionRow/index.tsx","types.ts","beans/Course.ts","beans/Section.ts","beans/SortingOption.ts","beans/Feedback.ts","beans/Oscar.ts","contexts/index.ts","components/TimeBlocks/index.tsx","components/Calendar/index.tsx","components/CombinationContainer/index.tsx","components/Course/index.tsx","components/CourseAdd/index.tsx","components/CourseContainer/index.tsx","components/CourseFilter/index.tsx","hooks/useCookie.ts","hooks/useMobile.ts","components/Spinner/index.tsx","components/Select/index.tsx","components/HeaderDisplay/index.tsx","components/Header/index.tsx","components/Instructor/index.tsx","components/MapView/index.tsx","components/DaySelection/index.tsx","components/Map/index.tsx","components/NavDrawer/index.tsx","components/NavMenu/index.tsx","components/Palette/index.tsx","components/Prerequisite/index.tsx","components/Scheduler/index.tsx","components/Section/index.tsx","components/Tab/index.tsx","components/Attribution/index.tsx","components/Feedback/index.tsx","components/InformationModal/index.tsx","components/ErrorBoundary/index.tsx","components/ErrorDetails/index.tsx","components/ExpandableCard/index.tsx","components/ErrorDisplay/index.tsx","components/ErrorHeader/index.tsx","components/App/navigation.tsx","hooks/data/useDownloadTerms.ts","components/TermDataFallbackNotification/index.tsx","hooks/data/useTermDataFromCookies.ts","hooks/data/useTermFromCookies.ts","components/LoadingDisplay/index.tsx","components/App/content.tsx","components/App/data.tsx","hooks/data/useDownloadOscarData.ts","components/App/index.tsx","hooks/useBodyClass.ts","index.tsx"],"names":["OPEN","DAYS","PALETTE","DELIVERY_MODES","CAMPUSES","Video","Online","BACKEND_BASE_URL","ErrorWithFields","message","source","fields","topMessage","Error","stack","JSON","stringify","_","rootError","getRootError","name","console","group","this","error","allFields","getAllFields","Object","keys","length","info","groupEnd","softError","logToConsole","includes","type","rest","__do_not_use_type_in_sentry_it_is_special","Sentry","contexts","fingerprint","ics","uidDomain","prodId","navigator","userAgent","indexOf","SEPARATOR","appVersion","calendarEvents","calendarStart","join","calendarEnd","BYDAY_VALUES","events","calendar","addEvent","subject","description","location","begin","stop","rrule","freq","until","Number","isNaN","Date","parse","interval","parseInt","count","byday","prototype","toString","call","d","filter","elem","pos","start_date","end_date","now_date","start_year","getFullYear","slice","start_month","getMonth","start_day","getDate","start_hours","getHours","start_minutes","getMinutes","start_seconds","getSeconds","end_year","end_month","end_day","end_hours","end_minutes","end_seconds","now_year","now_month","now_day","now_hours","now_minutes","now_seconds","start_time","end_time","rruleString","start","end","now","uDate","toISOString","substring","replace","calendarEvent","splice","push","download","filename","ext","blob","Blob","bb","BlobBuilder","append","getBlob","document","characterSet","saveAs","build","log","stringToTime","string","regexResult","exec","hour","minute","timeToString","time","ampm","hh","mm","padStart","A","timeToShortString","periodToString","period","getRandomColor","colors","flat","Math","random","getContentClassName","color","hasConflictBetween","section1","section2","meetings","some","meeting1","meeting2","day","days","classes","classList","c","isMobile","window","innerWidth","simplifyName","tokens","split","shift","pop","unique","array","Array","from","Set","isLab","section","scheduleType","isLecture","getSemesterName","term","year","semester","humanizeArrayReact","conjunction","String","init","last","trim","serializePrereqs","reqs","openPar","closePar","i","isArray","subClauses","forEach","req","id","isAxiosNetworkError","err","Cancellable","isCancelled","cancel","cancelledSymbol","promise","Symbol","Promise","resolve","exponentialBackoff","attemptNumber","a","options","DelayFactory","getSanitizedOptions","jitter","numOfAttempts","MAX_SAFE_INTEGER","apply","sleep","amount_ms","setTimeout","undefined","Button","className","disabled","href","onClick","children","rel","target","tabIndex","onKeyDown","event","key","role","ActionRow","label","actions","restProps","flatMap","action","map","icon","styling","dataTip","dataFor","onMouseEnter","onMouseLeave","fixedWidth","style","defaultTermData","desiredCourses","pinnedCrns","excludedCrns","colorMap","sortingOptionIndex","defaultTermDataRaw","Course","oscar","courseId","data","number","title","sections","prereqs","hasLab","onlyLectures","onlyLabs","allInOnes","sectionGroups","entries","sectionId","sectionData","Section","lecture","associatedLabs","lab","startsWith","associatedLectures","lonelyLectures","lonelyLabs","distinct","groups","sectionGroupMeetings","sectionGroupHash","sectionGroup","hash","encodedCourse","encodeURIComponent","url","axios","get","responseData","baseId","cleanedId","gpaMap","rawAverageGpa","header","avg_gpa","actual","averageGpa","raw","instructorData","rawInstructor","instructor_name","idx","instructorGpa","GPA","instructor","nameSegments","lastName","firstName","course","crn","seating","credits","campus","deliveryMode","gradeBasis","instructors","scheduleTypeIndex","campusIndex","attributeIndices","gradeBasisIndex","scheduleTypes","campuses","attributes","attributeIndex","attribute","find","gradeBases","periodIndex","where","locationIndex","dateRangeIndex","periods","locations","dateRange","dateRanges","to","reduce","accum","prevDate","currDate","method","headers","then","response","tableRow","cheerio","load","$","eq","first","text","catch","fill","SortingOption","calculateFactor","rating","feedback","Oscar","updatedAt","version","courses","courseMap","crnMap","sortingOptions","caches","periodSegments","cacheIndex","segments","v","setHours","combination","startMap","endMap","tot","min","ends","values","starts","crnsList","dfs","courseIndex","crns","findCourse","isIncluded","isPinned","hasConflict","crnSection","findSection","pinnedOnlyLecture","pinnedOnlyLab","pinnedAllInOne","iterateTimeBlocks","combinations","sortingOption","actualSortingOptionsLength","factor","sort","b","callback","meeting","EMPTY_OSCAR","ThemeContext","React","createContext","next","TermsContext","TermContext","setTerm","patchTermData","patch","OverlayCrnsContext","makeSizeInfoKey","TimeBlocks","overlay","preview","capture","isAutosized","sizeInfo","useContext","contentClassName","sizeInfoKey","sizeInfoDay","sizeInfoPeriodDay","top","height","width","rowSize","left","rowIndex","backgroundColor","place","effect","Calendar","overlayCrns","crnSizeInfo","updateJoinedRowSizes","periodInfos","seen","curCrn","curPeriod","newRowSize","has","add","period2Info","maxMeetingLen","max","m","dayPeriodInfos","curRowSize","acc","courseSizeInfo","daySizeInfo","CombinationContainer","setOverlayCrns","handleResetPinnedCrns","useCallback","confirm","useMemo","getCombinations","sortedCombinations","sortCombinations","Select","onChange","newSortingOptionIndex","value","outline","rowCount","rowHeight","rowRenderer","index","onAddCourse","useState","expanded","setExpanded","prereqOpen","setPrereqOpen","paletteShown","setPaletteShown","setGpaMap","isSearching","Boolean","useEffect","fetchGpa","handleRemoveCourse","newColorMap","handleIncludeSections","hasPrereqs","instructorMap","primaryInstructor","instructorSections","excludedInstructors","every","includedInstructors","prereqControl","nextPrereqOpen","nextExpanded","prereqAction","faShareAlt","transform","infoAction","faInfoCircle","pinnedSections","totalCredits","faPlus","faAngleUp","faAngleDown","faPalette","faTrash","toFixed","Palette","onSelectColor","col","Instructor","gpa","Prerequisite","isSortKey","sortKey","CourseAdd","keyword","setKeyword","setFilter","activeIndex","setActiveIndex","inputRef","useRef","handleChangeKeyword","e","input","results","toUpperCase","keywordMatch","filterMatch","tags","sortValue","doesFilterMatchCourse","handleAddCourse","toBeExcludedCrns","timeDecided","doesFilterMatchSection","current","focus","handleKeyDown","preventDefault","handleToggleFilter","tag","handleResetFilter","activeCourse","ref","placeholder","property","labels","CourseFilter","selectedTags","onReset","onToggle","CourseContainer","ago","selectedTag","useCookie","defaultValue","val","Cookies","set","expires","setValue","useMobile","mobile","setMobile","handleResize","newMobile","addEventListener","removeEventListener","Spinner","size","actualSize","small","normal","viewBox","cx","cy","r","opened","setOpened","selectedOption","option","faCaretDown","optionValue","optionLabel","LoadingSelect","marginRight","HeaderDisplay","currentTab","onChangeTab","onToggleMenu","tabs","onCopyCrns","enableCopyCrns","onExportCalendar","enableExportCalendar","onDownloadCalendar","enableDownloadCalendar","termsState","theme","setTheme","handleThemeChange","newTheme","crnButton","faBars","onChangeTerm","currentTerm","terms","tabLabel","tabIdx","Tab","active","faDownload","faCalendarAlt","faPaste","delayHide","afterShow","ReactTooltip","hide","faAdjust","faGithub","Header","captureRef","handleExport","cal","alert","getTime","getDay","setDate","M","T","W","R","F","exportCoursesToCalendar","handleDownload","captureElement","computed","getComputedStyle","getPropertyValue","domtoimage","toBlob","offsetWidth","offsetHeight","downloadShadowCalendar","handleCopyCrns","copy","includeSection","excludeSections","sectionList","instructorPinned","includedSections","excludedSections","excludeTooltipId","faGraduationCap","faBan","pinned","MapView","latitude","longitude","zoom","viewState","setViewState","unknown","coordsToLocationsMap","Map","coords","mapStyle","mapboxApiAccessToken","process","onViewStateChange","newViewState","coordLocations","lat","long","faMapPin","coordLocation","showZoom","showCompass","isDay","rawDay","DaySelection","courseDateMap","activeDay","setActiveDay","colorPalette","daysOfTheWeek","formatTime","floor","adjustedHour","date","padding","timeLabel","times","daysOfWeek","firstMeeting","sortedCourseDateMap","courseDataList","activeLocations","NavDrawer","open","onClose","faTimes","NavMenu","items","currentItem","onChangeItem","item","paletteColor","BASE_ITEM_STYLE","fontSize","content","PrerequisiteEmpty","op","PrerequisiteClauseDisplay","clause","subClause","PrerequisiteOption","operator","PrerequisiteHeader","PrerequisiteItem","isLast","Scheduler","setTabIndex","overlayContextValue","tabTitle","Provider","setSeating","hovering","excludeSection","sect","pinSection","faThumbtack","faChair","fetchSeating","newSeating","afterHide","Attribution","Feedback","submit","setSubmit","setRating","setFeedback","loading","setLoading","faCommentAlt","marginLeft","FormSubmit","MODAL_COOKIE_KEY","InformationModalContent","margin","display","alt","src","ErrorBoundary","props","state","reactErrorInfo","setState","fallback","Component","ErrorDetailsField","ReactErrorDetails","errorInfo","BaseErrorDetails","componentStack","LoadingErrorDetails","overview","safeStringify","ExpandableCard","showChildren","setShowChildren","ErrorDisplay","errorDetails","ErrorHeader","faExclamationTriangle","NAV_TABS","AppNavigationContext","currentTabIndex","isDrawerOpen","openDrawer","closeDrawer","AppNavigation","setIsDrawerOpen","contextValue","AppMobileNav","GITHUB_API_URL","TermDataFallbackNotification","originalRaw","fallbackRaw","errors","onAccept","marginTop","tryPrettifyRawJSON","rawJSON","useTermDataFromCookies","termDataRaw","setTermDataRaw","persistentErrorState","setPersistentErrorState","parseResult","parsed","rawTermData","parseTermData","validateTermData","localStorage","setItem","fallbackTermDataRaw","stillLoading","contents","updated","termData","validationResult","updatedRawTermData","filteredTermData","crnFilter","result","isStringArray","field","termDataType","validTermData","termDataAsRecord","fieldValidationErrors","originalError","isValidTerm","LoadingDisplay","opacity","AppContent","SkeletonContent","AppSkeletonWithLoadingTerms","AppSkeletonWithSwitchableTerms","LoadTerms","loadingState","loadOperation","race","newTerms","test","reverse","useDownloadTerms","EnsureValidTerm","unrecoverableError","setUnrecoverableError","recentTerm","useTermFromCookies","LoadOscarData","loadedOscarRef","constructTermDataUrl","isFirst","showErrors","REFRESH_INTERVAL_MIN","json","loadAndRefresh","useDownloadOscarData","EnsureValidTermData","AppContextProvider","termContextValue","App","swal","button","cookieKey","ThemeLoader","AppCSSRoot","correctedTheme","isTheme","themeContextValue","useLayoutEffect","body","remove","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ignoreErrors","release","ReactDOM","render","getElementById"],"mappings":"y8BAAMA,EAAO,IAEPC,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAI5BC,EAAU,CACd,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAMEC,EAAyC,CAC7C,gBAAiB,SACjB,4BAA6B,qBAC7B,6BAA8B,sBAC9B,qBAAsB,eAGlBC,EAAmC,CACvC,yBAA0B,UAC1B,iCAAkC,qBAClC,gCAAiC,oBACjC,0BAA2B,WAC3BC,MAAO,QACPC,OAAQ,SACR,sBAAuB,eAGnBC,EAAmB,yC,oECpEZC,EAAb,kDAOE,cAQI,IAAD,EAPDC,EAOC,EAPDA,QACAC,EAMC,EANDA,OAMC,IALDC,cAKC,MALQ,GAKR,EAQD,GARC,qBACD,gBAfFA,YAcG,IAZHC,gBAYG,IAVHF,YAUG,EAGD,EAAKC,OAASA,EACd,EAAKC,WAAaH,EAIdC,aAAkBG,MACpB,EAAKH,OAASA,EACd,EAAKD,QAAL,UAAkBA,EAAlB,aAA8BC,EAAOD,SAKjB,MAAhBC,EAAOI,QACT,EAAKA,MAAQJ,EAAOI,YAMtB,GAHA,EAAKJ,OAAS,KACd,EAAKD,QAAUA,EAEK,OAAhB,EAAKC,OAAiB,CAGxB,EAAKC,OAAL,mBAAoC,OACpC,IACE,EAAKA,OAAL,SAA0BI,KAAKC,UAAUN,GACzC,MAAOO,GAEP,EAAKN,OAAL,6BAA8C,QAOpD,IAAMO,EAAY,EAAKC,eArCtB,OAsCGD,IAAS,gBAAaA,aAAqBV,EAC7C,EAAKY,KAAO,kBAEZ,EAAKA,KAAL,0BAA+BF,EAAUE,KAAzC,KAzCD,EAfL,gDA4DE,WAEEC,QAAQC,MAAMC,KAAKX,YACnBS,QAAQG,MAAMD,KAAKJ,gBAEnB,IAAMM,EAAYF,KAAKG,eACnBC,OAAOC,KAAKH,GAAWI,OAAS,GAClCR,QAAQS,KAAKL,GAGfJ,QAAQU,aAtEZ,0BA0EE,WACE,OAAIR,KAAKb,kBAAkBF,EAClB,2BAAKe,KAAKb,OAAOgB,gBAAmBH,KAAKZ,QAG3CY,KAAKZ,SA/EhB,0BAkFE,WACE,OAAoB,OAAhBY,KAAKb,OACAa,KAGLA,KAAKb,kBAAkBF,EAClBe,KAAKb,OAAOS,eAGdI,KAAKb,WA3FhB,eAAqCG,QAqG9B,SAASmB,EAAUR,GACxBA,EAAMS,eAKJ,IAAItB,EAASa,EAAME,eACnB,GAAIC,OAAOC,KAAKjB,GAAQuB,SAAS,QAAS,CACxC,MAA0BvB,EAAlBwB,EAAR,EAAQA,KAASC,EAAjB,iBACAzB,EAAM,aAAK0B,0CAA2CF,GAASC,GAGjEE,IAAwBd,EAAML,eAAgB,CAE5CoB,SAAU,CACR5B,SACAa,MAAO,CACLf,QAASe,EAAMf,UAGnB+B,YAAa,CAAChB,EAAMf,WCxH1B,IA2RegC,EA3RH,SAACC,EAAWC,GACtB,KACEC,UAAUC,UAAUC,QAAQ,SAAW,IACK,IAA5CF,UAAUC,UAAUC,QAAQ,YAF9B,CASyB,qBAAdJ,IACTA,EAAY,WAEQ,qBAAXC,IACTA,EAAS,YAGX,IAAMI,GAAqD,IAAzCH,UAAUI,WAAWF,QAAQ,OAAgB,OAAS,KAClEG,EAAiB,GACjBC,EAAgB,CACpB,kBADoB,iBAEVP,GACV,eACAQ,KAAKJ,GACDK,EAAW,UAAML,EAAN,iBACXM,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE1D,MAAO,CAKLC,OALK,WAMH,OAAOL,GAOTM,SAbK,WAcH,OACEL,EAAgBH,EAAYE,EAAeE,KAAKJ,GAAaK,GAYjEI,SA3BK,SA2BIC,EAASC,EAAaC,EAAUC,EAAOC,EAAMC,GAEpD,GACqB,qBAAZL,GACgB,qBAAhBC,GACa,qBAAbC,GACU,qBAAVC,GACS,qBAATC,EAEP,OAAO,EAIT,GAAIC,IACGA,EAAMA,MAAO,CAChB,GACiB,WAAfA,EAAMC,MACS,YAAfD,EAAMC,MACS,WAAfD,EAAMC,MACS,UAAfD,EAAMC,KAEN,MAAM,IAAIlD,MACR,sHAIJ,GAAIiD,EAAME,OACJC,OAAOC,MAAMC,KAAKC,MAAMN,EAAME,QAChC,MAAM,IAAInD,MACR,wDAKN,GAAIiD,EAAMO,UACJJ,OAAOC,MAAMI,SAASR,EAAMO,SAAU,KACxC,MAAM,IAAIxD,MAAM,kDAIpB,GAAIiD,EAAMS,OACJN,OAAOC,MAAMI,SAASR,EAAMS,MAAO,KACrC,MAAM,IAAI1D,MAAM,+CAIpB,GAA2B,qBAAhBiD,EAAMU,MAAuB,CACtC,GACkD,mBAAhD7C,OAAO8C,UAAUC,SAASC,KAAKb,EAAMU,OAErC,MAAM,IAAI3D,MAAM,6CAGlB,GAAIiD,EAAMU,MAAM3C,OAAS,EACvB,MAAM,IAAIhB,MACR,+EASJ,IAAK,IAAM+D,KAJXd,EAAMU,MAAQV,EAAMU,MAAMK,QAAO,SAACC,EAAMC,GACtC,OAAOjB,EAAMU,MAAM1B,QAAQgC,KAAUC,KAGvBjB,EAAMU,MACpB,GAAInB,EAAaP,QAAQgB,EAAMU,MAAMI,IAAM,EACzC,MAAM,IAAI/D,MACR,8GASZ,IAAMmE,EAAa,IAAIb,KAAKP,GACtBqB,EAAW,IAAId,KAAKN,GACpBqB,EAAW,IAAIf,KAEfgB,EAAa,cAAOH,EAAWI,cAAcV,YAAaW,OAAO,GACjEC,EAAc,aAAMN,EAAWO,WAAa,GAAGb,YAAaW,OAC/D,GAEGG,EAAY,YAAKR,EAAWS,UAAUf,YAAaW,OAAO,GAC1DK,EAAc,YAAKV,EAAWW,WAAWjB,YAAaW,OAAO,GAC7DO,EAAgB,YAAKZ,EAAWa,aAAanB,YAAaW,OAAO,GACjES,EAAgB,YAAKd,EAAWe,aAAarB,YAAaW,OAAO,GAEjEW,EAAW,cAAOf,EAASG,cAAcV,YAAaW,OAAO,GAC7DY,EAAY,aAAMhB,EAASM,WAAa,GAAGb,YAAaW,OAAO,GAC/Da,EAAU,YAAKjB,EAASQ,UAAUf,YAAaW,OAAO,GACtDc,EAAY,YAAKlB,EAASU,WAAWjB,YAAaW,OAAO,GACzDe,EAAc,YAAKnB,EAASY,aAAanB,YAAaW,OAAO,GAC7DgB,EAAc,YAAKpB,EAASc,aAAarB,YAAaW,OAAO,GAE7DiB,EAAW,cAAOpB,EAASE,cAAcV,YAAaW,OAAO,GAC7DkB,EAAY,aAAMrB,EAASK,WAAa,GAAGb,YAAaW,OAAO,GAC/DmB,EAAU,YAAKtB,EAASO,UAAUf,YAAaW,OAAO,GACtDoB,EAAY,YAAKvB,EAASS,WAAWjB,YAAaW,OAAO,GACzDqB,EAAc,YAAKxB,EAASW,aAAanB,YAAaW,OAAO,GAC7DsB,EAAc,YAAKzB,EAASa,aAAarB,YAAaW,OAAO,GAE/DuB,EAAa,GACbC,EAAW,GAEbnB,EACEE,EACAE,EACAK,EACAC,EACAC,IACF,IAEAO,EAAU,WAAOlB,GAAP,OAAqBE,GAArB,OAAqCE,GAC/Ce,EAAQ,WAAOV,GAAP,OAAmBC,GAAnB,OAAiCC,IAE3C,IAOIS,EALEC,EAAQ5B,EAAaG,EAAcE,EAAYoB,EAC/CI,EAAMhB,EAAWC,EAAYC,EAAUW,EACvCI,EAAMX,EAAWC,EAAYC,EAJrB,WAAOC,GAAP,OAAmBC,GAAnB,OAAiCC,GAQ/C,GAAI7C,EACF,GAAIA,EAAMA,MACRgD,EAAchD,EAAMA,UACf,CAGL,GAFAgD,EAAW,qBAAiBhD,EAAMC,MAE9BD,EAAME,MAAO,CACf,IAAMkD,EAAQ,IAAI/C,KAAKA,KAAKC,MAAMN,EAAME,QAAQmD,cAChDL,GAAW,iBAAcI,EACtBE,UAAU,EAAGF,EAAMrF,OAAS,IAC5BwF,QAAQ,OAAQ,IAFR,WAKTvD,EAAMO,WACRyC,GAAW,oBAAiBhD,EAAMO,WAGhCP,EAAMS,QACRuC,GAAW,iBAAchD,EAAMS,QAG7BT,EAAMU,OAASV,EAAMU,MAAM3C,OAAS,IACtCiF,GAAW,iBAAchD,EAAMU,MAAMrB,KAAK,OAOhD,IAAImE,EAAgB,CAClB,eADkB,cAEXrE,EAAepB,OAFJ,YAEca,GAChC,eAHkB,sBAIHgB,GAJG,kCAKSuD,GALT,kCAMSF,GANT,gCAOOC,GAPP,mBAQNrD,GARM,iCASQF,GAC1B,qBACA,cAUF,OAPIqD,GACFQ,EAAcC,OAAO,EAAG,EAAGT,GAG7BQ,EAAgBA,EAAcnE,KAAKJ,GAEnCE,EAAeuE,KAAKF,GACbA,GAQTG,SAlNK,SAkNIC,EAAUC,GACjB,GAAI1E,EAAepB,OAAS,EAC1B,OAAO,EAGT8F,EAAqB,qBAARA,EAAsBA,EAAM,OACzCD,EAA+B,qBAAbA,EAA2BA,EAAW,WACxD,IAMIE,EANErE,EACJL,EACAH,EACAE,EAAeE,KAAKJ,GACpBK,EAGF,IAAgD,IAA5CR,UAAUC,UAAUC,QAAQ,WAE9B8E,EAAO,IAAIC,KAAK,CAACtE,QACZ,CAEL,IAAMuE,EAAK,IAAIC,YACfD,EAAGE,OAAOzE,GACVqE,EAAOE,EAAGG,QAAH,mCAAuCC,SAASC,eAGzD,OADAC,OAAOR,EAAMF,EAAWC,GACjBpE,GAMT8E,MAhPK,WAiPH,QAAIpF,EAAepB,OAAS,IAK1BqB,EACAH,EACAE,EAAeE,KAAKJ,GACpBK,IA9QJ/B,QAAQiH,IAAI,wB,OCIHC,EAAe,SAACC,GAC3B,IAAMC,EAAc,2BAA2BC,KAAKF,GACpD,GAAoB,OAAhBC,EAAsB,OAAO,EACjC,MAA+BA,EAA/B,mBAASE,EAAT,KAAeC,EAAf,KAMA,OAAkD,KAAhC,MANlB,KAMwB,GAAK,KAAOD,EAAO,MAAaC,GAG7CC,EAAe,SAACC,GAAuC,IAAzBC,IAAwB,yDAC3DJ,EAAQG,EAAO,GAAM,EACrBF,EAASE,EAAO,GAChBE,EAAKL,EAAO,GAAKA,EAAO,GAAKA,EAC7BM,EAAK,UAAGL,GAASM,SAAS,EAAG,KAC7BC,EAAC,UAAMR,EAAO,GAAK,IAAM,IAAxB,KACP,OAAOI,EAAI,UAAMC,EAAN,YAAYC,EAAZ,YAAkBE,GAAlB,UAA2BH,EAA3B,YAAiCC,IAGjCG,EAAoB,SAACN,GAChC,IAAMH,EAAQG,EAAO,GAAM,EAC3B,MAAM,GAAN,OAAUH,EAAO,GAAKA,EAAO,GAAKA,GAAlC,OAAyCA,EAAO,GAAK,IAAM,IAA3D,MAGWU,EAAiB,SAACC,GAAD,OAClB,MAAVA,EAAA,UACOT,EAAaS,EAAOvC,OAAO,GADlC,cAC8C8B,EAAaS,EAAOtC,MAC9D,OAEOuC,EAAiB,WAAe,IAAD,EACpCC,EAAStJ,EAAQuJ,OAEvB,iBAAOD,EADQE,KAAKC,SAAWH,EAAO3H,OAAU,UAChD,QAAwB,WAGb+H,EAAsB,SAACC,GAClC,OAAa,MAATA,GAIO,KAHDvF,SAASuF,EAAMzC,UAAU,EAAG,GAAI,IAGnB,KAFb9C,SAASuF,EAAMzC,UAAU,EAAG,GAAI,IAEP,KADzB9C,SAASuF,EAAMzC,UAAU,EAAG,GAAI,IACC,IAJjB,gBAMtB,gBAGO0C,EAAqB,SAChCC,EACAC,GAFgC,OAIhCD,EAASE,SAASC,MAAK,SAACC,GAAD,OACrBH,EAASC,SAASC,MAChB,SAACE,GAAD,OACED,EAASb,QACTc,EAASd,QACTrJ,EAAKiK,MACH,SAACG,GAAD,OAASF,EAASG,KAAKpI,SAASmI,IAAQD,EAASE,KAAKpI,SAASmI,OAEjEF,EAASb,OAAOvC,MAAQqD,EAASd,OAAOtC,KACxCoD,EAASd,OAAOvC,MAAQoD,EAASb,OAAOtC,WAInCuD,EAAU,sCAClBC,EADkB,yBAClBA,EADkB,uBAEVA,EAAU3F,QAAO,SAAC4F,GAAD,OAAOA,KAAGtH,KAAK,MAEhCuH,EAAW,kBAAeC,OAAOC,WAAa,MAE9CC,EAAe,SAACzJ,GAC3B,IAAM0J,EAAS1J,EAAK2J,MAAM,KAG1B,MAAO,CAFWD,EAAOE,QACRF,EAAOG,OACK9H,KAAK,MAG7B,SAAS+H,EAAUC,GACxB,OAAOC,MAAMC,KAAK,IAAIC,IAAIH,IAGrB,IAAMI,EAAQ,SAACC,GAAD,MACnB,CAAC,MAAO,UAAUtB,MAAK,SAAC/H,GAAD,OAAUqJ,EAAQC,aAAavJ,SAASC,OAEpDuJ,EAAY,SAACF,GAAD,OACvBA,EAAQC,aAAavJ,SAAS,YAEnByJ,EAAkB,SAACC,GAC9B,IAAMC,EAAOD,EAAKxE,UAAU,EAAG,GACzB0E,EAAY,WAChB,OAAQ7H,OAAOK,SAASsH,EAAKxE,UAAU,GAAI,KACzC,KAAK,EACH,MAAO,SACT,KAAK,EACL,KAAK,EACH,MAAO,SACT,KAAK,EACL,KAAK,EACH,MAAO,SACT,KAAK,EACL,KAAK,EACH,MAAO,OACT,QACE,MAAO,WAdK,GAiBlB,MAAM,GAAN,OAAU0E,EAAV,YAAsBD,IAYjB,SAASE,GACdZ,GAEkB,IADlBa,EACiB,uDADc,MAE/B,GAAqB,IAAjBb,EAAMtJ,OACR,OAAO,KAET,GAAqB,IAAjBsJ,EAAMtJ,OACR,OAAOoK,OAAOd,EAAM,IAEtB,GAAqB,IAAjBA,EAAMtJ,OACR,OACE,qCACGoK,OAAOd,EAAM,IADhB,IACsBa,EADtB,IACoCC,OAAOd,EAAM,OAKrD,IAAMe,EAAI,YAAOf,GACXgB,EAAOD,EAAKjB,MAClB,OACE,qCACG,UAAGiB,EAAK/I,KAAK,MAAb,KAAsBiJ,OADzB,IACkCJ,EADlC,IACgDC,OAAOE,MAKpD,IAAME,GAAmB,SAAnBA,EACXC,GAGY,IAFZC,EAEW,wDADXC,EACW,wDAOLL,EAAO,SAACM,GAAD,OACXrB,MAAMsB,QAAQJ,IAASG,IAAMH,EAAKzK,OAAS,GACzC2G,EAAS,GAEb,GAAK4C,MAAMsB,QAAQJ,IAEZ,GAAgB,QAAZA,EAAK,GAAc,CAC5B,kBAA0BA,GAAdK,EAAZ,WACAA,EAAWC,SAAQ,SAACC,EAAKJ,GACvBjE,GACE6D,EAAiBQ,EAAW,IAANJ,EAASN,EAAKM,KAAON,EAAKM,GAAK,GAAK,iBAEzD,GAAgB,OAAZH,EAAK,GAAa,CAC3B,kBAA0BA,GAAdK,EAAZ,WACAA,EAAWC,SAAQ,SAACC,EAAKJ,GACvBjE,GAAU6D,EAAiBQ,IAAQV,EAAKM,GAAK,GAAK,iBAVpDjE,IAAW+D,EAAU,IAAM,IAAMD,EAAKQ,IAAMN,EAAW,IAAM,IAc/D,OAAOhE,GAQIuE,GAAsB,SAACC,GAClC,OAAOA,aAAenM,OAASmM,EAAIvM,QAAQyB,SAAS,kBAOzC+K,GASX,aAAe,IAAD,gCARdC,iBAQc,OANdC,YAMc,OAJdC,qBAIc,OAFdC,aAEc,EACZ9L,KAAK2L,aAAc,EACnB3L,KAAK4L,OAAS,aACd5L,KAAK6L,gBAAkBE,OAAO,mCAC9B/L,KAAK8L,QAAU,IAAIE,SAAgB,SAACC,GAClC,EAAKL,OAAS,WACZ,EAAKD,aAAc,EACnBM,EAAQ,EAAKJ,sBAad,SAAeK,GAAtB,mC,8CAAO,WACLC,GADK,2BAAAC,EAAA,6DAELC,EAFK,+BAE+B,GAF/B,SAICC,uBACJC,8BAAoB,aAElBC,OAAQ,OACRC,cAAe/J,OAAOgK,kBACnBL,IAELF,GACAQ,QAZG,4C,sBAkBA,SAAeC,GAAtB,mC,8CAAO,6BAAAR,EAAA,6DACLS,EADK,EACLA,UADK,SAKC,IAAIb,SAAQ,SAACC,GAAD,OAChBa,YAAW,kBAAMb,OAAQc,KAAYF,MANlC,4C,kDC7OQ,SAASG,GAAT,GAMsB,IALnCC,EAKkC,EALlCA,UAKkC,IAJlCC,gBAIkC,SAHlCC,EAGkC,EAHlCA,KACAC,EAEkC,EAFlCA,QACAC,EACkC,EADlCA,SAEA,OAAIH,EAEA,qBAAKD,UAAWjE,EAAQ,SAAU,WAAYiE,GAA9C,SAA2DI,IAGnD,MAARF,EAEA,mBACEF,UAAWjE,EAAQ,SAAUiE,GAC7BE,KAAMA,EACNG,IAAI,sBACJC,OAAO,SAJT,SAMGF,IAKL,qBACEJ,UAAWjE,EAAQ,SAAUiE,GAC7BG,QAASA,EACTI,SAAU,EACVC,UAAW,SAACC,GAEQ,UAAdA,EAAMC,KAA8B,MAAXP,GAAiBA,KAEhDQ,KAAK,SARP,SAUGP,I,iICtBQ,SAASQ,GAAT,GAMyB,IALtCZ,EAKqC,EALrCA,UACAa,EAIqC,EAJrCA,MACAT,EAGqC,EAHrCA,SACAU,EAEqC,EAFrCA,QACGC,EACkC,kBACrC,OACE,8CAAKf,UAAWjE,EAAQ,YAAaiE,IAAgBe,GAArD,cACE,sBAAKf,UAAU,oBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBa,IACxB,qBAAKb,UAAWjE,EAAQ,UAAW,WAAnC,SACG+E,EACEE,SAAQ,SAACC,GAAD,OAAuB,MAAVA,EAAiB,CAACA,GAAU,MACjDC,KACC,WAUEjD,GAVF,IAEIkD,EAFJ,EAEIA,KACAC,EAHJ,EAGIA,QACAC,EAJJ,EAIIA,QACAC,EALJ,EAKIA,QACAC,EANJ,EAMIA,aACAC,EAPJ,EAOIA,aACG5N,EARP,yBAYE,wBAACmM,GAAD,yBAAQC,UAAU,UAAapM,GAA/B,IAAqC8M,IAAKzC,IACxC,cAAC,KAAD,CACEwD,YAAU,EACVC,MAAON,EACPD,KAAMA,EACN,WAAUE,EACV,WAAUC,EACVC,aAAcA,EACdC,aAAcA,aAO3BpB,MC3BA,IAAMuB,GAA4B,CACvCC,eAAgB,GAChBC,WAAY,GACZC,aAAc,GACdC,SAAU,GACVC,mBAAoB,GAGTC,GAA6B1P,KAAKC,UAAUmP,I,6BCnBpCO,G,WAyBnB,WAAYC,EAAcC,EAAkBC,GAAsB,IAAD,gCAxBjE/D,QAwBiE,OAtBjErJ,aAsBiE,OApBjEqN,YAoBiE,OAlBjEC,WAkBiE,OAhBjEC,cAgBiE,OAdjEC,aAciE,OAZjEC,YAYiE,OAVjEC,kBAUiE,OARjEC,cAQiE,OANjEC,eAMiE,OAJjEC,mBAIiE,OAFjE1F,UAEiE,EAC/DrK,KAAKqK,KAAO+E,EAAM/E,KAClB,kBAAmCiF,EAAnC,GAAOE,EAAP,KAAcC,EAAd,KAAwBC,EAAxB,KAEA1P,KAAKuL,GAAK8D,EACV,MAA0BrP,KAAKuL,GAAG/B,MAAM,KAAxC,mBAAOtH,EAAP,KAAgBqN,EAAhB,KACA,GAAe,MAAXrN,GAA6B,MAAVqN,EACrB,MAAM,IAAItQ,EAAgB,CACxBC,QAAS,gCACTE,OAAQ,CACNmM,GAAIvL,KAAKuL,GACTrJ,UACAqN,SACAlF,KAAMrK,KAAKqK,QAIjBrK,KAAKkC,QAAUA,EACflC,KAAKuP,OAASA,EAEdvP,KAAKwP,MAAQA,EACbxP,KAAKyP,SAAWrP,OAAO4P,QAAQP,GAAUxB,SACvC,YAA+B,IAAD,mBAA5BgC,EAA4B,KAAjBC,EAAiB,KAC5B,GAAmB,MAAfA,EAAqB,MAAO,GAChC,IACE,MAAO,CAAC,IAAIC,GAAQf,EAAO,EAAMa,EAAWC,IAC5C,MAAOzE,GAWP,OAVAhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,mCACTC,OAAQsM,EACRrM,OAAQ,CACNiQ,WACAhF,KAAM,EAAKA,SAIV,OAIbrK,KAAK0P,QAAUA,EAEf,IAAME,EAAe5P,KAAKyP,SAASnM,QACjC,SAAC2G,GAAD,OAAaE,EAAUF,KAAaD,EAAMC,MAEtC4F,EAAW7P,KAAKyP,SAASnM,QAC7B,SAAC2G,GAAD,OAAaD,EAAMC,KAAaE,EAAUF,MAG5C,GADAjK,KAAK2P,SAAWC,EAAatP,UAAYuP,EAASvP,OAC9CN,KAAK2P,OAAQ,CAAC,IAAD,iBACOC,GADP,yBACJQ,EADI,QAEbA,EAAQC,eAAiBR,EAASvM,QAAO,SAACgN,GAAD,OACvCA,EAAI/E,GAAGgF,WAAWH,EAAQ7E,QAF9B,2BAAqC,IADtB,mDAMGsE,GANH,yBAMJS,EANI,QAObA,EAAIE,mBAAqBZ,EAAatM,QAAO,SAAC8M,GAAD,OAC3CE,EAAI/E,GAAGgF,WAAWH,EAAQ7E,QAF9B,2BAA6B,IANd,8BAWf,IAXe,EAWTkF,EAAiBb,EAAatM,QAClC,SAAC8M,GAAD,OAAcA,EAAQC,eAAe/P,UAEjCoQ,EAAab,EAASvM,QAC1B,SAACgN,GAAD,OAAUA,EAAIE,mBAAmBlQ,UAfpB,eAiBOmQ,GAjBP,yBAiBJL,EAjBI,QAkBbA,EAAQC,eAAiBK,EAAWpN,QAClC,SAACgN,GAAD,OAAU/H,EAAmB6H,EAASE,OAF1C,2BAAuC,IAjBxB,mDAsBGI,GAtBH,yBAsBJJ,EAtBI,QAuBbA,EAAIE,mBAAqBC,EAAenN,QACtC,SAAC8M,GAAD,OAAc7H,EAAmB6H,EAASE,OAF9C,2BAA+B,IAtBhB,8BA2BftQ,KAAK4P,aAAeA,EACpB5P,KAAK6P,SAAWA,EAChB7P,KAAK8P,UAAY9P,KAAKyP,SAASnM,QAC7B,SAAC2G,GAAD,OAAaE,EAAUF,IAAYD,EAAMC,WAG3CjK,KAAK+P,cAAgB/P,KAAK2Q,SAAS3Q,KAAKyP,U,4CAI5C,SAASA,GACP,IAAMmB,EAAuC,GAoB7C,OAnBAnB,EAASpE,SAAQ,SAACpB,GAChB,IAAM4G,EAAuB5G,EAAQvB,SAASyF,KAC5C,kBAAuB,CACrBpF,KADF,EAAGA,KAEDhB,OAFF,EAASA,WAKL+I,EAAmBtR,KAAKC,UAAUoR,GAClCE,EAAeH,EAAOE,GACxBC,EACFA,EAAatB,SAASxJ,KAAKgE,GAE3B2G,EAAOE,GAAoB,CACzBE,KAAMF,EACNpI,SAAUmI,EACVpB,SAAU,CAACxF,OAIV2G,I,6DAGT,6CAAAxE,EAAA,4DAEI,mEAGIb,EALR,UAKgBvL,KAAKkC,QALrB,YAKgClC,KAAKuP,OAAOzJ,QAAQ,MAAO,KACnDmL,EAAgBC,mBAAmB3F,GACnC4F,EAPR,UAEI,mEAFJ,4BAOyCF,GAPzC,kBAW0BG,KAAMC,IAA8BF,GAX9D,OAWIG,EAXJ,OAWoEhC,KAXpE,yDAcS9D,GAAoB,EAAD,KACtB/K,EACE,IAAIxB,EAAgB,CAClBC,QAAS,yDACTC,OAAO,EAAD,GACNC,OAAQ,CACNmS,OAAQvR,KAAKuL,GACbiG,UAAWjG,EACX4F,MACA9G,KAAMrK,KAAKqK,SAvBvB,kBA6BW,IA7BX,qBAoCUoH,EAAoB,GAKJ,QAFhBC,EAAgBJ,EAAaK,OAAO,GAAGC,SAvCjD,0CAyCuC,IAzCvC,WA0CiC,kBAAlBF,EA1Cf,uBA2CY,IAAIzS,EAAgB,CACxBC,QAAQ,gDACRE,OAAQ,CACNyS,OAAQH,EACRrH,KAAMrK,KAAKqK,QA/CrB,eAkDIoH,EAAOK,WAAaJ,EAGpBJ,EAAaS,IAAI1G,SAAQ,SAAC2G,EAAgB9G,GAExC,IAAM+G,EAAgBD,EAAeE,gBACrC,GAA6B,kBAAlBD,EACT,MAAM,IAAIhT,EAAgB,CACxBC,QAAQ,uDACRE,OAAQ,CACN+S,IAAKjH,EACL2G,OAAQI,EACR5H,KAAM,EAAKA,QAKjB,IAAM+H,EAAgBJ,EAAeK,IACrC,GAA6B,kBAAlBD,EACT,MAAM,IAAInT,EAAgB,CACxBC,QAAQ,2CACRE,OAAQ,CACN+S,IAAKjH,EACL2G,OAAQO,EACR/H,KAAM,EAAKA,QAKjB,IAAIiI,EAAaL,EACXM,EAAeD,EAAW9I,MAAM,MACtC,GAA4B,IAAxB+I,EAAajS,OAAc,CAC7B,MAA8BiS,EAA9B,mBAAOC,EAAP,KAAiBC,EAAjB,KACAH,EAAU,UAAMG,EAAN,YAAmBD,GAG/Bf,EAAOa,GAAcF,KAtF3B,kBAyFWX,GAzFX,0CA2FIhR,EACE,IAAIxB,EAAgB,CAClBC,QACE,gEACFC,OAAO,EAAD,GACNC,OAAQ,CACNmS,OAAQvR,KAAKuL,GACbiG,UAAWjG,EACX4F,MACA9G,KAAMrK,KAAKqK,SApGrB,kBAwGW,IAxGX,kE,kFCtImB8F,G,WA+BnB,WACEf,EACAsD,EACAzC,EACAX,GACC,IAAD,+BAnCFoD,YAmCE,OAjCFnH,QAiCE,OA/BFoH,SA+BE,OA7BFC,aA6BE,OA3BFC,aA2BE,OAzBF3I,kBAyBE,OAvBF4I,YAuBE,OArBFC,kBAqBE,OAnBFC,gBAmBE,OAjBFtK,cAiBE,OAfFuK,iBAeE,OAZF5C,oBAYE,OATFG,wBASE,OAPFnG,UAOE,EACArK,KAAKqK,KAAO+E,EAAM/E,KAClB,kBAQIiF,EARJ,GACEqD,EADF,KAEEjK,EAFF,KAGEmK,EAHF,KAIEK,EAJF,KAKEC,EALF,KAMEC,EANF,KAOEC,EAPF,KAUArT,KAAK0S,OAASA,EACd1S,KAAKuL,GAAK0E,EACVjQ,KAAK2S,IAAMA,EACX3S,KAAK4S,QAAU,CAAC,GAAI,GACpB5S,KAAK6S,QAAUA,EACf7S,KAAKkK,aAAL,UAAoBkF,EAAMkE,cAAcJ,UAAxC,QAA8D,UAC9DlT,KAAK8S,OAAL,UAAc1D,EAAMmE,SAASJ,UAA7B,QAA6C,UAE7C,IAAMK,EAAaJ,EAChBjF,KAAI,SAACsF,GAAD,OAAoBrE,EAAMoE,WAAWC,MACzCxF,SAAQ,SAACyF,GAAD,OAA6B,MAAbA,EAAoB,GAAK,CAACA,MACrD1T,KAAK+S,aAAeS,EAAWG,MAC7B,SAACD,GAAD,OAAeA,KAAa9U,KAG9BoB,KAAKgT,WAAL,UAAkB5D,EAAMwE,WAAWP,UAAnC,QAAuD,UACvDrT,KAAK0I,SAAWA,EAASyF,KACvB,uCACE0F,EADF,KAEE9K,EAFF,KAGE+K,EAHF,KAIEC,EAJF,KAKEd,EALF,KAMEe,EANF,WAOO,CACLjM,OAAQqH,EAAM6E,QAAQJ,GACtB9K,KAAe,WAATA,EAAoB,GAAKA,EAAKS,MAAM,IAC1CsK,QACA1R,SAAQ,UAAEgN,EAAM8E,UAAUH,UAAlB,QAAoC,KAC5Cd,YAAaA,EAAY9E,KAAI,SAACmE,GAAD,OAC3BA,EAAWxM,QAAQ,UAAW,OAGhCqO,UAAS,UAAE/E,EAAMgF,WAAWJ,UAAnB,QAAsC,CAC7ClK,KAAM,IAAIlH,KACVyR,GAAI,IAAIzR,UAId5C,KAAKiT,YAActJ,EACjB3J,KAAK0I,SACFyF,KAAc,qBAAG8E,eACjBqB,QAAO,SAACC,EAAOtB,GAAR,4BAA4BsB,GAA5B,YAAsCtB,MAAc,KAKhEjT,KAAKqQ,eAAiB,GACtBrQ,KAAKwQ,mBAAqB,G,uFAG5B,WAAmBnG,GAAnB,0BAAA+B,EAAA,yDACQoI,EAAWxU,KAAK4S,QAAQ,MACxB6B,EAAW7R,KAAK8C,OAEP8O,EAAW,KAJ5B,uBAKUrD,EALV,UAKmBnS,EALnB,qCAKgEqL,EALhE,gBAK4ErK,KAAK2S,KALjF,kBAMWvB,KAAM,CACXD,MACAuD,OAAQ,MACRC,QAAS,CACP,mBAAoB,iBACpB,eAAgB,eAGjBC,MAAK,SAACC,GACL,IAEMC,EAFIC,KAAQC,KAAKH,EAASvF,KACN2F,CAAE,uCACOtB,KAAK,MAYxC,OAVA,EAAKf,QAAU,CACb,CACE7P,SAAS+R,EAASI,GAAG,GAAG7H,SAAS,MAAM8H,QAAQC,OAAQ,IACvDrS,SAAS+R,EAASI,GAAG,GAAG7H,SAAS,MAAM6H,GAAG,GAAGE,OAAQ,IACrDrS,SAAS+R,EAASI,GAAG,GAAG7H,SAAS,MAAM8H,QAAQC,OAAQ,IACvDrS,SAAS+R,EAASI,GAAG,GAAG7H,SAAS,MAAM6H,GAAG,GAAGE,OAAQ,KAEvDX,GAGK,EAAK7B,WAEbyC,OAAM,iBAAM,CAAC,IAAIxL,MAAM,GAAGyL,KAAK,OAAQb,OA/B9C,gCAiCSzU,KAAK4S,SAjCd,gD,8DClImB2C,GAKnB,WAAYzH,EAAe0H,GAAkD,yBAJ7E1H,WAI4E,OAF5E0H,qBAE4E,EAC1ExV,KAAK8N,MAAQA,EACb9N,KAAKwV,gBAAkBA,G,8CCLZ,iCAAApJ,EAAA,6DACbqJ,EADa,EACbA,OACAC,EAFa,EAEbA,SAKMvE,EAPO,UAOEnS,EAPF,sBAQPoS,KAAM,CACVsD,OAAQ,OACRvD,MACA7B,KAAM,CACJmG,SACAC,YAEFf,QAAS,CACP,eAAgB,oCAhBP,4C,0BCUMgB,G,WA2BnB,WAAYrG,EAAoCjF,GAAe,IAAD,gCAAdA,OAAc,KA1B9D4J,aA0B8D,OAxB9DG,gBAwB8D,OAtB9Dd,mBAsB8D,OApB9DC,cAoB8D,OAlB9DC,gBAkB8D,OAhB9DI,gBAgB8D,OAd9DM,eAc8D,OAZ9D0B,eAY8D,OAV9DC,aAU8D,OAR9DC,aAQ8D,OAN9DC,eAM8D,OAJ9DC,YAI8D,OAF9DC,oBAE8D,EAC5D,IAAQH,EAAwCxG,EAAxCwG,QAASI,EAA+B5G,EAA/B4G,OAAQN,EAAuBtG,EAAvBsG,UAAWC,EAAYvG,EAAZuG,QAEpC7V,KAAKiU,QAAUiC,EAAOjC,QAAQ9F,KAAI,SAACpG,EAAQmD,GACzC,GAAe,QAAXnD,EAAJ,CAIA,IAAMoO,EAAiBpO,EAAOyB,MAAM,OACpC,GAA8B,IAA1B2M,EAAe7V,OAAnB,CAcA,MAAqB6V,EAArB,mBAAO3Q,EAAP,KAAcC,EAAd,KACA,MAAO,CACLD,MAAOwB,EAAaxB,GACpBC,IAAKuB,EAAavB,IAhBlBhF,EACE,IAAIxB,EAAgB,CAClBC,QAAS,wCACTE,OAAQ,CACN2I,SACAqO,WAAYlL,EACZb,KAAM,EAAKA,aAcrBrK,KAAKoU,WAAa8B,EAAO9B,WAAWjG,KAAI,SAACgG,EAAWjJ,GAClD,IAAImL,EAAWlC,EAAU3K,MAAM,OACP,IAApB6M,EAAS/V,SACXG,EACE,IAAIxB,EAAgB,CAClBC,QAAS,4CACTE,OAAQ,CACN+U,YACAiC,WAAYlL,EACZb,KAAM,EAAKA,SAKjBgM,EAAW,CAAC,cAAe,gBAG7B,MAAmBA,EAASlI,KAAI,SAACmI,GAAD,OAAO,IAAI1T,KAAK0T,MAAhD,mBAAOxM,EAAP,KAAauK,EAAb,KAGA,OAFAvK,EAAKyM,SAAS,GACdlC,EAAGkC,SAAS,GAAI,GAAI,GAAI,KACjB,CAAEzM,OAAMuK,SAGjBrU,KAAKsT,cAAgB4C,EAAO5C,cAC5BtT,KAAKuT,SAAW2C,EAAO3C,SACvBvT,KAAKwT,WAAa0C,EAAO1C,WACzBxT,KAAK4T,WAAasC,EAAOtC,WACzB5T,KAAKkU,UAAYgC,EAAOhC,UACxBlU,KAAK4V,UAAY,IAAIhT,KAAKgT,GAC1B5V,KAAK6V,QAAUA,EAEf7V,KAAK8V,QAAU1V,OAAO4P,QAAQ8F,GAAS7H,SAAQ,YAAyB,IAAD,mBAAtBoB,EAAsB,KAAZlQ,EAAY,KACrE,IACE,MAAO,CAAC,IAAIgQ,GAAO,EAAME,EAAUlQ,IACnC,MAAOsM,GAWP,OAVAhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,mCACTE,OAAQ,CACNiQ,WACAlQ,SACAkL,KAAM,EAAKA,SAIV,OAIXrK,KAAK+V,UAAY,GACjB/V,KAAKgW,OAAS,GACdhW,KAAK8V,QAAQzK,SAAQ,SAACqH,GACpB,EAAKqD,UAAUrD,EAAOnH,IAAMmH,EAC5BA,EAAOjD,SAASpE,SAAQ,SAACpB,GACvB,EAAK+L,OAAO/L,EAAQ0I,KAAO1I,QAI/BjK,KAAKiW,eAAiB,CACpB,IAAIV,GAAc,gBAAgB,SAACiB,GACjC,IAAQC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAQlB,OAPctW,OAAOC,KAAKoW,GAAUtI,KAAI,SAACrF,GACvC,IAAMrD,EAAMiR,EAAO5N,GACbtD,EAAQiR,EAAS3N,GACvB,OAAW,MAAPrD,GAAwB,MAATD,EAAsB,EAClCC,EAAMD,KAEG8O,QAAO,SAACqC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,MAGpD,IAAIrB,GAAc,mBAAmB,SAACiB,GACpC,IAAQE,EAAWF,EAAXE,OACFG,EAAOzW,OAAO0W,OAAOJ,GAG3B,QAFYG,EAAKvC,QAAe,SAACqC,EAAKlR,GAAN,OAAckR,GAAG,OAAIlR,QAAJ,IAAIA,IAAO,KAAI,GAC9CoR,EAAKvW,WAGzB,IAAIiV,GAAc,oBAAoB,SAACiB,GACrC,IAAQC,EAAaD,EAAbC,SACFM,EAAS3W,OAAO0W,OAAOL,GAG7B,QAFYM,EAAOzC,QAAe,SAACqC,EAAKC,GAAN,OAAcD,GAAG,OAAIC,QAAJ,IAAIA,IAAO,KAAI,GAChDG,EAAOzW,Y,8CAM/B,SAAW+O,GACT,OAAOrP,KAAK+V,UAAU1G,K,yBAGxB,SAAYsD,GACV,OAAO3S,KAAKgW,OAAOrD,K,6BAGrB,SACE9D,EACAC,EACAC,GACgB,IAAD,OACTiI,EAAuB,GAqE7B,OApEY,SAANC,IAAuD,IAAhDC,EAA+C,uDAAjC,EAAGC,EAA8B,uDAAb,GAC7C,GAAID,IAAgBrI,EAAevO,OAAnC,CAIA,IAAM+O,EAAWR,EAAeqI,GAChC,QAAiBnK,IAAbsC,EAAJ,CACA,IAAMqD,EAAS,EAAK0E,WAAW/H,GAC/B,QAAetC,IAAX2F,EAAJ,CACA,IAAM2E,EAAa,SAACpN,GAAD,OAChB8E,EAAapO,SAASsJ,EAAQ0I,MAC3B2E,EAAW,SAACrN,GAAD,OACf6E,EAAWnO,SAASsJ,EAAQ0I,MACxB4E,EAAc,SAACtN,GAAD,MAClB,sBAAI6E,GAAJ,YAAmBqI,IAAMxO,MAAK,SAACgK,GAC7B,IAAM6E,EAAa,EAAKC,YAAY9E,GACpC,YAAmB5F,IAAfyK,GACGjP,EAAmBiP,EAAYvN,OAE1C,GAAIyI,EAAO/C,OAAQ,CAAC,IAAD,MAIX+H,GAAoB,UAAChF,EAAO9C,oBAAR,QAAwB,IAAI+D,KAAK2D,GACrDK,GAAgB,UAACjF,EAAO7C,gBAAR,QAAoB,IAAI8D,KAAK2D,GAC7CM,GAAiB,UAAClF,EAAO5C,iBAAR,QAAqB,IAAI6D,KAAK2D,GACrD,GAAKI,GAAqBC,GAAkBC,EAC1CX,EAAIC,EAAc,EAAGC,QAChB,GAAIO,EACTA,EAAkBrH,eAAe/M,OAAO+T,GAAYhM,SAAQ,SAACiF,GACvDiH,EAAYjH,IAChB2G,EAAIC,EAAc,EAAf,sBAAsBC,GAAtB,CAA4B7G,EAAIqC,eAEhC,GAAIgF,EACTA,EAAcnH,mBACXlN,OAAO+T,GACPhM,SAAQ,SAAC+E,GACJmH,EAAYnH,IAChB6G,EAAIC,EAAc,EAAf,sBAAsBC,GAAtB,CAA4B/G,EAAQuC,cAEtC,CAAC,IAAD,KACL,UAACD,EAAO9C,oBAAR,QAAwB,IAAItM,OAAO+T,GAAYhM,SAAQ,SAAC+E,GAClDmH,EAAYnH,IAChBA,EAAQC,eAAe/M,OAAO+T,GAAYhM,SAAQ,SAACiF,GAC7CiH,EAAYjH,IAChB2G,EAAIC,EAAc,EAAf,sBAAsBC,GAAtB,CAA4B/G,EAAQuC,IAAKrC,EAAIqC,cAGpD,UAACD,EAAO5C,iBAAR,QAAqB,IAAIxM,OAAO+T,GAAYhM,SAAQ,SAACpB,GAC/CsN,EAAYtN,IAChBgN,EAAIC,EAAc,EAAf,sBAAsBC,GAAtB,CAA4BlN,EAAQ0I,gBAGtC,GAAID,EAAOjD,SAAS9G,KAAK2O,GAC9BL,EAAIC,EAAc,EAAGC,OAChB,CAAC,IAAD,EAIL/W,OAAO0W,OAAP,UAAcpE,EAAO3C,qBAArB,QAAsC,IAAI1E,SAAQ,SAAC0F,GACjD,GAAoB,MAAhBA,EAAJ,CACA,IAAM9G,EAAU8G,EAAatB,SAASkE,KAAK0D,GACtCpN,IAAWsN,EAAYtN,IAC5BgN,EAAIC,EAAc,EAAf,sBAAsBC,GAAtB,CAA4BlN,EAAQ0I,mBA7DzCqE,EAAS/Q,KAAKkR,GAiElBF,GACOD,EAAS7I,KAAI,SAACgJ,GACnB,IAAMV,EAAmC,GACnCC,EAAiC,GAQvC,OAPA,EAAKmB,kBAAL,sBAA2B/I,GAA3B,YAA0CqI,KAAO,SAACrO,EAAKf,GACrD,QAAegF,IAAXhF,EAAJ,CACA,IAAMtC,EAAMiR,EAAO5N,GACbtD,EAAQiR,EAAS3N,IACV,MAATtD,GAAiBA,EAAQuC,EAAOvC,SAAOiR,EAAS3N,GAAOf,EAAOvC,QACvD,MAAPC,GAAeA,EAAMsC,EAAOtC,OAAKiR,EAAO5N,GAAOf,EAAOtC,SAErD,CACL0R,OACAV,WACAC,e,8BAKN,SACEoB,EACA7I,GAEA,IAAM8I,EAAgB/X,KAAKiW,eAAehH,GAC1C,QAAsBlC,IAAlBgL,EACF,MAAM,IAAI9Y,EAAgB,CACxBC,QAAQ,yCACRE,OAAQ,CACN6P,qBACA+I,2BAA4BhY,KAAKiW,eAAe3V,OAChD+J,KAAMrK,KAAKqK,QAKjB,OAAOyN,EACJ3J,KAAI,SAACqI,GAAD,mBAAC,eACDA,GADA,IAEHyB,OAAQF,EAAcvC,gBAAgBgB,QAEvC0B,MAAK,SAAC9L,EAAG+L,GAAJ,OAAU/L,EAAE6L,OAASE,EAAEF,Y,+BAGjC,SACEd,EACAiB,GACO,IAAD,OACNjB,EAAK9L,SAAQ,SAACsH,GACZ,IAAM1I,EAAU,EAAKwN,YAAY9E,QACjB5F,IAAZ9C,GACFA,EAAQvB,SAAS2C,SACf,SAACgN,GAAD,OACEA,EAAQtQ,QACRsQ,EAAQtP,KAAKsC,SAAQ,SAACvC,GACpBsP,EAAStP,EAAKuP,EAAQtQ,qB,KAYvBuQ,GAAc,IAAI3C,GAC7B,CACEG,QAAS,GACTI,OAAQ,CACNjC,QAAS,GACTG,WAAY,GACZd,cAAe,GACfC,SAAU,GACVC,WAAY,GACZI,WAAY,GACZM,UAAW,IAEb0B,UAAWpW,KAAKqD,MAAMrD,KAAKC,UAAU,IAAImD,OACzCiT,QAAS,GAEX,UCvTW0C,GAAeC,IAAMC,cAAiC,CACjE,QACA,SAACC,GACC,MAAM,IAAIzZ,EAAgB,CACxBC,QAAS,+CACTE,OAAQ,CACNsZ,aAOKC,GAAeH,IAAMC,cAAiC,IAWtDG,GAAcJ,IAAMC,cAAgC,CAAC,aAE9DpO,KAAM,GACN+E,MAAOkJ,IACJ1J,IAEL,CACEiK,QAAS,SAACH,GACR,MAAM,IAAIzZ,EAAgB,CACxBC,QAAS,6CACTE,OAAQ,CACNsZ,WAINI,cAAe,SAACC,GACd,MAAM,IAAI9Z,EAAgB,CACxBC,QAAS,mDACTE,OAAQ,CACN2Z,eAQGC,GAAqBR,IAAMC,cAAuC,CAC7E,GACA,SAACC,GACC,MAAM,IAAIzZ,EAAgB,CACxBC,QAAS,2DACTE,OAAQ,CACNsZ,a,gBCrCD,SAASO,GAAgBlR,GAC9B,MAAO,CAACA,EAAOvC,MAAOuC,EAAOtC,KAAK7D,KAAK,KAG1B,SAASsX,GAAT,GAQiC,IAP9CjM,EAO6C,EAP7CA,UACA0F,EAM6C,EAN7CA,IAM6C,IAL7CwG,eAK6C,SAJ7CC,EAI6C,EAJ7CA,QACAC,EAG6C,EAH7CA,QACAC,EAE6C,EAF7CA,YACAC,EAC6C,EAD7CA,SAEA,EAA8BC,qBAAWZ,IAAzC,sBAASxJ,EAAT,EAASA,MAAOJ,EAAhB,EAAgBA,SAEV/E,EAAUmF,EAAMqI,YAAY9E,GAClC,GAAe,MAAX1I,EAAiB,OAAO,KAE5B,IAAM3B,EAAQ0G,EAAS/E,EAAQyI,OAAOnH,IAChCkO,EAAmBpR,EAAoBC,GAE7C,OACE,sBACE2E,UAAWjE,EACT,aACAqQ,GAAW,UACXF,GAAW,UACXlM,GALJ,UAQGhD,EAAQvB,SAASyF,KAAI,SAACkK,EAASnN,GAC9B,IAAQnD,EAAWsQ,EAAXtQ,OACR,GAAc,MAAVA,EAAJ,CAEA,IAAM2R,EAAcT,GAAgBlR,GACpC,OAAOsQ,EAAQtP,KAAKoF,KAAI,SAACrF,GACvB,IAAM6Q,EAAcJ,EAASzQ,GAC7B,GAAmB,MAAf6Q,EAAJ,CACA,IAAMC,EAAoBD,EAAYD,GACtC,GAAyB,MAArBE,EAEJ,OACE,qBACE3M,UAAWjE,EAAQ,UAAWyQ,EAAkB,UAAW3Q,GAE3D6F,MAAO,CACLkL,IAAI,GAAD,QAAO9R,EAAOvC,MAAQ/G,GAAhB,IAA0C,IAAhD,KACHqb,OAAO,GAAD,QACF/R,EAAOtC,IAAMsC,EAAOvC,OAArB,IAAgD,IAD7C,KAGNuU,MAAM,GAAD,OAAK,GAAKH,EAAkBI,QAA5B,KACLC,KAAK,GAAD,OACkB,GAApBvb,EAAK6C,QAAQuH,GACb8Q,EAAkBM,UAAY,GAAKN,EAAkBI,SAFnD,KAIJG,gBAAiB7R,GAEnB,cACA,WAAUqK,EAhBZ,UAkBIyG,GACA,sBAAKnM,UAAU,kBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BhD,EAAQyI,OAAOnH,KAC5C,uBAAM0B,UAAU,aAAhB,iBAAoChD,EAAQsB,SAE9C,sBAAM0B,UAAU,SAAhB,SAA0BnF,EAAeC,KACzC,sBAAMkF,UAAU,QAAhB,SAAyBoL,EAAQvE,QACjC,sBAAM7G,UAAU,cAAhB,SACGoL,EAAQpF,YAAYrR,KAAK,YAzB3B,CAACsJ,EAAGpC,GAAKlH,KAAK,eAkCzB0X,GACA,cAAC,KAAD,CACE/N,GAAIoH,EACJ1F,UAAU,UACVrM,KAAK,OACLwZ,MAAM,MACNC,OAAO,QALT,SAOE,gCACE,kCACE,+BACE,6BACE,8CAEF,6BAAKpQ,EAAQyI,OAAOlD,WAEtB,+BACE,6BACE,gDAEF,6BAAKvF,EAAQ8I,kBAEf,+BACE,6BACE,gDAEF,6BAAK9I,EAAQ0I,SAEf,+BACE,6BACE,+CAEF,6BAAK1I,EAAQ4I,uB,OCxHd,SAASyH,GAAT,GAMwB,IALrCrN,EAKoC,EALpCA,UACAsN,EAIoC,EAJpCA,YAIoC,IAHpCnB,eAGoC,aAFpCC,eAEoC,aADpCC,mBACoC,SACpC,EAAgCE,qBAAWZ,IAA3C,sBAAS9J,EAAT,EAASA,WAAYM,EAArB,EAAqBA,MAIfoL,EAGF,GAIEC,EAAuB,SAAvBA,EACJC,EACAC,EACAC,EACAC,EACAC,GAEIH,EAAKI,IAAIH,KAGbD,EAAKK,IAAIJ,GAETF,EACGpX,QACC,SAAC2X,GAAD,OACEA,EAAYlT,OAAOvC,MAAQqV,EAAUpV,KACrCwV,EAAYlT,OAAOtC,IAAMoV,EAAUrV,SAEtC6F,SAAQ,SAAC4P,GACRA,EAAYjB,QAAUc,EACtBL,EACEC,EACAC,EACAM,EAAYtI,IACZsI,EAAYlT,OACZ+S,QAKF3D,EAAOtN,MAAMC,KAAK,IAAIC,IAAJ,sBAAY+E,GAAZ,YAA4ByL,GAAe,OAC7DW,EAAgB,SAACvI,GACrB,IAAM1I,EAAUmF,EAAMqI,YAAY9E,GAClC,OAAe,MAAX1I,EAAwB,EACrB9B,KAAKgT,IAAL,MAAAhT,KAAI,YACN8B,EAAQvB,SAASuF,SAAQ,YAAiB,IAAdlG,EAAa,EAAbA,OAC7B,OAAc,MAAVA,EAAuB,GACpB,CAACA,EAAOtC,IAAMsC,EAAOvC,aA8DlC,OAzDA2R,EAAKe,MAAK,SAAC9L,EAAG+L,GAAJ,OAAU+C,EAAc9O,GAAK8O,EAAc/C,MAKrDhB,EAAK9L,SAAQ,SAACsH,GACZ,IAAM1I,EAAUmF,EAAMqI,YAAY9E,GACnB,MAAX1I,GAEJA,EAAQvB,SACLpF,QAAO,SAAC8X,GAAD,OAAOA,EAAErT,UAChBsD,SAAQ,SAACgN,GACR,IAAQtQ,EAAWsQ,EAAXtQ,OACM,MAAVA,GAEJsQ,EAAQtP,KAAKsC,SAAQ,SAACvC,GACpB,IAAMuS,EAAiBjb,OAAO0W,OAAO0D,GAClCvM,SAAuC,SAAClF,GAAD,aAC9B,MAARA,EAAe3I,OAAO0W,OAAP,UAAc/N,EAAKD,UAAnB,QAA2B,IAAM,MAEjDmF,SAA2B,SAAC1N,GAAD,OAAmB,MAARA,EAAe,GAAK,CAACA,MAExD+a,EAAaD,EAChB/X,QACC,SAAC2X,GAAD,OACEA,EAAYlT,OAAOvC,MAAQuC,EAAOtC,KAClCwV,EAAYlT,OAAOtC,IAAMsC,EAAOvC,SAEnC8O,QACC,SAACiH,EAAKN,GAAN,OAAsB9S,KAAKgT,IAAII,EAAKN,EAAYjB,QAAU,KAC1D,GAGJS,EACEY,EACA,IAAItR,IACJ4I,EACA5K,EACAuT,GAGF,IAAME,EAAiBhB,EAAY7H,IAAQ,GAC3C6H,EAAY7H,GAAO6I,EAEnB,IAAMC,EAAcD,EAAe1S,IAAQ,GAC3C0S,EAAe1S,GAAO2S,EAEtBA,EAAYxC,GAAgBlR,IAAW,CACrCA,SACA4K,MACAuH,SAAUoB,EAAa,EACvBtB,QAASsB,YAOjB,sBACErO,UAAWjE,EACT,WACAqQ,GAAW,UACXD,GAAW,UACXnM,GALJ,WAQImM,GACA,qBAAKnM,UAAU,QAAf,SACG,IAAIpD,MAAM,IAAqByL,KAAK,GAAGnH,KAAI,SAACzO,EAAGwL,GAC9C,IAAM3D,EAAO9I,EAAW,GAAJyM,EACpB,OACE,qBAAK+B,UAAU,OAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyBpF,EAAkBN,MADlBA,SAOjC6R,GACA,qBAAKnM,UAAU,OAAf,SACGvO,EAAKyP,KAAI,SAACrF,GAAD,OACR,qBAAKmE,UAAU,MAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyBnE,KADDA,QAMhC,sBAAKmE,UAAU,WAAf,UACG6B,EAAWX,KAAI,SAACwE,GAAD,aACd,cAACuG,GAAD,CAEEvG,IAAKA,EACLyG,QAASA,EACTC,QAASA,EACTC,YAAaA,EACbC,SAAQ,UAAEiB,EAAY7H,UAAd,QAAsB,IALzBA,MAQR4H,GACCA,EACGjX,QAAO,SAACqP,GAAD,OAAU7D,EAAWnO,SAASgS,MACrCxE,KAAI,SAACwE,GAAD,aACH,cAACuG,GAAD,CAEEvG,IAAKA,EACLwG,SAAUC,EACVA,QAASA,EACTC,QAASA,EACTC,aAAW,EACXC,SAAQ,UAAEiB,EAAY7H,UAAd,QAAsB,IANzBA,Y,4BC5KN,SAAS+I,KACtB,MAGIlC,qBAAWZ,IAHf,0BACIxJ,EADJ,EACIA,MAAOP,EADX,EACWA,eAAgBC,EAD3B,EAC2BA,WAAYC,EADvC,EACuCA,aAAcE,EADrD,EACqDA,mBACjD6J,EAFJ,KAEIA,cAEJ,EAA2BU,qBAAWR,IAA7B2C,EAAT,oBAEMC,EAAwBC,uBAAY,WACpCzS,OAAO0S,QAAQ,iDACjBhD,EAAc,CACZhK,WAAY,OAGf,CAACgK,IAEEhB,EAAeiE,mBACnB,kBAAM3M,EAAM4M,gBAAgBnN,EAAgBC,EAAYC,KACxD,CAACK,EAAOP,EAAgBC,EAAYC,IAEhCkN,EAAqBF,mBACzB,kBAAM3M,EAAM8M,iBAAiBpE,EAAc7I,KAC3C,CAACG,EAAO0I,EAAc7I,IAGxB,OACE,sBAAKhC,UAAU,uBAAf,UACE,cAACkP,GAAD,CACEC,SAAU,SAACC,GAAD,OACRvD,EAAc,CAAE7J,mBAAoBoN,KAEtCC,MAAOrN,EACP5C,QAAS+C,EAAM6G,eAAe9H,KAAI,SAAC4J,EAAe7M,GAAhB,MAAuB,CACvDoR,MAAOpR,EACP4C,MAAOiK,EAAcjK,YAGzB,cAACd,GAAD,CACEC,UAAU,QACVG,QAASwO,EACT1O,SAAgC,IAAtB4B,EAAWxO,OAHvB,4BAOA,qBAAK2M,UAAU,WAAf,SACE,cAAC,KAAD,UACG,gBAAG8M,EAAH,EAAGA,MAAOD,EAAV,EAAUA,OAAV,OACC,cAAC,KAAD,CACEC,MAAOA,EACPD,OAAQA,EACRnL,MAAO,CAAE4N,QAAS,QAClBC,SAAUP,EAAmB3b,OAC7Bmc,UAAW,IACXC,YAAa,YAAgD,IAA7CC,EAA4C,EAA5CA,MAAOhP,EAAqC,EAArCA,IAAKgB,EAAgC,EAAhCA,MAClBwI,EAAS8E,EAAmBU,GAA5BxF,KACR,OACE,qBAAKlK,UAAU,YAAY0B,MAAOA,EAAlC,SACE,sBACE1B,UAAU,cACVuB,aAAc,kBAAYmN,EAAexE,IACzC1I,aAAc,kBAAYkN,EAAe,KACzCvO,QAAS,kBACP0L,EAAc,CACZhK,WAAW,GAAD,mBAAMA,GAAN,YAAqBqI,OANrC,UAUE,qBAAKlK,UAAU,SAAf,SAAyB0P,EAAQ,IACjC,cAACrC,GAAD,CACErN,UAAU,mBACVsN,YAAapD,EACbmC,aAAW,EACXF,SAAO,QAhBiCzL,c,oBCvCjD,SAASwB,GAAT,GAI6B,IAH1ClC,EAGyC,EAHzCA,UACAoC,EAEyC,EAFzCA,SACAuN,EACyC,EADzCA,YAEA,EAAgCC,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAkB,GAAtD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,oBAAkB,GAA1D,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA4BN,mBAA2B,MAAvD,mBAAOpL,EAAP,KAAe2L,EAAf,KACMC,EAAcC,QAAQV,GAC5B,EAGIpD,qBAAWZ,IAHf,0BACIxJ,EADJ,EACIA,MAAO/E,EADX,EACWA,KAAMwE,EADjB,EACiBA,eAAgBC,EADjC,EACiCA,WAAYC,EAD7C,EAC6CA,aAAcC,EAD3D,EAC2DA,SACvD8J,EAFJ,KAEIA,cAGJyE,qBAAU,WACR,IAAKF,EAAa,CAChB,IAAM3K,EAAStD,EAAMgI,WAAW/H,GAChC,GAAc,MAAVqD,EAAgB,OACpBA,EACG8K,WACA5I,KAAKwI,GACL/H,OAAM,SAAC5J,GACNhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,4BACTC,OAAQsM,EACRrM,OAAQ,CACNiQ,WACAhF,KAAMqI,EAAOrI,eAMxB,CAACgT,EAAajO,EAAOC,IAExB,IAAMoO,EAAqB5B,uBACzB,SAACnJ,GACC,IAAMgL,EAAW,eAAQ1O,UAClB0O,EAAYhL,EAAOnH,IAE1BuN,EAAc,CACZjK,eAAgBA,EAAevL,QAAO,SAACiI,GAAD,OAAQA,IAAOmH,EAAOnH,MAC5DuD,WAAYA,EAAWxL,QACrB,SAACqP,GAAD,OAAUD,EAAOjD,SAAS9G,MAAK,SAACsB,GAAD,OAAaA,EAAQ0I,MAAQA,QAE9D5D,aAAcA,EAAazL,QACzB,SAACqP,GAAD,OAAUD,EAAOjD,SAAS9G,MAAK,SAACsB,GAAD,OAAaA,EAAQ0I,MAAQA,QAE9D3D,SAAU0O,MAGd,CAAC7O,EAAgBC,EAAYC,EAAcC,EAAU8J,IAGjD6E,EAAwB9B,uBAC5B,SAACpM,GACC,IAAM0H,EAAO1H,EAAStB,KAAI,SAAClE,GAAD,OAAaA,EAAQ0I,OAC/CmG,EAAc,CACZ/J,aAAcA,EAAazL,QAAO,SAACqP,GAAD,OAAUwE,EAAKxW,SAASgS,UAG9D,CAAC5D,EAAc+J,IAGXpG,EAAStD,EAAMgI,WAAW/H,GAChC,GAAc,MAAVqD,EAAgB,OAAO,KAE3B,IAKgB,EALVpK,EAAQ0G,EAAS0D,EAAOnH,IACxBkO,EAA4B,MAATnR,GAAiBD,EAAoBC,GAExDsV,EAAaxO,EAAMyG,QAAU,EAC/BnG,EAAuC,KACvCkO,IACFlO,EAAO,UAAGgD,EAAOhD,eAAV,QAAqB,IAG9B,IAAMmO,EAAuD,GAC7DnL,EAAOjD,SAASpE,SAAQ,SAACpB,GAAa,IAAD,EACnC,cAA6CA,EAAQgJ,YAArD,MAAO6K,OAAP,MAA2B,eAA3B,EAEMC,EAAkB,UAAGF,EAAcC,UAAjB,QAAuC,GAC/DC,EAAmB9X,KAAKgE,GACxB4T,EAAcC,GAAqBC,KAGrC,IAAM9K,EAAc7S,OAAOC,KAAKwd,GAC1BG,EAAsB/K,EAAY3P,QAAO,SAACgP,GAC9C,IAAM7C,EAAWoO,EAAcvL,GAC/B,OAAgB,MAAZ7C,GACGA,EAASwO,OAAM,SAAChU,GAAD,OAAa8E,EAAapO,SAASsJ,EAAQ0I,WAE7DuL,EAAsBjL,EAAY3P,QACtC,SAACgP,GAAD,OAAiB0L,EAAoBrd,SAAS2R,MAG1C6L,EAAgB,SACpBC,EACAC,GAEApB,EAAcmB,GACdrB,EAAYsB,IAERC,EAAe,CACnBlQ,KAAMmQ,KACNlQ,QAAS,CAAEmQ,UAAW,iBACtBpR,QAAS,WACP+Q,GAAc,GAAOnB,IAAqBF,KAIxC2B,EAAa,CACjBrQ,KAAMsQ,KACNvR,KACE,0FAC6B9C,EAD7B,4BAEGqI,EAAOxQ,QAFV,yBAEkCwQ,EAAOnD,SAGvCoP,GAAiBjM,EAAOjD,SAASnM,QAAO,SAAC2G,GAAD,OAC5C6E,EAAWnO,SAASsJ,EAAQ0I,QAExBiM,GAAeD,GAAerK,QAClC,SAACzB,EAAS5I,GAAV,OAAsB4I,EAAU5I,EAAQ4I,UACxC,GAGF,OACE,sBACE5F,UAAWjE,EAAQ,SAAUyQ,EAAkB,UAAWxM,GAC1D0B,MAAO,CAAEwL,gBAAiB7R,GAF5B,UAKE,eAACuF,GAAD,CACEC,MAAO,CACL4E,EAAOnH,GACPoT,GAAexQ,KAAI,SAAClE,GAAD,OAAaA,EAAQsB,MAAI3J,KAAK,OACjDA,KAAK,KACPmM,QACEsP,EACI,CACE,CAAEjP,KAAMyQ,KAAQzR,QAASwP,GACzBgB,EAAaU,EAAeG,GAE9B,CACE,CACErQ,KAAM0O,EAAWgC,KAAYC,KAC7B3R,QAAS,kBAAY+Q,GAAc,GAAQrB,KAE7Cc,EAAaU,EAAeG,EAC5B,CACErQ,KAAM4Q,KACN5R,QAAS,kBAAY+P,GAAiBD,KAExC,CACE9O,KAAM6Q,KACN7R,QAAS,kBAAYqQ,EAAmB/K,MAvBpD,UA4BE,sBAAKzF,UAAU,aAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgCyF,EAAOlD,QACvC,sBAAMvC,UAAU,eAAhB,SACG0R,GAAexQ,KAAI,SAAClE,GAAD,OAAaA,EAAQ0I,OAAK/Q,KAAK,YAGrDyb,GACA,sBAAKpQ,UAAU,aAAf,UACE,uBAAMA,UAAU,MAAhB,wBACc,IACA,OAAXwE,EACG,aACAA,EAAOK,WACPL,EAAOK,WAAWoN,QAAQ,GAC1B,SAELN,GAAe,GACd,uBAAM3R,UAAU,UAAhB,UAA2B2R,GAA3B,iBAIL1B,GACC,cAACiC,GAAD,CACElS,UAAU,UACVmS,cAAe,SAACC,GAAD,OACbvG,EAAc,CAAE9J,SAAS,2BAAMA,GAAP,mBAAkBK,EAAWgQ,OAEvD/W,MAAK,OAAEA,QAAF,IAAEA,IAAS,KAChBmG,aAAc,kBAAY0O,GAAgB,SAI/CL,IAAaE,GACZ,sBAAK/P,UAAWjE,EAAQ,kBAAmB,UAA3C,UACGkV,EAAoB/P,KAAI,SAACtO,GAAU,IAAD,EAC7BuS,EAAoC,EAIxC,OAHe,OAAXX,IACFW,EAAgBX,EAAO5R,IAGvB,cAACyf,GAAD,CAEEhX,MAAOA,EACPzI,KAAMA,EACN4P,SAAQ,UAAEoO,EAAche,UAAhB,QAAyB,GACjC0f,IACa,OAAX9N,EACI,aACAW,EACAA,EAAc8M,QAAQ,GACtB,OATDrf,MAcVme,EAAoB1d,OAAS,GAC5B,qBAAK2M,UAAU,gCAAf,SACG+Q,EAAoB7P,KAAI,SAACtO,GAAD,OACvB,sBACEoN,UAAU,sBAEVG,QAAS,WACP,IAAM2Q,EAAqBF,EAAche,GACf,MAAtBke,GACJJ,EAAsBI,IAN1B,SASGle,GAPIA,WAchBid,GAAYE,GAA0B,OAAZtN,GACzB,cAAC8P,GAAD,CAAc9M,OAAQA,EAAQhD,QAASA,MAzGpCgD,EAAOnH,I,OChIlB,SAASkU,GAAUC,GACjB,OAAQA,GACN,IAAK,eACL,IAAK,SACH,OAAO,EACT,QACE,OAAO,GAmCE,SAASC,GAAT,GAEyB,IADtC1S,EACqC,EADrCA,UAEA,EACEuM,qBAAWZ,IADb,0BAASxJ,EAAT,EAASA,MAAOP,EAAhB,EAAgBA,eAAgBE,EAAhC,EAAgCA,aAAcC,EAA9C,EAA8CA,SAAc8J,EAA5D,KAA4DA,cAE5D,EAA8B+D,mBAAS,IAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACA,EAA4BhD,mBAAqB,CAC/C9J,aAAc,GACdD,OAAQ,KAFV,mBAAOxP,EAAP,KAAewc,EAAf,KAIA,EAAsCjD,mBAAS,GAA/C,mBAAOkD,EAAP,KAAoBC,EAApB,KACMC,EAAWC,iBAAgC,MAE3CC,EAAsBtE,uBAC1B,SAACuE,GACC,IAAIC,EAAQD,EAAE7S,OAAO+O,MAAMzR,OACrByV,EAAU,oBAAoBnZ,KAAKkZ,GACzC,GAAe,MAAXC,EAAiB,CACnB,MAA4BA,EAA5B,mBAASpe,EAAT,KAAkBqN,EAAlB,KAKA8Q,EAAK,UAAMne,EAAN,YAAiBqN,GAExBsQ,EAAWQ,KAEb,IAGIvK,EAAUiG,mBAAQ,WACtB,IAAMuE,EAAU,yBAAyBnZ,KAAKyY,EAAQW,eACtD,IAAKD,EACH,MAAO,GAET,MAA4BA,EAA5B,mBAASpe,EAAT,KAAkBqN,EAAlB,KAIA,OAFAyQ,EAAe,GAER5Q,EAAM0G,QACVxS,QAAO,SAACoP,GACP,IAAM8N,EACJ9N,EAAOxQ,UAAYA,GAAWwQ,EAAOnD,OAAOgB,WAAWhB,GACnDkR,EA1Ed,SACE/N,EACApP,GAEA,OAAOlD,OAAO4P,QAAQ1M,GAAQ2a,OAAM,YAAkB,IAAD,mBAAftQ,EAAe,KAAV+S,EAAU,KACnD,OAAKjB,GAAU9R,IAGG,IAAhB+S,EAAKpgB,QACLoS,EAAOjD,SAAS9G,MAAK,SAACsB,GACpB,IAAM0W,EAAY1W,EAAQ0D,GAC1B,OAAiB,MAAbgT,GAEGD,EAAK/f,SAASggB,SA6DDC,CAAsBlO,EAAQpP,GAClD,OAAOkd,GAAgBC,KAExBnd,QAAO,SAACoP,GAAD,OAAa7D,EAAelO,SAAS+R,EAAOnH,SACrD,CAAC6D,EAAOwQ,EAAStc,EAAQuL,IAEtBgS,EAAkBhF,uBACtB,SAACnJ,GAAwB,IAAD,EACtB,IAAI7D,EAAelO,SAAS+R,EAAOnH,IAAnC,CACA,IAAMuV,EAAmBpO,EAAOjD,SAC7BnM,QAAO,SAAC2G,GACP,IAAM8W,EjB1EY,+BiB2EhB9W,EAAQ8I,cACP9I,EAAQvB,SAASpI,QAChB2J,EAAQvB,SAASuV,OACf,SAAC5F,GAAD,OAAaA,EAAQtP,KAAKzI,QAAU+X,EAAQtQ,UAE5C0Y,EAxEhB,SAAgCxW,EAAkB3G,GAChD,OAAOlD,OAAO4P,QAAQ1M,GAAQ2a,OAAM,YAAkB,IAAD,mBAAftQ,EAAe,KAAV+S,EAAU,KACnD,GAAoB,IAAhBA,EAAKpgB,OAAc,OAAO,EAC9B,IAAKmf,GAAU9R,GAAM,OAAO,EAE5B,IAAMgT,EAAY1W,EAAQ0D,GAC1B,OAAiB,MAAbgT,GAEGD,EAAK/f,SAASggB,MAgEKK,CAAuB/W,EAAS3G,GACpD,OAAQyd,IAAgBN,KAEzBtS,KAAI,SAAClE,GAAD,OAAaA,EAAQ0I,OAC5BmG,EAAc,CACZjK,eAAe,GAAD,mBAAMA,GAAN,CAAsB6D,EAAOnH,KAC3CwD,aAAa,GAAD,mBAAMA,GAAN,YAAuB+R,IACnC9R,SAAS,2BAAMA,GAAP,mBAAkB0D,EAAOnH,GAAKvD,QAExC6X,EAAW,IACX,UAAAI,EAASgB,eAAT,SAAkBC,WAEpB,CAAC5d,EAAQuL,EAAgBE,EAAcC,EAAUiR,EAAUnH,IAGvDqI,EAAgBtF,uBACpB,SAACuE,GACC,OAAQA,EAAEzS,KACR,IAAK,QACH,IAAM+E,EAASoD,EAAQiK,GACT,MAAVrN,GACFmO,EAAgBnO,GAElB,MAEF,IAAK,YACHsN,EAAe7X,KAAKyO,IAAImJ,EAAc,EAAGjK,EAAQxV,OAAS,IAC1D,MACF,IAAK,UACH0f,EAAe7X,KAAKgT,IAAI4E,EAAc,EAAG,IACzC,MACF,QACE,OAEJK,EAAEgB,mBAEJ,CAACtL,EAAS+K,EAAiBd,IAGvBsB,EAAqBxF,uBACzB,SAAClO,EAAc2T,GACb,IAAMZ,EAAOpd,EAAOqK,GACpBmS,EAAU,2BACLxc,GADI,mBAENqK,EAAM+S,EAAK/f,SAAS2gB,GACjBZ,EAAKpd,QAAO,SAACgT,GAAD,OAAOA,IAAMgL,KADtB,sBAECZ,GAFD,CAEOY,SAGlB,CAAChe,IAGGie,EAAoB1F,uBACxB,SAAClO,GACCmS,EAAU,2BACLxc,GADI,mBAENqK,EAAM,QAGX,CAACrK,IAGGke,EAAe1L,EAAQiK,GAE7B,OACE,sBAAK9S,UAAWjE,EAAQ,YAAaiE,GAArC,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,KAAD,CACEA,UAAWjE,EAAQ,OAAQ8M,EAAQxV,OAAS,GAAK,UACjDoO,YAAU,EACVN,KAAMyQ,OAER,sBAAK5R,UAAU,kBAAf,UACGuU,GACC,qBAAKvU,UAAWjE,EAAQ,UAAW,gBAAnC,SACGwY,EAAajW,KAGlB,uBACE3K,KAAK,OACL6gB,IAAKxB,EACL3D,MAAOsD,EACPxD,SAAU+D,EACVlT,UAAU,UACVyU,YAAY,UACZjU,UAAW0T,UAIhB,CACC,CAAC,gBAAiB,eAAgBviB,GAClC,CAAC,SAAU,SAAUC,IACrBsP,KAAI,mCAAEtO,EAAF,KAAQ8hB,EAAR,KAAkBC,EAAlB,YACJ,cAACC,GAAD,CAEEhiB,KAAMA,EACN+hB,OAAQA,EACRE,aAAcxe,EAAOqe,GACrBI,QAAS,kBAAYR,EAAkBI,IACvCK,SAAU,SAACV,GAAD,OAAeD,EAAmBM,EAAUL,KALjDK,SASV7L,EAAQxV,OAAS,EAChBwV,EAAQ3H,KAAI,SAACuE,GAAD,OACV,cAAC,GAAD,CAEEzF,UAAWjE,EAAQ0J,IAAW8O,GAAgB,UAC9CnS,SAAUqD,EAAOnH,GACjBqR,YAAa,kBAAYiE,EAAgBnO,KAHpCA,EAAOnH,OAOhB,qBAAK0B,UAAU,aAAf,sL,gCC5OO,SAASgV,KACtB,MAAoCzI,qBAAWZ,IAA/C,sBAASxJ,EAAT,EAASA,MAAOP,EAAhB,EAAgBA,eAEhB,OACE,sBAAK5B,UAAU,kBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,cAAf,SACG4B,EAAeV,KAAI,SAACkB,GACnB,OAAO,cAAC,GAAD,CAAQA,SAAUA,GAAeA,QAG5C,cAACsQ,GAAD,CAAW1S,UAAU,kBAEvB,eAACD,GAAD,CACEC,UAAU,aACVE,KAAK,0CAFP,iCAIuB+U,KAAI9S,EAAMwG,iB,OCVxB,SAASiM,GAAT,GAM4B,IALzChiB,EAKwC,EALxCA,KACA+hB,EAIwC,EAJxCA,OACAE,EAGwC,EAHxCA,aACAC,EAEwC,EAFxCA,QACAC,EACwC,EADxCA,SAEA,EAAgCnF,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAK9P,UAAU,eAAf,UACE,sBACEA,UAAWjE,EAAQ,SAAU8Y,EAAaxhB,OAAS,GAAK,UACxD8M,QAAS,kBAAY2P,GAAaD,IAFpC,WAIIA,GAAYgF,EAAaxhB,OAAS,EAClC,qBAAK2M,UAAU,OAAf,SACGzC,GACCsX,EAAa7T,SAAgB,SAACqT,GAC5B,IAAMa,EAAcP,EAAON,GAC3B,OAAsB,MAAfa,EAAsB,CAACA,GAAe,MAE/C,sBAAMlV,UAAU,KAAhB,mBAIJ,qBAAKA,UAAU,OAAf,SAAuBpN,IAEzB,cAAC,KAAD,CAAiB6O,YAAU,EAACN,KAAM0O,EAAWgC,KAAYC,UAE1DjC,GACC,sBAAK7P,UAAU,gBAAf,UACE,qBACEA,UAAWjE,EAAQ,MAA+B,IAAxB8Y,EAAaxhB,QAAgB,UACvD8M,QAAS2U,EAFX,iBAMC3hB,OAAOC,KAAKuhB,GAAQzT,KAAI,SAACmT,GAAD,OACvB,qBAEErU,UAAWjE,EAAQ,MAAO8Y,EAAanhB,SAAS2gB,IAAQ,UACxDK,SAAUL,EACVlU,QAAS,kBAAY4U,EAASV,IAJhC,SAMGM,EAAON,IALHA,Y,uDC9CJ,SAASc,GACtBzU,EACA0U,GAEA,MAA0BxF,oBAAiB,WACzC,IAAMyF,EAAMC,KAAQlR,IAAI1D,GACxB,YAAYZ,IAARuV,EAA0BA,GAG9BC,KAAQC,IAAI7U,EAAK0U,EAAc,CAAEI,QAAS,OACnCJ,MANT,mBAAO/F,EAAP,KAAcoG,EAAd,KAiBA,MAAO,CAACpG,EAReT,uBACrB,SAACyG,GACCI,EAASJ,GACTC,KAAQC,IAAI7U,EAAK2U,EAAK,CAAEG,QAAS,SAEnC,CAAC9U,EAAK+U,KCnBK,SAASC,KACtB,MAA4B9F,mBAAS1T,KAArC,mBAAOyZ,EAAP,KAAeC,EAAf,KAeA,OAdAtF,qBAAU,WACR,IAAMuF,EAAe,WACnB,IAAMC,EAAY5Z,IACdyZ,IAAWG,GACbF,EAAUE,IAKd,OADA3Z,OAAO4Z,iBAAiB,SAAUF,GAC3B,WACL1Z,OAAO6Z,oBAAoB,SAAUH,MAEtC,CAACF,IAEGA,E,OCTM,SAASM,GAAT,GAIuB,IAHpCvU,EAGmC,EAHnCA,MACA1B,EAEmC,EAFnCA,UAEmC,IADnCkW,YACmC,MAD5B,SAC4B,EAC7BC,EACY,kBAATD,EACHA,EACA,CACEE,MAAO,GACPC,OAAQ,IACRH,GACR,OACE,qBACElW,UAAWjE,EAAQ,UAAWiE,GAC9B0B,MAAK,2BAEEA,GAFF,IAGD,SAAS,GAAT,OAAayU,EAAb,QAGJG,QAAQ,YARV,SAUE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,S,OCjBjB,SAASvH,GAAT,GAKyB,IAJtClP,EAIqC,EAJrCA,UACAqP,EAGqC,EAHrCA,MACAF,EAEqC,EAFrCA,SACA/P,EACqC,EADrCA,QAEA,EAA4BwQ,oBAAS,GAArC,mBAAO8G,EAAP,KAAeC,EAAf,KAEMC,EAAiBxX,EAAQsH,MAAK,SAACmQ,GAAD,OAAYA,EAAOxH,QAAUA,KAC3DxO,EAAQ+V,EAAiBA,EAAe/V,MAAQ,IAEtD,OACE,sBACEb,UAAWjE,EAAQ,SAAU,SAAUiE,GACvCG,QAAS,kBAAYwW,GAAWD,IAFlC,UAIE,qBAAK1W,UAAU,OAAf,SAAuBa,IACvB,cAAC,KAAD,CAAiBY,YAAU,EAACN,KAAM2V,OACjCJ,GACC,qBAAK1W,UAAU,YAAYG,QAAS,kBAAYwW,GAAU,MAE3DD,GACC,qBAAK1W,UAAU,mBAAf,SACGZ,EAAQ8B,KAAI,gBAAU6V,EAAV,EAAG1H,MAA2B2H,EAA9B,EAAuBnW,MAAvB,OACX,cAACd,GAAD,CACEC,UAAU,SAEVG,QAAS,kBAAYgP,EAAS4H,IAHhC,SAKGC,GAHID,WAiBZ,SAASE,GAAT,GAGqC,IAF1CjX,EAEyC,EAFzCA,UAEyC,IADzCa,aACyC,MADjC,UACiC,EACzC,OACE,sBAAKb,UAAWjE,EAAQ,SAAU,SAAUiE,EAAW,YAAvD,UACE,cAACiW,GAAD,CAASC,KAAK,QAAQxU,MAAO,CAAEwV,YAAa,MAC5C,qBAAKlX,UAAU,OAAf,SAAuBa,IACvB,cAAC,KAAD,CAAiBY,YAAU,EAACN,KAAM2V,U,OCvBzB,SAASK,GAAT,GAa6B,IAAD,IAZzCxF,oBAYyC,MAZ1B,KAY0B,EAXzCyF,EAWyC,EAXzCA,WACAC,EAUyC,EAVzCA,YACAC,EASyC,EATzCA,aACAC,EAQyC,EARzCA,KAQyC,IAPzCC,kBAOyC,MAP5B,aAO4B,MANzCC,sBAMyC,aALzCC,wBAKyC,MALtB,aAKsB,MAJzCC,4BAIyC,aAHzCC,0BAGyC,MAHpB,aAGoB,MAFzCC,8BAEyC,SADzCC,EACyC,EADzCA,WAEA,EAA0BvL,qBAAWjB,IAArC,mBAAOyM,EAAP,KAAcC,EAAd,KAEMC,EAAoBrJ,uBAAY,WACpC,IAAMsJ,EAAqB,UAAVH,EAAoB,OAAS,QAC9CzC,KAAQC,IAAI,QAAS2C,EAAU,CAAE1C,QAAS,OAC1CwC,EAASE,KACR,CAACH,EAAOC,IAGLG,EAAYlF,iBAAuB,MAInC0C,EAASD,KACf,OACE,sBAAK1V,UAAU,SAAf,UAEG2V,GACC,cAAC5V,GAAD,CAAQC,UAAU,kBAAkBG,QAASmX,EAA7C,SACE,cAAC,KAAD,CAAiBtX,UAAU,OAAOyB,YAAU,EAACN,KAAMiX,SAKvD,eAACrY,GAAD,CAAQC,UAAU,OAAlB,UACE,sBAAMA,UAAU,KAAhB,iBACA,sBAAMA,UAAU,YAAhB,0BAImB,WAApB8X,EAAWnkB,KACV,cAACub,GAAD,CACEC,SAAU2I,EAAWO,aACrBhJ,MAAOyI,EAAWQ,YAClBlZ,QAAS0Y,EAAWS,MAAMrX,KAAI,SAACoX,GAAD,MAAkB,CAC9CjJ,MAAOiJ,EACPzX,MAAO1D,EAAgBmb,OAEzBtY,UAAU,aAGZ,cAACiX,GAAD,IAGF,uBAAMjX,UAAU,UAAhB,UACoB,OAAjB2R,EACC,cAACsE,GAAD,CAASC,KAAK,QAAQxU,MAAO,CAAEwV,YAAa,KAE5CvF,EACC,IALL,cAUEgE,GACA,qBAAK3V,UAAU,OAAf,SACGuX,EAAKrW,KAAI,SAACsX,EAAUC,GAAX,OACR,cAACC,GAAD,CAEEC,OAAQF,IAAWrB,EACnBjX,QAAS,kBAAYkX,EAAYoB,IACjC5X,MAAO2X,GAHFC,QAUb,sBAAKzY,UAAU,OAAf,UACE,eAACD,GAAD,CAAQI,QAASyX,EAAoB3X,UAAW4X,EAAhD,UACE,cAAC,KAAD,CAAiB7X,UAAU,OAAOyB,YAAU,EAACN,KAAMyX,OACnD,qBAAK5Y,UAAU,OAAf,yBAEF,eAACD,GAAD,CAAQI,QAASuX,EAAkBzX,UAAW0X,EAA9C,UACE,cAAC,KAAD,CAAiB3X,UAAU,OAAOyB,YAAU,EAACN,KAAM0X,OACnD,qBAAK7Y,UAAU,OAAf,uBAKF,qBACEA,UAAU,OACV,cACA,WAAS,WACT,aAAW,OACXwU,IAAK2D,EALP,SAOE,eAACpY,GAAD,CAAQE,UAAWwX,EAAnB,UACE,cAAC,KAAD,CAAiBzX,UAAU,OAAOyB,YAAU,EAACN,KAAM2X,OACnD,qBAAK9Y,UAAU,OAAf,uBAGHyX,GACC,cAAC,KAAD,CACEnZ,GAAG,WACH3K,KAAK,OACLwZ,MAAM,SACNC,OAAO,QACP3M,MAAM,QACNsY,UAAW,IACXC,UAAW,WACTxB,IACA3X,YACE,wBAAMoZ,KAAaC,KAAb,UAAkBf,EAAUnE,eAA5B,aAAuClU,KAC7C,MAXN,kCAmBF,eAACC,GAAD,CAAQI,QAAS8X,EAAjB,UACE,cAAC,KAAD,CAAiBjY,UAAU,OAAOyB,YAAU,EAACN,KAAMgY,OACnD,qBAAKnZ,UAAU,OAAf,sBAEF,eAACD,GAAD,CAAQG,KAAK,0CAAb,UACE,cAAC,KAAD,CAAiBF,UAAU,OAAOyB,YAAU,EAACN,KAAMiY,OACnD,qBAAKpZ,UAAU,OAAf,6B,OC/JK,SAASqZ,GAAT,GAKsB,IAJnCjC,EAIkC,EAJlCA,WACAC,EAGkC,EAHlCA,YACAC,EAEkC,EAFlCA,aACAC,EACkC,EADlCA,KAEA,EAAmDhL,qBAAWZ,IAA9D,0BAASvO,EAAT,EAASA,KAAM+E,EAAf,EAAeA,MAAON,EAAtB,EAAsBA,WAAgB+J,EAAtC,KAAsCA,QAChC2M,EAAQhM,qBAAWb,IACzB,EAAgBa,qBAAWjB,IAApByM,EAAP,oBACMuB,EAAarG,iBAAuB,MAEpCtB,EAAe7C,mBAAQ,WAC3B,OAAOjN,EAAWwF,QAAO,SAACzB,EAASF,GACjC,IAAM6E,EAAapI,EAAMqI,YAAY9E,GACrC,OAAOE,GAAyB,MAAd2E,EAAqBA,EAAW3E,QAAU,KAC3D,KACF,CAAC/D,EAAYM,IAEVoX,EAAe3K,uBAAY,WAC/B,KtB+NG,SACLzM,EACAN,GAEA,IAAM2X,EAAMvlB,IACZ,GAAW,MAAPulB,EAQF,OAPArd,OAAOsd,MAAM,sDACbjmB,EACE,IAAIxB,EAAgB,CAClBC,QAAS,sCAOf4P,EAAWzD,SAAQ,SAACsH,GAClB,IAAM1I,EAAUmF,EAAMqI,YAAY9E,GACnB,MAAX1I,GAEJA,EAAQvB,SAAS2C,SAAQ,SAACgN,GACxB,GAAKA,EAAQtQ,QAAWsQ,EAAQtP,KAAKzI,OAArC,CAMA,IALA,MAAqB+X,EAAQlE,UAArBrK,EAAR,EAAQA,KAAMuK,EAAd,EAAcA,GACRnS,EAAU+H,EAAQyI,OAAOnH,GACzBpJ,EAAc8H,EAAQyI,OAAOlD,MAC7BpN,EAAWiW,EAAQvE,MACnBzR,EAAQ,IAAIO,KAAKkH,EAAK6c,YAEzBtO,EAAQtP,KAAKpI,SAAb,UACC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK0B,EAAMukB,iBAD3C,QACwD,MAEzD,CAAC,IAAD,EACAvkB,EAAMwkB,QAAQxkB,EAAM6B,UAAY,GAElC7B,EAAMkU,SAAS8B,EAAQtQ,OAAOvC,MAAQ,GAAI6S,EAAQtQ,OAAOvC,MAAQ,IACjE,IAAMC,EAAM,IAAI7C,KAAKP,EAAMskB,WAC3BlhB,EAAI8Q,SAAS8B,EAAQtQ,OAAOtC,IAAM,GAAI4S,EAAQtQ,OAAOtC,IAAM,IAC3D,IAAMlD,EAAQ,CACZC,KAAM,SACNC,MAAO4R,EACPpR,MAAOoV,EAAQtP,KACZoF,KACC,SAACrF,GAAD,uBACG,CAAEge,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,KAAMC,EAAG,MAAOpe,UADnD,QAC2D,QAE5DxF,QAAO,SAACwF,GAAD,QAAWA,MAEvB2d,EAAIxkB,SAASC,EAASC,EAAaC,EAAUC,EAAOoD,EAAKlD,UAG7DkkB,EAAIvgB,SAAS,gBsBhRTihB,CAAwB/X,EAAON,GAC/B,MAAOrD,GACPhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,uCACTE,OAAQ,CACN0P,aACAzE,KAAM+E,EAAM/E,YAKnB,CAAC+E,EAAON,IAELsY,EAAiBvL,uBAAY,WACjC,IAAMwL,EAAiBd,EAAWtF,QAClC,GAAsB,MAAlBoG,EACJ,KtB0QG,SACLA,EACArC,GAEA,IAAMsC,EAAWle,OACdme,iBAAiBF,GACjBG,iBAAiB,QAEpBC,IACGC,OAAOL,EAAgB,CACtBtN,MH5UmB,EG4UZsN,EAAeM,YACtB7N,OH7UmB,EG6UXuN,EAAeO,aACvBjZ,MAAO,CACL6P,UAAU,SAAD,OH/UQ,EG+UR,KACT,mBAAmB,GAAnB,OAAuB8I,EAAvB,QACA,mBAA8B,UAAVtC,EAAoB,UAAY,aAGvDpQ,MAAK,SAACvO,GAAD,OAAUQ,iBAAOR,EAAM,mBAC5BgP,OAAM,SAAC5J,GAAD,OACLhL,EACE,IAAIxB,EAAgB,CAClBC,QACE,mEACFC,OAAQsM,QsBjSZoc,CAAuBR,EAAgBrC,GACvC,MAAOvZ,GACPhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,4CACTE,OAAQ,CACN0P,aACAkW,QACA3a,KAAM+E,EAAM/E,YAKnB,CAACkc,EAAYvB,EAAOlW,EAAYM,EAAM/E,OAEnCyd,EAAiBjM,uBAAY,WACjC,IACEkM,KAAKjZ,EAAWlN,KAAK,OACrB,MAAO6J,GACPhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,mCACTE,OAAQ,CACN0P,aACAzE,KAAM+E,EAAM/E,YAKnB,CAACyE,EAAYM,EAAM/E,OAEtB,OACE,qCACE,cAAC+Z,GAAD,CACExF,aAAcA,EACdyF,WAAYA,EACZC,YAAaA,EACbC,aAAcA,EACdC,KAAMA,EACNC,WAAYqD,EACZpD,eAAgB5V,EAAWxO,OAAS,EACpCqkB,iBAAkB6B,EAClB5B,qBAAsB9V,EAAWxO,OAAS,EAC1CukB,mBAAoBuC,EACpBtC,uBAAwBhW,EAAWxO,OAAS,EAC5CykB,WAAY,CACVnkB,KAAM,SACN4kB,QACAD,YAAalb,EACbib,aAAczM,KAKlB,qBAAK5L,UAAU,oBAAoBwU,IAAK8E,EAAxC,SACE,cAACjM,GAAD,CAAUrN,UAAU,gBAAgBoM,SAAO,EAACkB,YAAa,U,OC5FlD,SAAS+E,GAAT,GAM0B,IALvCrS,EAKsC,EALtCA,UACA3E,EAIsC,EAJtCA,MACAzI,EAGsC,EAHtCA,KACA4P,EAEsC,EAFtCA,SACA8P,EACsC,EADtCA,IAEA,EACE/F,qBAAWZ,IADb,0BAAS9J,EAAT,EAASA,WAAYC,EAArB,EAAqBA,aAAkB+J,EAAvC,KAAuCA,cAEvC,EAAgC+D,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMiL,EAAiBnM,uBACrB,SAAC5R,GACC6O,EAAc,CACZ/J,aAAcA,EAAazL,QAAO,SAACqP,GAAD,OAASA,IAAQ1I,EAAQ0I,WAG/D,CAAC5D,EAAc+J,IAGXmP,EAAkBpM,uBACtB,SAACqM,GACC,IAAM/Q,EAAO+Q,EAAY/Z,KAAI,SAAClE,GAAD,OAAaA,EAAQ0I,OAClDmG,EAAc,CACZ/J,aAAcpF,EAAO,GAAD,mBAAKoF,GAAL,YAAsBoI,KAC1CrI,WAAYA,EAAWxL,QAAO,SAACqP,GAAD,OAAUwE,EAAKxW,SAASgS,UAG1D,CAAC5D,EAAcD,EAAYgK,IAGvBqP,EAAmB1Y,EAAS9G,MAAK,SAACsB,GAAD,OACrC6E,EAAWnO,SAASsJ,EAAQ0I,QAGxByV,EAAmB3Y,EAASnM,QAChC,SAAC2G,GAAD,OAAc8E,EAAapO,SAASsJ,EAAQ0I,QAExC0V,EAAmB5Y,EAASnM,QAAO,SAAC2G,GAAD,OACvC8E,EAAapO,SAASsJ,EAAQ0I,QAG1B2V,EAAgB,6BAAyBzoB,EAAKiG,QAAQ,IAAK,MACjE,OACE,sBACEmH,UAAWjE,EACT,cACC8T,GAAY,iBACb7P,GAJJ,UAOE,cAACY,GAAD,CACEC,MAAOjO,GAAQ,eACfkO,QAAS,CACP,CACEK,KAAM0O,EAAWgC,KAAYC,KAC7B3R,QAAS,kBAAY2P,GAAaD,KAEnC,CAAC,MAAO,gBAAgBnc,SAASd,GAO9B,KANA,CACEuO,KAAMma,KACNpb,KAAK,mHAAD,OAAqH+D,mBACvH5H,EAAazJ,MAIrB,CACEuO,KAAMoa,KACNla,SAAS,EACTC,QAAS+Z,EACTlb,QAAS,kBAAY6a,EAAgBxY,MAGzCd,MAAOwZ,EAAmB,CAAEhO,gBAAiB7R,QAAUyE,EAtBzD,SAwBE,qBAAKE,UAAU,iBAAf,SACE,uBAAMA,UAAU,MAAhB,6BAAuCsS,GAAO,aAGlD,cAAC,KAAD,CACEhU,GAAI+c,EACJ1nB,KAAK,OACLwZ,MAAM,SACNC,OAAO,QAJT,uCAQCyC,GACC,sBAAK7P,UAAWjE,EAAQ,oBAAqB,UAA7C,UACGof,EAAiBja,KAAI,SAAClE,GACrB,IAAMwe,EAAS3Z,EAAWnO,SAASsJ,EAAQ0I,KAC3C,OACE,cAAC,GAAD,CAEE1F,UAAU,iBACVhD,QAASA,EACT3B,MAAOA,EACPmgB,OAAQA,GAJHxe,EAAQsB,OAQlB8c,EAAiB/nB,OAAS,GACzB,qBAAK2M,UAAU,6BAAf,SACGob,EAAiBla,KAAI,SAAClE,GAAD,OACpB,sBACEgD,UAAU,mBAEVG,QAAS,kBAAY4a,EAAe/d,IAHtC,SAKGA,EAAQsB,IAHJtB,EAAQsB,e,2BC7GhB,SAASmd,GAAT,GAEuB,IAAD,EADnCxU,EACmC,EADnCA,UAGA,EAAkC2I,mBAAoB,CACpD8L,SAAU,QACVC,WAAY,QACZC,KAAM,KAHR,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAyB,GACzBC,EAAuB,IAAIC,IAWjC,OAVAhV,EAAU7I,SAAQ,SAACjJ,GACjB,GAAwB,OAApBA,EAAS+mB,OACXH,EAAQ/iB,KAAK7D,QACR,GAAI6mB,EAAqBlO,IAAI3Y,EAAS+mB,QAAS,CAAC,IAAD,EACpD,UAAAF,EAAqB5X,IAAIjP,EAAS+mB,eAAlC,SAA2CljB,KAAK7D,QAEhD6mB,EAAqBzG,IAAIpgB,EAAS+mB,OAAQ,CAAC/mB,OAK7C,qBAAK6K,UAAU,SAAf,SACE,eAAC,KAAD,CACE6M,OAAO,OACPC,MAAM,OACN+O,UAAWA,EACXM,SAAS,qCACTC,qBAAoB,UAAEC,sGAAF,EAA2C,GAC/DC,kBAAmB,gBACNC,EADM,EACjBV,UADiB,OAIPC,EAAaS,IAV3B,UAYG3f,MAAMC,KAAKmf,EAAqBjZ,WAAW7B,KAC1C,WAA2BjD,GAA3B,uBAAEie,EAAF,KAAUM,EAAV,YACE,eAAC,KAAD,CAAgBd,SAAUQ,EAAOO,IAAKd,UAAWO,EAAOQ,KAAxD,UACE,cAAC,KAAD,CAAiBvb,KAAMwb,KAAU3c,UAAU,aAC3C,qBAAKA,UAAU,WAAf,SACGwc,EAAetb,KAAI,SAAC0b,GAAD,OAClB,gCACGA,EAActe,GADjB,IACsBse,EAAc5f,UAD1B4f,EAActe,GAAKse,EAAc5f,gBAJpCiB,MAYhB8d,EAAQ1oB,OAAS,GAChB,sBAAK2M,UAAU,oBAAf,UACE,6CACC+b,EAAQ7a,KAAI,SAAC/L,EAAU8I,GAAX,OACX,sBAAK+B,UAAU,QAAf,UACG7K,EAASmJ,GADZ,IACiBnJ,EAAS6H,UADEiB,SAMlC,qBAAK+B,UAAU,aAAf,SACE,cAAC,KAAD,CAAmB6c,UAAQ,EAACC,aAAW,W,OCvE1C,SAASC,GAAMC,GACpB,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAO,EACT,QACE,OAAO,GAiBE,SAASC,GAAT,GAI4B,IAHzCC,EAGwC,EAHxCA,cACAC,EAEwC,EAFxCA,UACAC,EACwC,EADxCA,aAEMC,EAAe,CAAC,UAAW,UAAW,UAAW,UAAW,WAC5DC,EAAgB,CACpB,SACA,UACA,YACA,WACA,UAGIC,EAAa,SAACjjB,GAClB,GAAIY,KAAKsiB,MAAMljB,EAAO,KAAO,GAAI,CAC/B,IAAMmjB,EAAeviB,KAAKsiB,MAAMljB,EAAO,IAAM,GACvCH,EAAwB,IAAjBsjB,EAAqB,KAAOA,EACnCrjB,EAASqD,OAAOnD,EAAO,IAAII,SAAS,EAAG,KAC7C,MAAM,GAAN,OAAUP,EAAV,YAAkBC,EAAlB,MAGF,IAAMD,EAAOe,KAAKsiB,MAAMljB,EAAO,IACzBF,EAASqD,OAAOnD,EAAO,IAAII,SAAS,EAAG,KAC7C,MAAM,GAAN,OAAUP,EAAV,YAAkBC,EAAlB,OAGF,OACE,qBAAK4F,UAAU,iBAAf,SACG7M,OAAOC,KAAK8pB,GAAehc,KAAI,SAACwc,EAAMzf,GAAO,IAAD,EAC3C,IAAK8e,GAAMW,GAAO,OAAO,KACzB,IAAM7U,EAAUqU,EAAcQ,GAC9B,OACE,sBAEE1d,UAAWjE,EACT,OACAX,EAAoBiiB,EAAapf,IACjC,WAEFyD,MAAO,CAAEwL,gBAAiBmQ,EAAapf,IAPzC,UASE,cAAC2C,GAAD,CACEC,MAAK,UAAEyc,EAAcrf,UAAhB,QAAsB,GAC3B+B,UAAU,aACVc,QAAS,CACP,CACEK,KAAMuc,IAASP,EAAYtL,KAAYC,KACvC3R,QAAS,kBACcid,EAArBM,IAASP,EAAyBO,EAAqB,SAI9DP,IAAcO,GACb,qBAAK1d,UAAU,mBAAf,SACc,MAAX6I,GAAsC,IAAnBA,EAAQxV,OAC1B,qBAAK2M,UAAU,iBAAiB0B,MAAO,CAAEic,QAAS,GAAlD,kCAIA9U,EAAQ3H,KAAI,SAACuE,GACX,IAAImY,EAAY,MACRC,EAAUpY,EAAVoY,MACR,GAAa,MAATA,EAAe,CACjB,IAAQtlB,EAAeslB,EAAftlB,MAAOC,EAAQqlB,EAARrlB,IACfolB,EAAS,UAAML,EAAWhlB,GAAjB,cAA6BglB,EAAW/kB,IAGnD,OACE,sBAAKwH,UAAU,iBAAf,UACE,qBAAKA,UAAU,YAAf,SAA4ByF,EAAOnH,KACnC,sBAAM0B,UAAU,aAAhB,SAA8ByF,EAAOlD,QACrC,uBAAMvC,UAAU,aAAhB,UACGyF,EAAOqY,WADV,IACuBF,OAJYnY,EAAOnH,WAnCjDof,Q,OC1DF,SAASzB,KACtB,MAAgC1P,qBAAWZ,IAA3C,sBAASxJ,EAAT,EAASA,MAAON,EAAhB,EAAgBA,WAChB,EAAkC+N,mBAAmB,KAArD,mBAAOuN,EAAP,KAAkBC,EAAlB,KACMF,EAAmD,CACvDrD,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAILpY,EAAWzD,SAAQ,SAACsH,GAClB,IAAM1I,EAAUmF,EAAMqI,YAAY9E,GAClC,GAAe,MAAX1I,EAAJ,CACA,IAAQvB,EAAauB,EAAbvB,SACR,GAAwB,IAApBA,EAASpI,OAAb,CACA,IAAM0qB,EAAetiB,EAAS,GAE9BsiB,EAAajiB,KAAKsC,SAAQ,SAACvC,GAAS,IAAD,EACjC,GAAKkhB,GAAMlhB,GAAX,CACA,IAAMgN,EAAO,UAAGqU,EAAcrhB,UAAjB,QAAyB,GACtCgN,EAAQ7P,KAAK,CACXsF,GAAItB,EAAQyI,OAAOnH,GACnBiE,MAAOvF,EAAQyI,OAAOlD,MACtBsb,MAAOE,EAAajjB,OACpBgjB,WAAYC,EAAajiB,KACzBkB,QAASA,EAAQsB,GACjB4d,OAAQ6B,EAAa5oB,WAEvB+nB,EAAcrhB,GAAOgN,WAKzB,IAAMmV,EAAyD,CAC7DnE,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL9mB,OAAO4P,QAAQma,GAAe9e,SAAQ,YAA4B,IAAD,mBAAzBvC,EAAyB,KAApBoiB,EAAoB,KAC1DlB,GAAMlhB,KACXmiB,EAAoBniB,GAAOoiB,EAAehT,MACxC,SAAC9L,EAAG+L,GAAJ,mBAAU,oBAAC/L,EAAE0e,aAAH,aAAC,EAAStlB,aAAV,QAAmB,IAAnB,oBAAyB2S,EAAE2S,aAA3B,aAAyB,EAAStlB,aAAlC,QAA2C,UAIzD,IAAI2lB,EAAiC,GAKrC,MAJkB,KAAdf,IACFe,EAAkBF,EAAoBb,IAItC,sBAAKnd,UAAU,cAAf,UACE,cAACid,GAAD,CACEC,cAAec,EACfb,UAAWA,EACXC,aAAcA,IAEhB,cAAC3B,GAAD,CAASxU,UAAWiX,O,OCxDX,SAASC,GAAT,GAIyB,IAHtCC,EAGqC,EAHrCA,KACAC,EAEqC,EAFrCA,QACAje,EACqC,EADrCA,SAEA,OACE,qCACE,qBACEJ,UAAWjE,EAAQ,iBAAkBqiB,GAAQ,QAC7C7d,UAAW,EACXJ,QAASke,EACT1d,KAAK,iBAEP,sBAAKX,UAAWjE,EAAQ,eAAgBqiB,GAAQ,QAAhD,UACE,qBAAKpe,UAAU,gBAAf,SACE,cAACD,GAAD,CAAQC,UAAU,eAAeG,QAASke,EAA1C,SACE,cAAC,KAAD,CAAiBre,UAAU,OAAOyB,YAAU,EAACN,KAAMmd,WAGtDle,Q,OCnBM,SAASme,GAAT,GAMuB,IALpCC,EAKmC,EALnCA,MACAC,EAImC,EAJnCA,YACAC,EAGmC,EAHnCA,aACA1e,EAEmC,EAFnCA,UACA0B,EACmC,EADnCA,MAEA,OACE,qBAAK1B,UAAWjE,EAAQ,WAAYiE,GAAY0B,MAAOA,EAAvD,SACG8c,EAAMtd,KAAI,SAACyd,EAAMzZ,GAAP,OACT,cAACnF,GAAD,CACEC,UAAWjE,EAAQ,aAAc0iB,IAAgBvZ,GAAO,UACxD/E,QAAS,kBAAYue,EAAaxZ,IAFpC,SAKGyZ,GAFIzZ,Q,OCjBA,SAASgN,GAAT,GAKuB,IAJpClS,EAImC,EAJnCA,UACA3E,EAGmC,EAHnCA,MACA8W,EAEmC,EAFnCA,cACA3Q,EACmC,EADnCA,aAEA,OACE,qBAAKxB,UAAWjE,EAAQ,UAAWiE,GAAYwB,aAAcA,EAA7D,SACG9P,EAAQwP,KAAI,SAAClG,EAAQiD,GAAT,OACX,qBAAK+B,UAAU,cAAf,SACGhF,EAAOkG,KAAI,SAAC0d,GAAD,OACV,qBACE5e,UAAWjE,EAAQ,QAAS6iB,IAAiBvjB,GAAS,SAEtDqG,MAAO,CAAEwL,gBAAiB0R,GAC1Bze,QAAS,kBAAYgS,EAAcyM,KAF9BA,OAJuB3gB,QCL1C,IAAM4gB,GAAkB,CAAEC,SAAU,QAASnB,QAAS,OAmBvC,SAASpL,GAAT,GAG4B,IACrCwM,EAHJtZ,EAEwC,EAFxCA,OACAhD,EACwC,EADxCA,QAGA,GAAuB,IAAnBA,EAAQpP,OACV0rB,EAAU,cAACC,GAAD,QACL,CAGL,MAA4Bvc,EAA5B,iBAAOwc,EAAP,KAAc9gB,EAAd,WAEA,OAAQ8gB,GACN,IAAK,MAGHF,EAAU,cAACG,GAAD,CAA2BC,OAAM,CAAG,OAAH,mBAAahhB,MACxD,MACF,IAAK,KAID4gB,EAHwB,IAAtB5gB,EAAW9K,OAIX,cAAC6rB,GAAD,CACEC,OAAQhhB,EAAW,KAMrB,mCACGA,EAAW+C,KAAI,SAACke,EAAWnhB,GAAZ,OACd,cAACohB,GAAD,CAA4BF,OAAQC,EAAW1P,MAAOzR,GAA7BA,QAKjC,MACF,QACEzK,EACE,IAAIxB,EAAgB,CAClBC,QAAS,8CACTE,OAAQ,CACNiQ,SAAUqD,EAAOnH,GACjBghB,SAAUL,EACV7hB,KAAMqI,EAAOrI,SAInB2hB,EAAU,MAIhB,OACE,sBAAK/e,UAAWjE,EAAQ,kBAAmB,UAA3C,UACE,cAACwjB,GAAD,CAAoB9Z,OAAQA,IAC5B,qBAAKzF,UAAWjE,EAAQ,UAAxB,SAAoCgjB,OAgB1C,SAASQ,GAAT,GAEiD,IAD/C9Z,EAC8C,EAD9CA,OAEA,EAAmB8G,qBAAWZ,IAArBvO,EAAT,oBAASA,KAET,OACE,cAACwD,GAAD,CACEZ,UAAWjE,EAAQ,mBACnB8E,MAAM,gBACNC,QAAS,CACP,CACEK,KAAMsQ,KACNvR,KACE,0FAC6B9C,EAD7B,4BAEGqI,EAAOxQ,QAFV,yBAEkCwQ,EAAOnD,YAkBrD,SAAS+c,GAAT,GAGiD,IAF/CF,EAE8C,EAF9CA,OACAzP,EAC8C,EAD9CA,MAEA,EAAgCE,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,qCACE,cAAClP,GAAD,CACEZ,UAAWjE,EAAQ,mBACnB8E,MAAK,iBAAY6O,EAAQ,GACzB5O,QAAS,CACP,CACEK,KAAM0O,EAAWgC,KAAYC,KAC7B3R,QAAS,kBAAY2P,GAAaD,QAIvCA,GACC,qBAAK7P,UAAWjE,EAAQ,UAAxB,SACE,cAACmjB,GAAD,CAA2BC,OAAQA,SAkB7C,SAASD,GAAT,GAEwD,IADtDC,EACqD,EADrDA,OAEA,IAAKviB,MAAMsB,QAAQihB,GAEjB,OAAO,cAACK,GAAD,CAAkBL,OAAQA,EAAQG,SAAS,MAAMG,QAAM,IAIhE,kBAAkCN,GAA3BG,EAAP,KAAoBnhB,EAApB,WACA,OACE,mCACGA,EAAW+C,KAAI,SAACke,EAAWnhB,GAAZ,OACd,cAACuhB,GAAD,CAEEL,OAAQC,EACRE,SAAUA,EACVG,OAAQxhB,IAAME,EAAW9K,OAAS,GAH7B4K,QAyBf,SAASuhB,GAAT,GAI+C,IAH7CL,EAG4C,EAH5CA,OACAG,EAE4C,EAF5CA,SACAG,EAC4C,EAD5CA,OAEA,OACE,sBAAKzf,UAAWjE,EAAQ,kBAAmB2F,MAAOmd,GAAlD,UACGhhB,GAAiBshB,GADpB,KAC+BM,GAAU,iCAASH,OAStD,SAASN,KACP,OACE,qBAAKtd,MAAOmd,GAAZ,kDCnOW,SAASa,KACtB,IAAM/J,EAASD,KAGf,EAAsC9F,mBAAmB,IAAzD,mBAAOtC,EAAP,KAAoBoB,EAApB,KAGA,EAAgCkB,mBAAiB,GAAjD,mBAAOrP,EAAP,KAAiBof,EAAjB,KAGMC,EAAsB9Q,mBAC1B,iBAAM,CAACxB,EAAaoB,KACpB,CAACpB,EAAaoB,IAGhB,OACE,qCACGiH,GACC,qBAAK3V,UAAU,gBAAf,SACG,CAAC,UAAW,eAAgB,YAAYkB,KAAI,SAAC2e,EAAU5hB,GAAX,OAC3C,cAAC8B,GAAD,CAEEC,UAAWjE,EAAQ,MAAOwE,IAAatC,GAAK,UAC5CkC,QAAS,kBAAYwf,EAAY1hB,IAHnC,SAKG4hB,GAJIA,QASb,cAAC9T,GAAmB+T,SAApB,CAA6BzQ,MAAOuQ,EAApC,SACE,sBAAK5f,UAAU,OAAf,YACK2V,GAAuB,IAAbpV,IAAmB,cAACyU,GAAD,MAC7BW,GAAuB,IAAbpV,IAAmB,cAACkO,GAAD,MAC7BkH,GAAuB,IAAbpV,IACX,qBAAKP,UAAU,qBAAf,SACE,cAACqN,GAAD,CAAUrN,UAAU,WAAWsN,YAAaA,c,OCpB3C,SAASpK,GAAT,GAKuB,IAAD,QAJnClD,EAImC,EAJnCA,UACAhD,EAGmC,EAHnCA,QACAwe,EAEmC,EAFnCA,OACAngB,EACmC,EADnCA,MAEA,EACEkR,qBAAWZ,IADb,0BAASvO,EAAT,EAASA,KAAMyE,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,aAAkB+J,EAA7C,KAA6CA,cAE7C,EAA2BU,qBAAWR,IAA7B2C,EAAT,oBACA,EAA8BkB,mBAAkB,CAAC,GAAI,IAArD,mBAAOjK,EAAP,KAAgBoa,EAAhB,KAEIC,GAAW,EAuBTC,EAAiBrR,uBACrB,SAACsR,GACCrU,EAAc,CACZ/J,aAAa,GAAD,mBAAMA,GAAN,CAAoBoe,EAAKxa,MACrC7D,WAAYA,EAAWxL,QAAO,SAACqP,GAAD,OAASA,IAAQwa,EAAKxa,WAGxD,CAAC7D,EAAYC,EAAc+J,IAGvBsU,EAAavR,uBACjB,SAACsR,GACKre,EAAWnO,SAASwsB,EAAKxa,KAC3BmG,EAAc,CACZhK,WAAYA,EAAWxL,QAAO,SAACqP,GAAD,OAASA,IAAQwa,EAAKxa,SAGtDmG,EAAc,CACZhK,WAAW,GAAD,mBAAMA,GAAN,CAAkBqe,EAAKxa,MACjC5D,aAAcA,EAAazL,QAAO,SAACqP,GAAD,OAASA,IAAQwa,EAAKxa,WAI9D,CAAC7D,EAAYC,EAAc+J,IAGvBwP,EAAgB,0BAAsBre,EAAQsB,IACpD,OACE,eAACsC,GAAD,CACEC,MAAO7D,EAAQsB,GACf0B,UAAWjE,EAAQ,UAAWiE,GAC9BuB,aAAc,kBAAYmN,EAAe,CAAC1R,EAAQ0I,OAClDlE,aAAc,kBAAYkN,EAAe,KACzC5N,QAAS,CACP,CACEK,KAAMqa,EAAS8C,KAAU8B,KACzBjgB,QAAS,kBAAYggB,EAAWnjB,KAElC,CACEmE,KAAMkf,KACNhf,SAAS,EACTC,QAAStE,EAAQsB,GACjB4B,KAAK,2EAAD,OAA6E9C,EAA7E,mBAA4FJ,EAAQ0I,MAE1G,CACEvE,KAAMoa,KACNla,SAAS,EACTC,QAAS+Z,EACTlb,QAAS,kBAAY8f,EAAejjB,MAGxC0E,MAAO8Z,EAAS,CAAEtO,gBAAiB7R,QAAUyE,EAvB/C,UAyBE,cAAC,KAAD,CACExB,GAAI+c,EACJrb,UAAU,UACVrM,KAAK,OACLwZ,MAAM,QACNC,OAAO,QALT,uCASA,sBAAKpN,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,SAC2B,MAAxBhD,EAAQ8I,aACLnU,EAAeqL,EAAQ8I,cACvB,KAEN,qBAAK9F,UAAU,oBAAf,SACGhD,EAAQvB,SAASyF,KAAI,SAACkK,EAASnN,GAC9B,OACE,sBAAK+B,UAAU,UAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBoL,EAAQtP,KAAKnH,KAAK,MAC1C,sBAAMqL,UAAU,SAAhB,SAA0BnF,EAAeuQ,EAAQtQ,YAFrBmD,QAQpC,cAAC,KAAD,CACEK,GAAItB,EAAQsB,GACZ0B,UAAU,UACVrM,KAAK,OACLwZ,MAAM,QACNC,OAAO,QACP4L,UAAW,kBA1GjBgH,GAAW,OACXngB,YAAW,WACLmgB,GACFhjB,EACGsjB,aAAaljB,GACbuK,MAAK,SAAC4Y,GACLR,EAAWQ,MAEZnY,OAAM,SAAC5J,GAAD,OACLhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,+BACTC,OAAQsM,EACRrM,OAAQ,CAAEuT,IAAK1I,EAAQ0I,IAAKtI,KAAMJ,EAAQI,cAKnD,MAyFGojB,UAAW,WACTR,GAAW,GARf,SAWE,gCACE,kCACE,+BACE,6BACE,+CAEF,6BACyB,IAAtBra,EAAQ,GAAGtS,OAAX,aAE4B,kBAAlBsS,EAAQ,GAAG,GAAlB,oBACGA,EAAQ,GAAG,UADd,QACoB,YADpB,yBAEEA,EAAQ,GAAG,UAFb,QAEmB,aAFnB,WAOR,+BACE,6BACE,kDAEF,6BACyB,IAAtBA,EAAQ,GAAGtS,OAAX,aAE4B,kBAAlBsS,EAAQ,GAAG,GAAlB,oBACGA,EAAQ,GAAG,UADd,QACoB,YADpB,yBAEEA,EAAQ,GAAG,UAFb,QAEmB,aAFnB,wB,OC5JP,SAAS+S,GAAT,GAMmB,IALhC7X,EAK+B,EAL/BA,MAK+B,IAJ/B8X,cAI+B,SAH/BxY,EAG+B,EAH/BA,QACAH,EAE+B,EAF/BA,UACA0B,EAC+B,EAD/BA,MAEA,OACE,wBACE1B,UAAWjE,EAAQ,MAAO4c,GAAU,SAAU3Y,GAC9C0B,MAAOA,EACPvB,QAASA,EACTxM,KAAK,SAJP,SAMGkN,I,OCxBQ,SAAS4f,KACtB,IAAM9K,EAASD,KACf,OACE,qBAAK1V,UAAWjE,EAAQ,eAAxB,SACE,wDAC0B,IACxB,sBAAM4E,KAAK,MAAM,aAAW,OAA5B,0BAEQ,IAJV,MAKK,mBAAGT,KAAK,uBAAR,yBALL,IAKqD,IACnD,mBAAGA,KAAK,yBAAR,0BANF,QAMyD,IACvD,mBAAGA,KAAK,8DAAR,SACGyV,EAAS,SAAW,kCARzB,S,OCDS,SAAS+K,KACtB,MAAgC9Q,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAkB,GAA9C,mBAAO+Q,EAAP,KAAeC,EAAf,KACA,EAA4BhR,mBAAwB,MAApD,mBAAOpH,EAAP,KAAeqY,EAAf,KACA,EAAgCjR,mBAAiB,IAAjD,mBAAOnH,EAAP,KAAiBqY,EAAjB,KACA,EAA8BlR,oBAAkB,GAAhD,mBAAOmR,EAAP,KAAgBC,EAAhB,KAgBA,OACE,sCACInR,GACA,qBAAK7P,UAAU,wBAAf,SACE,cAACD,GAAD,CACEC,UAAU,iBACVG,QAAS,kBAAY2P,GAAY,IAFnC,SAIE,cAAC,KAAD,CAAiB3O,KAAM8f,KAAc/K,KAAK,WAI/CrG,GACC,8BACE,sBAAM7P,UAAU,eAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,KAAD,CACEmB,KAAMmd,KACNte,UAAU,YACVG,QAAS,kBAAY2P,GAAY,MAEnC,oBAAI9P,UAAU,gBAAd,uBACE2gB,GACA,gCACE,mBAAG3gB,UAAU,OAAb,iDACA,qBAAKA,UAAU,cAAf,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGkB,KAAI,SAACjD,GAAD,OACnB,cAAC8B,GAAD,CAEEC,UAAWjE,EACT,aACAyM,IAAWvK,EAAI,GAAK,UAEtBkC,QAAS,kBAAY0gB,EAAU5iB,EAAI,IANrC,SAQGA,GAPIA,QAWX,sBAAK+B,UAAU,cAAf,UACE,sBAAMA,UAAU,QAAQ0B,MAAO,CAAEwf,WAAY,OAA7C,kBAGA,sBAAMlhB,UAAU,QAAQ0B,MAAO,CAAEwV,YAAa,OAA9C,sBAIF,0BACElX,UAAU,mBACVyU,YAAY,oDACZtF,SAAU,SAAC1O,GAAD,OAAiBqgB,EAAYrgB,EAAMH,OAAO+O,QACpDA,MAAO5G,IAET,cAAC1I,GAAD,CACEC,UAAU,eACVG,QArED,WACf6gB,GAAW,G5BdA,SAAf,mC4BgBIG,CAAW,CAAE3Y,QAAQ,OAACA,QAAD,IAACA,IAAU,GAAK,EAAGC,aACrCd,MAAK,WACJiZ,GAAU,GACVI,GAAW,MAEZ5Y,OAAM,WACLwY,GAAU,GACVI,GAAW,OA4DC/gB,SAAoB,MAAVuI,GAAkBuY,EAH9B,uBASHJ,GACC,sBAAK3gB,UAAU,YAAf,UACE,mBAAGA,UAAU,wBAAb,SACE,kEAEF,8BACE,cAACD,GAAD,CACEC,UAAU,eACVG,QAAS,kBAAY2P,GAAY,IAFnC,kC,yBCzFdsR,GAAmB,uBAQlB,SAASC,KACd,OACE,gCACE,qBACE3f,MAAO,CAAEoL,MAAO,QAASwU,OAAQ,SAAUC,QAAS,SACpDC,IAAI,oBACJC,IAAI,gBAEN,8CACA,2DAC6B,IAC3B,mBAAGvhB,KAAK,kCAAR,0BAFF,mCAGwB,mBAAGA,KAAK,0BAAR,0BAAmD,IAH3E,OAIM,mBAAGA,KAAK,wBAAR,iCAJN,kLASA,uGACyE,IACvE,mBAAGA,KAAK,gDAAR,iCAEK,IAJP,qD,ICjBewhB,G,kDAInB,WAAYC,GAA4B,IAAD,8BACrC,cAAMA,IACDC,MAAQ,CAAE5uB,MAAO,KAAMM,KAAM,MAFG,E,qDASvC,SAA2BN,EAAcM,GAEvCE,EACE,IAAIxB,EAAgB,CAClBC,QAAS,yDACTC,OAAQc,EACRb,OAAQ,CACN0vB,eAAgBvuB,MAKtBP,KAAK+uB,SAAS,CAAExuB,W,oBAGlB,WACE,MAA+BP,KAAK4uB,MAA5BvhB,EAAR,EAAQA,SAAU2hB,EAAlB,EAAkBA,SAClB,EAAwBhvB,KAAK6uB,MAArB5uB,EAAR,EAAQA,MAAOM,EAAf,EAAeA,KAEf,OAAc,OAAVN,EACc,MAAZ+uB,EACK,mCAAGA,EAAS/uB,EAAOM,KAGrB,KAGF,mCAAG8M,O,uCA/BZ,SAAgCpN,GAC9B,MAAO,CAAEA,QAAOM,KAAM,U,GAViBiY,IAAMyW,W,qBCH1C,SAASC,GAAT,GAKyC,IAJ9CrvB,EAI6C,EAJ7CA,KACAwN,EAG6C,EAH7CA,SACAsB,EAE6C,EAF7CA,MACA1B,EAC6C,EAD7CA,UAEA,OACE,sBAAKA,UAAWjE,EAAQiE,EAAW,uBAAwB0B,MAAOA,EAAlE,UACE,iCAAS9O,IADX,KAC4BwN,KAazB,SAAS8hB,GAAT,GAGyC,IAF9ClvB,EAE6C,EAF7CA,MACAmvB,EAC6C,EAD7CA,UAEA,OACE,qCACE,cAACC,GAAD,CAAkBpvB,MAAOA,IACV,OAAdmvB,GACC,cAACF,GAAD,CAAmBrvB,KAAK,uBAAxB,SACE,8BACE,+BAAOuvB,EAAUE,eAAexpB,QAAQ,WAAY,aAiBzD,SAASypB,GAAT,GAI2C,IAHhDtvB,EAG+C,EAH/CA,MACAuvB,EAE+C,EAF/CA,SACA3vB,EAC+C,EAD/CA,KAEA,OACE,qCACE,cAACwvB,GAAD,CAAkBpvB,MAAOA,IACzB,eAACivB,GAAD,CAAmBrvB,KAAK,iBAAxB,uBACaA,KAEb,cAACqvB,GAAD,CAAmBrvB,KAAK,WAAxB,SAAoC2vB,OAYnC,SAASH,GAAT,GAEwC,IAAD,EAD5CpvB,EAC4C,EAD5CA,MAEA,OACE,qCACE,cAACivB,GAAD,CAAmBrvB,KAAK,OAAxB,SAAgCI,EAAMJ,OACtC,cAACqvB,GAAD,CAAmBrvB,KAAK,UAAxB,SAAmCI,EAAMf,UACzC,cAACgwB,GAAD,CAAmBrvB,KAAK,UAAxB,SACGypB,6CAEFrpB,aAAiBhB,GAChB,cAACiwB,GAAD,CAAmBrvB,KAAK,SAAxB,SACE,8BACE,+BACGO,OAAO4P,QAAQ/P,EAAME,gBACnBgO,KAAI,mCAAER,EAAF,KAAO2O,EAAP,yBAAyB3O,EAAzB,aAAiC8hB,KAAcnT,OACnD1a,KAAK,YAKhB,cAACstB,GAAD,CAAmBrvB,KAAK,aAAxB,SACE,8BACE,yCAAOI,EAAMV,aAAb,QAAsB,a,OC3FjB,SAASmwB,GAAT,GAK8B,IAJ3CriB,EAI0C,EAJ1CA,SAI0C,IAH1CS,aAG0C,MAHlC,UAGkC,EAF1Cb,EAE0C,EAF1CA,UACA0B,EAC0C,EAD1CA,MAEA,EAAwCkO,oBAAS,GAAjD,mBAAO8S,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAK3iB,UAAWjE,EAAQ,kBAAmBiE,GAAY0B,MAAOA,EAA9D,UACE,yBACE1B,UAAU,yBACVG,QAAS,kBAAYwiB,GAAiBD,IACtC/uB,KAAK,SAHP,UAKE,cAAC,KAAD,CACE8N,YAAU,EACVN,KAAM2V,KACNpV,MAAO,CACL6P,UAAWmR,EAAe,iBAAmB,OAC7CxL,YAAa,KAGhBrW,KAEF6hB,GAAgBtiB,K,OCzBR,SAASwiB,GAAT,GAG4B,IAFzCC,EAEwC,EAFxCA,aACAziB,EACwC,EADxCA,SAEA,OACE,sBAAKJ,UAAU,sBAAf,UACGI,EACD,uFACuD,IACrD,mBAAGF,KArBT,6GAqBiCI,OAAO,SAASD,IAAI,sBAA/C,oDAFF,qIAQA,8MAKA,cAACoiB,GAAD,CAAgB5hB,MAAM,gBAAtB,SAAuCgiB,O,OC7B9B,SAASC,KACtB,OACE,sBAAK9iB,UAAU,eAAf,UACE,cAAC,KAAD,CAAiBmB,KAAM4hB,OACvB,yDCFC,IAAMC,GAAW,CAAC,YAAa,OAczBC,GACX1X,IAAMC,cAAyC,CAC7C0X,gBAAiB,EACjBvD,YAAa,WACX,MAAM,IAAI3tB,EAAgB,CACxBC,QAAS,6DAGbkxB,cAAc,EACdC,WAAY,WACV,MAAM,IAAIpxB,EAAgB,CACxBC,QAAS,4DAGboxB,YAAa,WACX,MAAM,IAAIrxB,EAAgB,CACxBC,QAAS,+DASV,SAASqxB,GAAT,GAEqC,IAD1CljB,EACyC,EADzCA,SAEMuV,EAASD,KAGf,EAAuC9F,mBAAS,GAAhD,mBAAOsT,EAAP,KAAwBvD,EAAxB,KAGA,EAAwC/P,oBAAS,GAAjD,mBAAOuT,EAAP,KAAqBI,EAArB,KACMH,EAAaxU,uBAAY,kBAAM2U,GAAgB,KAAO,IACtDF,EAAczU,uBAAY,kBAAM2U,GAAgB,KAAQ,IAC9DjT,qBAAU,WAEJ6S,IAAiBxN,GACnB4N,GAAgB,KAEjB,CAACJ,EAAcxN,IAGlB,IAAM6N,EAAe1U,mBACnB,iBAAO,CACLoU,kBACAvD,cACAwD,eACAC,aACAC,iBAEF,CAACH,EAAiBvD,EAAawD,EAAcC,EAAYC,IAG3D,OACE,cAACJ,GAAqBnD,SAAtB,CAA+BzQ,MAAOmU,EAAtC,SACGpjB,IASA,SAASqjB,KACd,IAAM9N,EAASD,KACf,EACEnJ,qBAAW0W,IADLC,EAAR,EAAQA,gBAAiBvD,EAAzB,EAAyBA,YAAawD,EAAtC,EAAsCA,aAAcE,EAApD,EAAoDA,YAGpD,OAAK1N,EAGH,cAACwI,GAAD,CAAWC,KAAM+E,EAAc9E,QAASgF,EAAxC,SACE,cAAC9E,GAAD,CACEC,MAAOwE,GACPvE,YAAayE,EACbxE,aAAciB,MAPA,KCvFtB,IAEM+D,GAAc,uCAFC,uBAED,yBADG,Y,OC0BhB,SAASC,GAAT,GAMoD,IALzDC,EAKwD,EALxDA,YACAC,EAIwD,EAJxDA,YACAC,EAGwD,EAHxDA,OACA1mB,EAEwD,EAFxDA,KACA2mB,EACwD,EADxDA,SAEMzmB,EAAWH,EAAgBC,GACjC,OACE,sBAAK4C,UAAU,kCAAf,UACE,cAAC8iB,GAAD,IACA,wDACyB,iCAASxlB,IADlC,0KAMA,8BACE,oHAGU,IAJZ,6DAKuE,IACpEA,EANH,+EASA,gIAE+B,IAC7B,mBAAG4C,KA3CT,gHA2CiCI,OAAO,SAASD,IAAI,sBAA/C,oDAHF,yKAUA,wBACEL,UAAU,yCACVG,QAAS4jB,EACTpwB,KAAK,SAHP,oBAOA,cAACsuB,GAAD,CAAmBrvB,KAAK,WAAxB,SACE,cAAC6vB,GAAD,CAAgB5hB,MAAM,SAASa,MAAO,CAAEsiB,UAAW,GAAnD,SACE,8BACE,+BAAOC,GAAmBL,WAIhC,cAAC3B,GAAD,CAAmBrvB,KAAK,oBAAoB8O,MAAO,CAAEsiB,UAAW,IAAhE,SACE,cAACvB,GAAD,CAAgB5hB,MAAM,SAASa,MAAO,CAAEsiB,UAAW,GAAnD,SACE,8BACE,+BAAOC,GAAmBJ,WAIhC,cAAC5B,GAAD,CAAmBrvB,KAAK,gBAAgB8O,MAAO,CAAEsiB,UAAW,IAA5D,SACE,cAACvB,GAAD,CAAgB5hB,MAAM,SAASa,MAAO,CAAEsiB,UAAW,GAAnD,SACGF,EAAOzwB,OAAS,EACfywB,EAAO5iB,KAAI,SAAC1C,EAAKP,GAAN,OACT,cAACwkB,GAAD,CAAwB5hB,MAAK,iBAAY5C,EAAI,EAAhB,YAA7B,SACE,cAACmkB,GAAD,CAAkBpvB,MAAOwL,KADNP,MAKvB,cAACmkB,GAAD,CAAkBpvB,MAAO8wB,EAAO,YAQ5C,SAASG,GAAmBC,GAC1B,IACE,OAAO3xB,KAAKC,UAAUD,KAAKqD,MAAMsuB,GAAU,KAAM,GACjD,MAAO1lB,GACP,OAAO0lB,GC5FI,SAASC,GACtB/mB,EACA+E,GAGA,MAAsCgT,GAAU/X,EAAM6E,IAAtD,mBAAOmiB,EAAP,KAAoBC,EAApB,KACA,EAAwDzU,mBAEtD,MAFF,mBAAO0U,EAAP,KAA6BC,EAA7B,KAKMC,EAAc1V,mBAAkC,WACpD,IAAM2V,EA2NV,SAAuBC,GACrB,GAAoB,KAAhBA,GAAsC,cAAhBA,EACxB,MAAO,CACL/wB,KAAM,QACNX,MAAO,IAAIhB,EAAgB,CACzBC,QAAS,yCACTE,OAAQ,CACNuyB,kBAMR,IACE,MAAO,CAAE/wB,KAAM,SAAU8wB,OAAQlyB,KAAKqD,MAAM8uB,IAC5C,MAAOlmB,GACP,MAAO,CACL7K,KAAM,QACNX,MAAO,IAAIhB,EAAgB,CACzBC,QAAS,wCACTC,OAAQsM,EACRrM,OAAQ,CACNuyB,mBAjPSC,CAAcP,GAC7B,MAAoB,UAAhBK,EAAO9wB,KACF,CACLA,KAAM,QACNmwB,OAAQ,CAACW,EAAOzxB,OAEhB+uB,SAAUpgB,IAIPijB,GAAiBH,EAAOA,OAAQL,KACtC,CAACA,IAIJ9T,qBAAU,WACR,GAAyB,UAArBkU,EAAY7wB,KAAkB,CAChC6wB,EAAYV,OAAO1lB,SAAQ,SAACI,GAC1BhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,8BACTC,OAAQsM,EACRrM,OAAQ,CACNiL,OACAgnB,cACArC,SAAUyC,EAAYzC,gBAS9B,IACE,IAAMrhB,EAAG,WAAM,IAAI/K,MAAOgD,cAAjB,sBACTwD,OAAO0oB,aAAaC,QAAQpkB,EAAK0jB,GACjCvxB,QAAQiH,IAAR,uDAA4D4G,EAA5D,MACA,MAAOlC,GACP3L,QAAQiH,IAAI,kDACZjH,QAAQG,MAAMwL,GACd3L,QAAQiH,IAAR,kBACAjH,QAAQiH,IAAIsqB,GAKd,IAAIW,EACJ,IACEA,EAAsBxyB,KAAKC,UAAUgyB,EAAYzC,UACjD,MAAO/uB,GACP,IAAMwL,EAAM,IAAIxM,EAAgB,CAC9BC,QAAS,+CACTC,OAAQc,EACRb,OAAQ,CACNiL,OACAgnB,cACArC,SAAUyC,EAAYzC,YAU1B,OAPAwC,EAAwB,CACtB5wB,KAAM,QACN4uB,SAAU,+CACVvvB,MAAOwL,EACPwmB,cAAc,SAEhBxxB,EAAUgL,GAKZ,GAAoB,KAAhB4lB,GAAsC,cAAhBA,EAExB,YADAC,EAAeU,GAKjBR,EAAwB,CACtB5wB,KAAM,SACNsxB,UDjGNtD,ECiGmD,CAC3CiC,YAAaQ,EACbP,YAAakB,EACbjB,OAAQU,EAAYV,OACpB1mB,OACA2mB,SAAU,WAERM,EAAeU,GACfR,EAAwB,QDvG3B,cAACZ,GAAD,eAAkChC,OAHpC,IACLA,IC8GG,CAACvkB,EAAM+E,EAAOqiB,EAAaH,EAAgBD,IAK9C,IAAMvY,EAAgB+C,uBACpB,SAAC9C,GACC,GAAyB,UAArB0Y,EAAY7wB,KAGd,MAAM,IAAI3B,EAAgB,CACxBC,QAAS,mDACTE,OAAQ,CACN2Z,QACA1O,OACAonB,cACAJ,iBAMN,IAAMc,EAAO,2BAAQV,EAAYW,UAAarZ,GACxCsZ,EAAmBR,GAAiBM,GAC1C,GAA8B,UAA1BE,EAAiBzxB,KAArB,CAmBA,IAAI0xB,EACJ,IACEA,EAAqB9yB,KAAKC,UAAU0yB,GACpC,MAAOlyB,GAaP,YAZAQ,EACE,IAAIxB,EAAgB,CAClBC,QAAS,8CACTC,OAAQc,EACRb,OAAQ,CACN2Z,QACA1O,OACAgnB,cACAe,SAAUX,EAAYW,aAO9Bd,EAAegB,QArCbD,EAAiBtB,OAAO1lB,SAAQ,SAACI,GAC/BhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,kDACTC,OAAQsM,EACRrM,OAAQ,CACN2Z,QACA1O,OACA+nB,SAAUX,EAAYW,SACtBD,mBA8BZ,CAACV,EAAapnB,EAAMinB,EAAgBD,IAQhCkB,EAAmBxW,mBAAkB,WACzC,GAAyB,UAArB0V,EAAY7wB,KACd,OAAOgO,GAET,IAAQwjB,EAAaX,EAAbW,SAIFI,EAAY,SAAC7f,GAAD,OACP,MAATvD,GAA2C,MAA1BA,EAAMqI,YAAY9E,IAE/B9D,EAAiBujB,EAASvjB,eAAevL,QAL1B,SAAC+L,GAAD,OACV,MAATD,GAA+C,MAA9BA,EAAMgI,WAAW/H,MAK9BP,EAAasjB,EAAStjB,WAAWxL,OAAOkvB,GACxCzjB,EAAeqjB,EAASrjB,aAAazL,OAAOkvB,GAElD,OAAO,2BAAKJ,GAAZ,IAAsBvjB,iBAAgBC,aAAYC,mBACjD,CAACK,EAAOqiB,IAEX,GAA6B,OAAzBF,EACF,OAAOA,EAGT,GAAyB,UAArBE,EAAY7wB,KACd,MAAO,CACLA,KAAM,WAMV,GAAyB,UAArB6wB,EAAY7wB,KACd,MAAO,CACLA,KAAM,SACN6xB,OAAQ,CAACF,EAAkBzZ,IAK/B,MAAM,IAAI7Z,EAAgB,CACxBC,QAAS,2CACTE,OAAQ,CACNiL,OACAonB,cACAJ,iBA6CN,IAAMqB,GAAgB,SAACC,GAAD,OACX,MAATA,GACA9oB,MAAMsB,QAAQwnB,IACdA,EAAM1U,OAAM,SAAC1a,GAAD,MAA0B,kBAATA,MAW/B,SAASsuB,GACPO,EACAT,GAEA,IACE,GACc,MAAZS,GACoB,kBAAbA,GACPvoB,MAAMsB,QAAQinB,GAEd,MAAO,CACLxxB,KAAM,QACNouB,SAAUpgB,GACVmiB,OAAQ,CACN,IAAI9xB,EAAgB,CAClBC,QAAS,8BACTE,OAAQ,CACNuyB,cACAiB,oBAAqBR,EACrBA,gBAOV,IAAMS,EAAa,eAAQjkB,IAGrBkkB,EAAmBV,EACnBW,EAAiC,GAErClkB,EAKEikB,EALFjkB,eACAC,EAIEgkB,EAJFhkB,WACAC,EAGE+jB,EAHF/jB,aACAC,EAEE8jB,EAFF9jB,SACAC,EACE6jB,EADF7jB,mBAmFF,OAhFIyjB,GAAc7jB,GAChBgkB,EAAchkB,eAAiBA,EAE/BkkB,EAAsB9sB,KACpB,IAAIhH,EAAgB,CAClBC,QAAS,iDACTE,OAAQ,CACNuyB,cACAS,WACAvjB,iBACAmgB,SAAU6D,EAAchkB,mBAM5B6jB,GAAc5jB,GAChB+jB,EAAc/jB,WAAaA,EAE3BikB,EAAsB9sB,KACpB,IAAIhH,EAAgB,CAClBC,QAAS,6CACTE,OAAQ,CACNuyB,cACAS,WACAtjB,aACAkgB,SAAU6D,EAAc/jB,eAM5B4jB,GAAc3jB,GAChB8jB,EAAc9jB,aAAeA,EAE7BgkB,EAAsB9sB,KACpB,IAAIhH,EAAgB,CAClBC,QAAS,+CACTE,OAAQ,CACNuyB,cACAS,WACArjB,eACAigB,SAAU6D,EAAc9jB,iBAzFjB,kBADQ4jB,EAgGD3jB,IA9Ff,MAAT2jB,GACAvyB,OAAOC,KAAKsyB,GAAO1U,OAAM,SAAC1a,GAAD,MAA0B,kBAATA,MAC1CnD,OAAO0W,OAAO6b,GAAO1U,OAAM,SAAC1a,GAAD,MAA0B,kBAATA,KA6FxCsvB,EAAc7jB,SAAWA,EAEzB+jB,EAAsB9sB,KACpB,IAAIhH,EAAgB,CAClBC,QAAS,gDACTE,OAAQ,CACNuyB,cACAS,WACApjB,WACAggB,SAAU6D,EAAc7jB,aAME,kBAAvBC,EACT4jB,EAAc5jB,mBAAqBA,EAEnC8jB,EAAsB9sB,KACpB,IAAIhH,EAAgB,CAClBC,QAAS,+CACTE,OAAQ,CACNuyB,cACAS,WACAnjB,qBACA+f,SAAU6D,EAAc5jB,uBAM5B8jB,EAAsBzyB,OAAS,EAC1B,CACLM,KAAM,QACNouB,SAAU6D,EACV9B,OAAQgC,GAIL,CAAEnyB,KAAM,QAASwxB,SAAUS,GAClC,MAAOpnB,GACP,OAAIA,aAAenM,MACV,CACLsB,KAAM,QACNouB,SAAUpgB,GACVmiB,OAAQ,CACN,IAAI9xB,EAAgB,CAClBC,QAAS,sDACTC,OAAQsM,EACRrM,OAAQ,CACNuyB,mBAOH,CACL/wB,KAAM,QACNouB,SAAUpgB,GACVmiB,OAAQ,CACN,IAAI9xB,EAAgB,CAClBC,QAAS,sDACTE,OAAQ,CACNuyB,cACAqB,cAAevnB,OAlKD,IAACknB,ECrO3B,SAASM,GAAY5oB,EAAcmb,GACjC,MAAgB,KAATnb,GAAwB,cAATA,GAAwBmb,EAAM7kB,SAAS0J,G,OCzChD,SAAS6oB,GAAT,GAG8B,IACvChB,EAHJrD,EAE0C,EAF1CA,MACAhvB,EAC0C,EAD1CA,KAGA,GAAmB,YAAfgvB,EAAMjuB,KACRsxB,EACE,qCACE,cAAChP,GAAD,CAASC,KAAK,SAASxU,MAAO,CAAEwkB,QAAS,MACzC,yCACA,8BAAMtzB,WAGL,IAAmB,WAAfgvB,EAAMjuB,KAEf,OAAO,mCAAGiuB,EAAMqD,WAEhBA,EADSrD,EAAMoD,aAEb,qCACE,cAAC/O,GAAD,CAASC,KAAK,SAASxU,MAAO,CAAEwkB,QAAS,MACzC,yCACA,eAACtD,GAAD,CACEC,aACE,cAACP,GAAD,CACEtvB,MAAO4uB,EAAM5uB,MACbuvB,SAAUX,EAAMW,SAChB3vB,KAAMA,IALZ,UASE,kEACkCA,EADlC,KAC0CgvB,EAAMW,YAEhD,gKASJ,qCACE,cAACO,GAAD,IACA,eAACF,GAAD,CACEC,aACE,cAACP,GAAD,CACEtvB,MAAO4uB,EAAM5uB,MACbuvB,SAAUX,EAAMW,SAChB3vB,KAAMA,IALZ,UASE,gFACgDA,EADhD,IACuD,IACpDgvB,EAAMW,YAET,8FAMR,OAAO,qBAAKviB,UAAU,kBAAf,SAAkCilB,ICtEpC,SAASkB,KACd,MACE5Z,qBAAW0W,IADLC,EAAR,EAAQA,gBAAiBvD,EAAzB,EAAyBA,YAAayD,EAAtC,EAAsCA,WAGtC,OACE,qCACE,cAACK,GAAD,IACA,cAACpK,GAAD,CACEjC,WAAY8L,EACZ7L,YAAasI,EACbrI,aAAc8L,EACd7L,KAAMyL,KAER,eAAC,GAAD,CACEjB,SAAU,SAAC/uB,EAAOmvB,GAAR,aACR,eAACiE,GAAD,WACE,cAACtD,GAAD,IACA,eAACF,GAAD,CACEC,aACE,cAACX,GAAD,CAAmBlvB,MAAOA,EAAOmvB,UAAWA,IAFhD,UAKE,gFACgD,IADhD,UAEGa,GAASE,UAFZ,QAEgC,IAFhC,iCAKA,+FAdR,UAmBuB,IAApBA,GAAyB,cAACxD,GAAD,IACL,IAApBwD,GAAyB,cAAC,GAAD,OAE5B,cAACzC,GAAD,OAcC,SAAS4F,GAAT,GAEmD,IADxDjmB,EACuD,EADvDA,SAEA,EACEmM,qBAAW0W,IADLC,EAAR,EAAQA,gBAAiBvD,EAAzB,EAAyBA,YAAayD,EAAtC,EAAsCA,WAGtC,OACE,qCACE,cAACK,GAAD,IACA,cAACtM,GAAD,CACEC,WAAY8L,EACZ7L,YAAasI,EACbrI,aAAc8L,EACd7L,KAAMyL,GACNlL,WAAY,CAAEnkB,KAAM,aAErByM,EACD,cAACqgB,GAAD,OAiBC,SAAS6F,GAAT,GAKsD,IAJ3DlmB,EAI0D,EAJ1DA,SACAmY,EAG0D,EAH1DA,MACAD,EAE0D,EAF1DA,YACAD,EAC0D,EAD1DA,aAEA,EACE9L,qBAAW0W,IADLC,EAAR,EAAQA,gBAAiBvD,EAAzB,EAAyBA,YAAayD,EAAtC,EAAsCA,WAGtC,OACE,qCACE,cAACK,GAAD,IACA,cAACtM,GAAD,CACEC,WAAY8L,EACZ7L,YAAasI,EACbrI,aAAc8L,EACd7L,KAAMyL,GACNlL,WAAY,CAAEnkB,KAAM,SAAU4kB,QAAOD,cAAaD,kBAEnDjY,EACD,cAACqgB,GAAD,OAcC,SAAS2F,GAAT,GAEuC,IAD5ChmB,EAC2C,EAD3CA,SAEA,OACE,qBAAKJ,UAAWjE,EAAQ,OAAQ,YAAhC,SACE,qBAAKiE,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,SAAyCI,QClH1C,SAASmmB,GAAT,GAAsE,IAAjDnmB,EAAgD,EAAhDA,SACpBomB,ENPO,WACb,MAA0B5W,mBAAiC,CACzDjc,KAAM,YADR,mBAAOiuB,EAAP,KAAcE,EAAd,KA+EA,OA1EAxR,qBAAU,WACR,IAAMmW,EAAgB,IAAIhoB,GADZ,4CAEd,gCAAAU,EAAA,sDACMD,EAAgB,EADtB,UAEUunB,EAAc/nB,YAFxB,0CAI2BK,QAAQ2nB,KAAK,CAChCD,EAAc5nB,QACdsF,KAAMC,IAAwBsf,MANtC,WAIY8B,EAJZ,UASqBiB,EAAc7nB,gBATnC,oDAqB8B,KARlB+nB,EAAYnB,EAA0CnjB,KACzDnB,KAAI,SAAC6d,GAAD,OAAaA,EAAQnsB,QACzByD,QAAO,SAACzD,GAAD,MAAU,cAAcg0B,KAAKh0B,MACpCsO,KAAI,SAACtO,GAAD,OAAUA,EAAKiG,QAAQ,UAAW,OACtCoS,OACA4b,WAGUxzB,OArBnB,uBAsBc,IAAIrB,EAAgB,CACxBC,QAAS,oDAvBnB,eA2BM6vB,EAAS,CACPnuB,KAAM,SACN6xB,OAAQmB,IA7BhB,qDAmCWpoB,GAAoB,EAAD,KACtB/K,EACE,IAAIxB,EAAgB,CAClBC,QAAS,+BACTC,OAAO,EAAD,GACNC,OAAQ,CACN+R,IAAKwf,OAOb5B,EAAS,CACPnuB,KAAM,QACNX,MAAO,gBAAeX,MAAf,KAA6B,IAAIA,MAAJ,MACpC2yB,cAAc,EACdzC,SAAU9kB,OAAO,EAAD,MApDxB,yBAyDUwB,GAAmBC,GAzD7B,QA0DIA,GAAiB,EA1DrB,0EAFc,sBAqEd,OArEc,0CAgEd6I,GAAOK,OAAM,eAKN,WACLqe,EAAc9nB,YAEf,CAACmjB,IAEGF,EMzEckF,GAErB,MAA0B,WAAtBN,EAAa7yB,KAEb,cAAC0yB,GAAD,UACE,cAACD,GAAD,UACE,cAACH,GAAD,CAAgBrE,MAAO4E,EAAc5zB,KAAK,8BAM3C,mCAAGwN,EAAS,CAAEmY,MAAOiO,EAAahB,WAepC,SAASuB,GAAT,GAGuC,IAF5C3mB,EAE2C,EAF3CA,SAGMomB,EHhDO,SACbjO,GACiD,IAAD,EAChD,EAAwBpD,GAAU,OAAD,UAASoD,EAAM,UAAf,QAAqB,IAAtD,mBAAOnb,EAAP,KAAawO,EAAb,KACA,EAAoDgE,mBAClD,MADF,mBAAOoX,EAAP,KAA2BC,EAA3B,KAyBA,OApBA3W,qBAAU,WACR,IAAK0V,GAAY5oB,EAAMmb,GAAQ,CAC7B,MAAqBA,EAAd2O,EAAP,oBACA,GAAIlB,GAAYkB,EAAY3O,GAC1B3M,EAAQsb,OACH,CACL,IAAM1oB,EAAM,IAAIxM,EAAgB,CAC9BC,QAAS,kDACTE,OAAQ,CACN+0B,aACA3O,WAIJ0O,EAAsBzoB,GACtBhL,EAAUgL,OAGb,CAAC+Z,EAAOnb,EAAMwO,IAEU,OAAvBob,EACK,CACLrzB,KAAM,QACNX,MAAOg0B,EACPhC,cAAc,EACdzC,SAAU,6DAITyD,GAAY5oB,EAAMmb,GAMhB,CACL5kB,KAAM,SACN6xB,OAAQ,CAACpoB,EAAMwO,IAPR,CACLjY,KAAM,WGQWwzB,CADsB,EAD3C5O,OAIA,GAA0B,WAAtBiO,EAAa7yB,KACf,OACE,cAAC0yB,GAAD,UACE,cAACD,GAAD,UACE,cAACH,GAAD,CACErE,MAAO4E,EACP5zB,KAAK,6CAOf,kBAAwB4zB,EAAahB,OAArC,GAAOpoB,EAAP,KAAawO,EAAb,KACA,OAAO,mCAAGxL,EAAS,CAAEhD,OAAMwO,cAiBtB,SAASwb,GAAT,GAKqC,IAJ1C7O,EAIyC,EAJzCA,MACAnb,EAGyC,EAHzCA,KACAwO,EAEyC,EAFzCA,QACAxL,EACyC,EADzCA,SAEMomB,ECpEO,SACbppB,GAEA,MAA0BwS,mBAA8B,CACtDjc,KAAM,YADR,mBAAOiuB,EAAP,KAAcE,EAAd,KAMMuF,EAAiBpU,iBAAqB,MAiI5C,OA9HA3C,qBAAU,WACR,IAAMmW,EAAgB,IAAIhoB,GACpByF,EA9BmB,SAAC9G,GAAD,uDACeA,EADf,SA8BbkqB,CAAqBlqB,GAFnB,4CAId,4BAAA+B,EAAA,sDACMooB,GAAU,EADhB,UAEUd,EAAc/nB,YAFxB,iCASUqJ,EAAK,CAAEyf,WAAYD,IAT7B,WAUQd,EAAc/nB,YAVtB,iEAcyBK,QAAQ2nB,KAAK,CAChCD,EAAc5nB,QACdc,GAAM,CAAEC,UAAW6nB,QAhBzB,mBAmBmBhB,EAAc7nB,gBAnBjC,mDAuBI2oB,GAAU,EAvBd,4DAJc,+BA+BCxf,EA/BD,8EA+Bd,uCAAA5I,EAAA,sDACEqoB,EADF,EACEA,WAIA1F,EAAS,CACPnuB,KAAM,YAGJuL,EAAgB,EATtB,UAUUunB,EAAc/nB,YAVxB,0CAY2BK,QAAQ2nB,KAAK,CAChCD,EAAc5nB,QACdsF,KAAMC,IAAqBF,KAdnC,WAYYshB,EAZZ,UAiBqBiB,EAAc7nB,gBAjBnC,sDAqBY8oB,EAAQlC,EAA0CnjB,KAK3B,OAA3BglB,EAAerT,SACf,IAAIre,KAAK+xB,EAAK/e,WAAW+Q,aAAzB,UACE2N,EAAerT,eADjB,aACE,EAAwBrL,UAAU+Q,WA5B5C,0DAkCYvX,EAAQ,IAAIuG,GAAMgf,EAAMtqB,GAC9B0kB,EAAS,CACPnuB,KAAM,SACN6xB,OAAQrjB,IAEVklB,EAAerT,QAAU7R,EAvC/B,qDA4CW5D,GAAoB,EAAD,KACtB/K,EACE,IAAIxB,EAAgB,CAClBC,QAAS,8BACTC,OAAO,EAAD,GACNC,OAAQ,CACNiL,OACA8G,UAMJsjB,GAEF1F,EAAS,CACPnuB,KAAM,QACNX,MAAO,gBAAeX,MAAf,KAA6B,IAAIA,MAAJ,MACpC2yB,cAAc,EACdzC,SAAU9kB,OAAO,EAAD,MA/D1B,yBAqEUwB,GAAmBC,GArE7B,QAsEIA,GAAiB,EAtErB,0EA/Bc,sBAuHd,OAvHc,0CAyGdyoB,GAAiBvf,OAAM,SAAC5J,GACtBhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,0CACTC,OAAQsM,EACRrM,OAAQ,CACNiL,OACA8G,aAOD,WACLuiB,EAAc9nB,YAEf,CAACvB,EAAM0kB,IAIS,WAAfF,EAAMjuB,MAAqBiuB,EAAM4D,OAAOpoB,OAASA,EAC5C,CAAEzJ,KAAM,WAGViuB,ED1EcgG,CAAqBxqB,GAE1C,MAA0B,WAAtBopB,EAAa7yB,KAEb,cAAC2yB,GAAD,CACE/N,MAAOA,EACPD,YAAalb,EACbib,aAAczM,EAHhB,SAKE,cAACwa,GAAD,UACE,cAACH,GAAD,CACErE,MAAO4E,EACP5zB,KAAK,+CAOR,mCAAGwN,EAAS,CAAE+B,MAAOqkB,EAAahB,WAkBpC,SAASqC,GAAT,GAM2C,IALhDtP,EAK+C,EAL/CA,MACAnb,EAI+C,EAJ/CA,KACAwO,EAG+C,EAH/CA,QACAzJ,EAE+C,EAF/CA,MACA/B,EAC+C,EAD/CA,SAMMomB,EAAerC,GAAuB/mB,EAAM+E,GAElD,GAA0B,WAAtBqkB,EAAa7yB,KACf,OACE,cAAC2yB,GAAD,CACE/N,MAAOA,EACPD,YAAalb,EACbib,aAAczM,EAHhB,SAKE,cAACwa,GAAD,UACE,cAACH,GAAD,CACErE,MAAO4E,EACP5zB,KAAK,oCAOf,kBAAkC4zB,EAAahB,OAA/C,GAAOL,EAAP,KAAiBtZ,EAAjB,KACA,OAAO,mCAAGzL,EAAS,CAAE+kB,WAAUtZ,oBAiB1B,SAASic,GAAT,GAQ0C,IAP/CvP,EAO8C,EAP9CA,MACAnb,EAM8C,EAN9CA,KACAwO,EAK8C,EAL9CA,QACAzJ,EAI8C,EAJ9CA,MACAgjB,EAG8C,EAH9CA,SACAtZ,EAE8C,EAF9CA,cACAzL,EAC8C,EAD9CA,SAGM2nB,EAAmBjZ,mBACvB,iBAAM,CAAC,aACH1R,OAAM+E,SAAUgjB,GAClB,CAAEvZ,UAASC,oBAEb,CAACzO,EAAM+E,EAAOgjB,EAAUvZ,EAASC,IAGnC,OACE,cAACH,GAAaoU,SAAd,CAAuBzQ,MAAOkJ,EAA9B,SACE,cAAC5M,GAAYmU,SAAb,CAAsBzQ,MAAO0Y,EAA7B,SACG3nB,M,OE9KM,SAAS4nB,KAItB,OfmBA1X,qBAAU,WACHgF,KAAQlR,IAAIgd,MACf6G,KAAK,CACHC,OAAQ,UACRnJ,QAAS,cAACsC,GAAD,MACRjZ,OAAM,SAAC5J,GACRhL,EACE,IAAIxB,EAAgB,CAClBC,QAAS,uBACTC,OAAQsM,EACRrM,OAAQ,CACNg2B,UAAW/G,UAMnB9L,KAAQC,IAAI6L,GAAkB,OAAQ,CAAE5L,QAAS,SAElD,IerCD,cAAC4S,GAAD,UACE,cAACC,GAAD,UACE,eAAC,GAAD,CACEtG,SAAU,SAAC/uB,EAAOmvB,GAAR,OACR,cAACkE,GAAD,UACE,eAACD,GAAD,WACE,cAACtD,GAAD,IACA,eAACF,GAAD,CACEC,aACE,cAACX,GAAD,CAAmBlvB,MAAOA,EAAOmvB,UAAWA,IAFhD,UAKE,oHAIA,iGAdV,UAsBE,cAACmB,GAAD,UAME,cAACiD,GAAD,UACG,gBAAGhO,EAAH,EAAGA,MAAH,OACC,cAACwO,GAAD,CAAiBxO,MAAOA,EAAxB,SACG,gBAAGnb,EAAH,EAAGA,KAAMwO,EAAT,EAASA,QAAT,OACC,cAACwb,GAAD,CAAe7O,MAAOA,EAAOnb,KAAMA,EAAMwO,QAASA,EAAlD,SACG,gBAAGzJ,EAAH,EAAGA,MAAH,OACC,cAAC0lB,GAAD,CACEtP,MAAOA,EACPnb,KAAMA,EACNwO,QAASA,EACTzJ,MAAOA,EAJT,SAMG,gBAAGgjB,EAAH,EAAGA,SAAUtZ,EAAb,EAAaA,cAAb,OACC,cAACic,GAAD,CACEvP,MAAOA,EACPnb,KAAMA,EACNwO,QAASA,EACTzJ,MAAOA,EACPgjB,SAAUA,EACVtZ,cAAeA,EANjB,SAQE,cAACsa,GAAD,oBAWpB,cAACzF,GAAD,WAiBV,SAAS0H,GAAT,GAA0E,IAAnDhoB,EAAkD,EAAlDA,SACrB,EAA0B+U,GAAU,QAAS,QAA7C,mBAAO4C,EAAP,KAAcC,EAAd,KACMsQ,EhD/GD,SAAiBvQ,GACtB,OAAQA,GACN,IAAK,QACL,IAAK,OACH,OAAO,EACT,QACE,OAAO,GgDyGYwQ,CAAQxQ,GAASA,EAAQ,OAGhDzH,qBAAU,WACJyH,IAAUuQ,GACZtQ,EAASsQ,KAEV,CAACvQ,EAAOuQ,EAAgBtQ,IAE3B,ICtHmChY,EDsH7BwoB,EAAoB1Z,mBACxB,iBAAM,CAACwZ,EAAgBtQ,KACvB,CAACsQ,EAAgBtQ,IAMnB,OC9HmChY,ED4HtB+X,EC3Hb0Q,2BAAgB,WAGN,IAAD,EAIP,MANyB,kBAAdzoB,EACTtG,SAASgvB,KAAK1sB,UAAU+R,IAAI/N,IAE5B,EAAAtG,SAASgvB,KAAK1sB,WAAU+R,IAAxB,oBAA+B/N,IAG1B,WAGG,IAAD,EAFkB,kBAAdA,EACTtG,SAASgvB,KAAK1sB,UAAU2sB,OAAO3oB,IAE/B,EAAAtG,SAASgvB,KAAK1sB,WAAU2sB,OAAxB,oBAAkC3oB,OAGrC,CAACA,IDgHF,cAACsL,GAAawU,SAAd,CAAuBzQ,MAAOmZ,EAA9B,SACGpoB,IAaP,SAASioB,GAAT,GAAwE,IAAlDjoB,EAAiD,EAAjDA,SAGduV,EAASD,KAEf,OAAO,qBAAK1V,UAAWjE,EAAQ,MAAO4Z,GAAU,UAAzC,SAAqDvV,I,cE3I5DvN,QAAQiH,IAAI,uBACZhG,IAAY,CACV80B,IAAK,4EACLC,aAAc,CAAC,IAAIC,IAAaC,gBAChCC,iBAAkB,EAClBC,aAAc,CAAC,sCACfC,QAAS7M,6CAIb8M,IAASC,OAAO,cAACpB,GAAD,IAAStuB,SAAS2vB,eAAe,W","file":"static/js/main.0b2ca208.chunk.js","sourcesContent":["const OPEN = 8 * 60;\nconst CLOSE = 21 * 60;\nconst DAYS = ['M', 'T', 'W', 'R', 'F'];\n\nconst PNG_SCALE_FACTOR = 2;\n\nconst PALETTE = [\n  [\n    '#4D4D4D',\n    '#999999',\n    '#FFFFFF',\n    '#F44E3B',\n    '#FE9200',\n    '#FCDC00',\n    '#DBDF00',\n    '#A4DD00',\n    '#68CCCA',\n    '#73D8FF',\n    '#AEA1FF',\n    '#FDA1FF',\n  ],\n  [\n    '#333333',\n    '#808080',\n    '#CCCCCC',\n    '#D33115',\n    '#E27300',\n    '#FCC400',\n    '#B0BC00',\n    '#68BC00',\n    '#16A5A5',\n    '#009CE0',\n    '#7B64FF',\n    '#FA28FF',\n  ],\n  [\n    '#000000',\n    '#666666',\n    '#B3B3B3',\n    '#9F0500',\n    '#C45100',\n    '#FB9E00',\n    '#808900',\n    '#194D33',\n    '#0C797D',\n    '#0062B1',\n    '#653294',\n    '#AB149E',\n  ],\n];\n\nconst ASYNC_DELIVERY_MODE = 'Remote Asynchronous Course';\n\nconst DELIVERY_MODES: Record<string, string> = {\n  'Hybrid Course': 'Hybrid',\n  'Remote Synchronous Course': 'Remote Synchronous',\n  'Remote Asynchronous Course': 'Remote Asynchronous',\n  'Residential Course': 'Residential',\n};\n\nconst CAMPUSES: Record<string, string> = {\n  'Georgia Tech-Atlanta *': 'Atlanta',\n  'GT Lorraine-Undergrad Programs': 'Lorraine Undergrad',\n  'GT Lorraine-Graduate Programs': 'Lorraine Graduate',\n  'Georgia Tech - Shenzhen': 'Shenzhen',\n  Video: 'Video',\n  Online: 'Online',\n  'MBA Evening Program': 'MBA Evening',\n};\n\nconst BACKEND_BASE_URL = 'https://gt-scheduler.azurewebsites.net';\n\nexport {\n  OPEN,\n  CLOSE,\n  DAYS,\n  PNG_SCALE_FACTOR,\n  PALETTE,\n  ASYNC_DELIVERY_MODE,\n  DELIVERY_MODES,\n  CAMPUSES,\n  BACKEND_BASE_URL,\n};\n","import * as Sentry from '@sentry/react';\n\nexport class ErrorWithFields extends Error {\n  fields: Record<string, unknown>;\n\n  topMessage: string;\n\n  source: Error | null;\n\n  constructor({\n    message,\n    source,\n    fields = {},\n  }: {\n    message: string;\n    source?: unknown;\n    fields?: Record<string, unknown>;\n  }) {\n    super();\n\n    this.fields = fields;\n    this.topMessage = message;\n\n    // Make sure the given source is an error if given,\n    // otherwise add its string serialization as a field\n    if (source instanceof Error) {\n      this.source = source;\n      this.message = `${message}: ${source.message}`;\n\n      // Try to inherit the stacktrace of the given error\n      // (otherwise, fall back to the stacktrace created\n      // when this error was constructed)\n      if (source.stack != null) {\n        this.stack = source.stack;\n      }\n    } else {\n      this.source = null;\n      this.message = message;\n\n      if (this.source !== null) {\n        // The source was non-null but was not an Error:\n        // add a naive string serialization as a context\n        this.fields['__non_error_source'] = 'true';\n        try {\n          this.fields['__source'] = JSON.stringify(source);\n        } catch (_) {\n          // Ignore errors here\n          this.fields['__failed_to_stringify_source'] = 'true';\n        }\n      }\n    }\n\n    // Configure the name based on whether this is wrapping\n    // an existing non-wrapped error\n    const rootError = this.getRootError();\n    if (rootError === this || rootError instanceof ErrorWithFields) {\n      this.name = 'ErrorWithFields';\n    } else {\n      this.name = `ErrorWithFields(${rootError.name})`;\n    }\n  }\n\n  logToConsole(): void {\n    /* eslint-disable no-console */\n    console.group(this.topMessage);\n    console.error(this.getRootError());\n\n    const allFields = this.getAllFields();\n    if (Object.keys(allFields).length > 0) {\n      console.info(allFields);\n    }\n\n    console.groupEnd();\n    /* eslint-enable no-console */\n  }\n\n  getAllFields(): Record<string, unknown> {\n    if (this.source instanceof ErrorWithFields) {\n      return { ...this.source.getAllFields(), ...this.fields };\n    }\n\n    return this.fields;\n  }\n\n  getRootError(): Error {\n    if (this.source === null) {\n      return this;\n    }\n\n    if (this.source instanceof ErrorWithFields) {\n      return this.source.getRootError();\n    }\n\n    return this.source;\n  }\n}\n\n/**\n * Logs an error to the console and reports it to Sentry.\n * Does not re-throw any errors and can be used when there is reasonable\n * fallback behavior.\n * @param error - an instance of `ErrorWithFields`\n */\nexport function softError(error: ErrorWithFields): void {\n  error.logToConsole();\n\n  // Report the error to Sentry if in production\n  if (process.env.NODE_ENV === 'production') {\n    // Ensure we don't include `type` in the fields\n    let fields = error.getAllFields();\n    if (Object.keys(fields).includes('type')) {\n      const { type, ...rest } = fields;\n      fields = { __do_not_use_type_in_sentry_it_is_special: type, ...rest };\n    }\n\n    Sentry.captureException(error.getRootError(), {\n      // https://docs.sentry.io/platforms/ruby/enriching-events/context/#structured-context\n      contexts: {\n        fields,\n        error: {\n          message: error.message,\n        },\n      },\n      fingerprint: [error.message],\n    });\n  }\n}\n","/* global saveAs, BlobBuilder */\n/* exported ics */\n\nconst ics = (uidDomain, prodId) => {\n  if (\n    navigator.userAgent.indexOf('MSIE') > -1 &&\n    navigator.userAgent.indexOf('MSIE 10') === -1\n  ) {\n    // eslint-disable-next-line no-console\n    console.log('Unsupported Browser');\n    return;\n  }\n\n  if (typeof uidDomain === 'undefined') {\n    uidDomain = 'default';\n  }\n  if (typeof prodId === 'undefined') {\n    prodId = 'Calendar';\n  }\n\n  const SEPARATOR = navigator.appVersion.indexOf('Win') !== -1 ? '\\r\\n' : '\\n';\n  const calendarEvents = [];\n  const calendarStart = [\n    'BEGIN:VCALENDAR',\n    `PRODID:${prodId}`,\n    'VERSION:2.0',\n  ].join(SEPARATOR);\n  const calendarEnd = `${SEPARATOR}END:VCALENDAR`;\n  const BYDAY_VALUES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n  return {\n    /**\n     * Returns events array\n     * @return {array} Events\n     */\n    events() {\n      return calendarEvents;\n    },\n\n    /**\n     * Returns calendar\n     * @return {string} Calendar in iCalendar format\n     */\n    calendar() {\n      return (\n        calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd\n      );\n    },\n\n    /**\n     * Add event to the calendar\n     * @param  {string} subject     Subject/Title of event\n     * @param  {string} description Description of event\n     * @param  {string} location    Location of event\n     * @param  {string} begin       Beginning date of event\n     * @param  {string} stop        Ending date of event\n     */\n    addEvent(subject, description, location, begin, stop, rrule) {\n      // I'm not in the mood to make these optional... So they are all required\n      if (\n        typeof subject === 'undefined' ||\n        typeof description === 'undefined' ||\n        typeof location === 'undefined' ||\n        typeof begin === 'undefined' ||\n        typeof stop === 'undefined'\n      ) {\n        return false;\n      }\n\n      // validate rrule\n      if (rrule) {\n        if (!rrule.rrule) {\n          if (\n            rrule.freq !== 'YEARLY' &&\n            rrule.freq !== 'MONTHLY' &&\n            rrule.freq !== 'WEEKLY' &&\n            rrule.freq !== 'DAILY'\n          ) {\n            throw new Error(\n              \"Recurrence rrule frequency must be provided and be one of the following: 'YEARLY', 'MONTHLY', 'WEEKLY', or 'DAILY'\"\n            );\n          }\n\n          if (rrule.until) {\n            if (Number.isNaN(Date.parse(rrule.until))) {\n              throw new Error(\n                \"Recurrence rrule 'until' must be a valid date string\"\n              );\n            }\n          }\n\n          if (rrule.interval) {\n            if (Number.isNaN(parseInt(rrule.interval, 10))) {\n              throw new Error(\"Recurrence rrule 'interval' must be an integer\");\n            }\n          }\n\n          if (rrule.count) {\n            if (Number.isNaN(parseInt(rrule.count, 10))) {\n              throw new Error(\"Recurrence rrule 'count' must be an integer\");\n            }\n          }\n\n          if (typeof rrule.byday !== 'undefined') {\n            if (\n              Object.prototype.toString.call(rrule.byday) !== '[object Array]'\n            ) {\n              throw new Error(\"Recurrence rrule 'byday' must be an array\");\n            }\n\n            if (rrule.byday.length > 7) {\n              throw new Error(\n                \"Recurrence rrule 'byday' array must not be longer than the 7 days in a week\"\n              );\n            }\n\n            // Filter any possible repeats\n            rrule.byday = rrule.byday.filter((elem, pos) => {\n              return rrule.byday.indexOf(elem) === pos;\n            });\n\n            for (const d in rrule.byday) {\n              if (BYDAY_VALUES.indexOf(rrule.byday[d]) < 0) {\n                throw new Error(\n                  \"Recurrence rrule 'byday' values must include only the following: 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'\"\n                );\n              }\n            }\n          }\n        }\n      }\n\n      // TODO add time and time zone? use moment to format?\n      const start_date = new Date(begin);\n      const end_date = new Date(stop);\n      const now_date = new Date();\n\n      const start_year = `0000${start_date.getFullYear().toString()}`.slice(-4);\n      const start_month = `00${(start_date.getMonth() + 1).toString()}`.slice(\n        -2\n      );\n      const start_day = `00${start_date.getDate().toString()}`.slice(-2);\n      const start_hours = `00${start_date.getHours().toString()}`.slice(-2);\n      const start_minutes = `00${start_date.getMinutes().toString()}`.slice(-2);\n      const start_seconds = `00${start_date.getSeconds().toString()}`.slice(-2);\n\n      const end_year = `0000${end_date.getFullYear().toString()}`.slice(-4);\n      const end_month = `00${(end_date.getMonth() + 1).toString()}`.slice(-2);\n      const end_day = `00${end_date.getDate().toString()}`.slice(-2);\n      const end_hours = `00${end_date.getHours().toString()}`.slice(-2);\n      const end_minutes = `00${end_date.getMinutes().toString()}`.slice(-2);\n      const end_seconds = `00${end_date.getSeconds().toString()}`.slice(-2);\n\n      const now_year = `0000${now_date.getFullYear().toString()}`.slice(-4);\n      const now_month = `00${(now_date.getMonth() + 1).toString()}`.slice(-2);\n      const now_day = `00${now_date.getDate().toString()}`.slice(-2);\n      const now_hours = `00${now_date.getHours().toString()}`.slice(-2);\n      const now_minutes = `00${now_date.getMinutes().toString()}`.slice(-2);\n      const now_seconds = `00${now_date.getSeconds().toString()}`.slice(-2);\n\n      let start_time = '';\n      let end_time = '';\n      if (\n        start_hours +\n          start_minutes +\n          start_seconds +\n          end_hours +\n          end_minutes +\n          end_seconds !==\n        0\n      ) {\n        start_time = `T${start_hours}${start_minutes}${start_seconds}`;\n        end_time = `T${end_hours}${end_minutes}${end_seconds}`;\n      }\n      const now_time = `T${now_hours}${now_minutes}${now_seconds}`;\n\n      const start = start_year + start_month + start_day + start_time;\n      const end = end_year + end_month + end_day + end_time;\n      const now = now_year + now_month + now_day + now_time;\n\n      // recurrence rrule vars\n      let rruleString;\n      if (rrule) {\n        if (rrule.rrule) {\n          rruleString = rrule.rrule;\n        } else {\n          rruleString = `RRULE:FREQ=${rrule.freq}`;\n\n          if (rrule.until) {\n            const uDate = new Date(Date.parse(rrule.until)).toISOString();\n            rruleString += `;UNTIL=${uDate\n              .substring(0, uDate.length - 13)\n              .replace(/[-]/g, '')}000000Z`;\n          }\n\n          if (rrule.interval) {\n            rruleString += `;INTERVAL=${rrule.interval}`;\n          }\n\n          if (rrule.count) {\n            rruleString += `;COUNT=${rrule.count}`;\n          }\n\n          if (rrule.byday && rrule.byday.length > 0) {\n            rruleString += `;BYDAY=${rrule.byday.join(',')}`;\n          }\n        }\n      }\n\n      // var stamp = new Date().toISOString();\n\n      let calendarEvent = [\n        'BEGIN:VEVENT',\n        `UID:${calendarEvents.length}@${uidDomain}`,\n        'CLASS:PUBLIC',\n        `DESCRIPTION:${description}`,\n        `DTSTAMP;VALUE=DATE-TIME:${now}`,\n        `DTSTART;VALUE=DATE-TIME:${start}`,\n        `DTEND;VALUE=DATE-TIME:${end}`,\n        `LOCATION:${location}`,\n        `SUMMARY;LANGUAGE=en-us:${subject}`,\n        'TRANSP:TRANSPARENT',\n        'END:VEVENT',\n      ];\n\n      if (rruleString) {\n        calendarEvent.splice(4, 0, rruleString);\n      }\n\n      calendarEvent = calendarEvent.join(SEPARATOR);\n\n      calendarEvents.push(calendarEvent);\n      return calendarEvent;\n    },\n\n    /**\n     * Download calendar using the saveAs function from filesave.js\n     * @param  {string} filename Filename\n     * @param  {string} ext      Extention\n     */\n    download(filename, ext) {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      ext = typeof ext !== 'undefined' ? ext : '.ics';\n      filename = typeof filename !== 'undefined' ? filename : 'calendar';\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      let blob;\n      if (navigator.userAgent.indexOf('MSIE 10') === -1) {\n        // chrome or firefox\n        blob = new Blob([calendar]);\n      } else {\n        // ie\n        const bb = new BlobBuilder();\n        bb.append(calendar);\n        blob = bb.getBlob(`text/x-vCalendar;charset=${document.characterSet}`);\n      }\n      saveAs(blob, filename + ext);\n      return calendar;\n    },\n\n    /**\n     * Build and return the ical contents\n     */\n    build() {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      return calendar;\n    },\n  };\n};\n\nexport default ics;\n","import React from 'react';\nimport { IBackOffOptions } from 'exponential-backoff';\nimport { DelayFactory } from 'exponential-backoff/dist/delay/delay.factory';\nimport { getSanitizedOptions } from 'exponential-backoff/dist/options';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\n\nimport { Oscar, Section } from './beans';\nimport { DAYS, PALETTE, PNG_SCALE_FACTOR } from './constants';\nimport { ErrorWithFields, softError } from './log';\nimport { ICS, Period, PrerequisiteClause, Theme } from './types';\nimport ics from './vendor/ics';\n\nexport const stringToTime = (string: string): number => {\n  const regexResult = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  if (regexResult === null) return 0;\n  const [, hour, minute, ampm] = regexResult as unknown as [\n    string,\n    string,\n    string,\n    string\n  ];\n  return ((ampm === 'p' ? 12 : 0) + (+hour % 12)) * 60 + +minute;\n};\n\nexport const timeToString = (time: number, ampm = true): string => {\n  const hour = (time / 60) | 0;\n  const minute = time % 60;\n  const hh = hour > 12 ? hour - 12 : hour;\n  const mm = `${minute}`.padStart(2, '0');\n  const A = `${hour < 12 ? 'a' : 'p'}m`;\n  return ampm ? `${hh}:${mm} ${A}` : `${hh}:${mm}`;\n};\n\nexport const timeToShortString = (time: number): string => {\n  const hour = (time / 60) | 0;\n  return `${hour > 12 ? hour - 12 : hour}${hour < 12 ? 'a' : 'p'}m`;\n};\n\nexport const periodToString = (period: Period | undefined): string =>\n  period != null\n    ? `${timeToString(period.start, false)} - ${timeToString(period.end)}`\n    : 'TBA';\n\nexport const getRandomColor = (): string => {\n  const colors = PALETTE.flat();\n  const index = (Math.random() * colors.length) | 0;\n  return colors[index] ?? '#333333';\n};\n\nexport const getContentClassName = (color: string | undefined): string => {\n  if (color == null) return 'light-content';\n  const r = parseInt(color.substring(1, 3), 16);\n  const g = parseInt(color.substring(3, 5), 16);\n  const b = parseInt(color.substring(5, 7), 16);\n  return r * 0.299 + g * 0.587 + b * 0.114 > 128\n    ? 'light-content'\n    : 'dark-content';\n};\n\nexport const hasConflictBetween = (\n  section1: Section,\n  section2: Section\n): boolean =>\n  section1.meetings.some((meeting1) =>\n    section2.meetings.some(\n      (meeting2) =>\n        meeting1.period &&\n        meeting2.period &&\n        DAYS.some(\n          (day) => meeting1.days.includes(day) && meeting2.days.includes(day)\n        ) &&\n        meeting1.period.start < meeting2.period.end &&\n        meeting2.period.start < meeting1.period.end\n    )\n  );\n\nexport const classes = (\n  ...classList: (string | boolean | null | undefined)[]\n): string => classList.filter((c) => c).join(' ');\n\nexport const isMobile = (): boolean => window.innerWidth < 1024;\n\nexport const simplifyName = (name: string): string => {\n  const tokens = name.split(' ');\n  const firstName = tokens.shift();\n  const lastName = tokens.pop();\n  return [firstName, lastName].join(' ');\n};\n\nexport function unique<T>(array: T[]): T[] {\n  return Array.from(new Set(array));\n}\n\nexport const isLab = (section: Section): boolean =>\n  ['Lab', 'Studio'].some((type) => section.scheduleType.includes(type));\n\nexport const isLecture = (section: Section): boolean =>\n  section.scheduleType.includes('Lecture');\n\nexport const getSemesterName = (term: string): string => {\n  const year = term.substring(0, 4);\n  const semester = ((): string => {\n    switch (Number.parseInt(term.substring(4), 10)) {\n      case 1:\n        return 'Winter';\n      case 2:\n      case 3:\n        return 'Spring';\n      case 5:\n      case 6:\n        return 'Summer';\n      case 8:\n      case 9:\n        return 'Fall';\n      default:\n        return 'Unknown';\n    }\n  })();\n  return `${semester} ${year}`;\n};\n\nexport function humanizeArray<T>(array: T[], conjunction = 'and'): string {\n  if (array.length <= 2) {\n    return array.join(` ${conjunction} `);\n  }\n  const init = [...array];\n  const last = init.pop();\n  return `${init.join(', ')}, ${conjunction} ${String(last)}`;\n}\n\nexport function humanizeArrayReact<T>(\n  array: T[],\n  conjunction: React.ReactNode = 'and'\n): React.ReactNode {\n  if (array.length === 0) {\n    return null;\n  }\n  if (array.length === 1) {\n    return String(array[0]);\n  }\n  if (array.length === 2) {\n    return (\n      <>\n        {String(array[0])} {conjunction} {String(array[1])}\n      </>\n    );\n  }\n\n  const init = [...array];\n  const last = init.pop();\n  return (\n    <>\n      {`${init.join(', ')},`.trim()} {conjunction} {String(last)}\n    </>\n  );\n}\n\nexport const serializePrereqs = (\n  reqs: PrerequisiteClause,\n  openPar = false,\n  closePar = false\n): string => {\n  // This function accepts the index of a sub-clause\n  // from the sub-clause slice of a compound prereq clause\n  // (i.e. the [...sub-clauses] part of a clause\n  // that itself is of the form [operator, ...sub-clauses]).\n  // As such, we compare to the clause length - 2\n  // (since the sub-clauses[0] is really reqs[1])\n  const last = (i: number): boolean =>\n    Array.isArray(reqs) && i === reqs.length - 2;\n  let string = '';\n\n  if (!Array.isArray(reqs)) {\n    string += (openPar ? '(' : '') + reqs.id + (closePar ? ')' : '');\n  } else if (reqs[0] === 'and') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string +=\n        serializePrereqs(req, i === 0, last(i)) + (last(i) ? '' : ' and ');\n    });\n  } else if (reqs[0] === 'or') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string += serializePrereqs(req) + (last(i) ? '' : ' or ');\n    });\n  }\n\n  return string;\n};\n\n// Determines whether an error is an axios network error,\n// which is used when determining whether to send it to Sentry\n// (since we can't do anything about a client-side NetworkError)--\n// it's either an error in the user's network\n// or downtime in a third-party service.\nexport const isAxiosNetworkError = (err: unknown): boolean => {\n  return err instanceof Error && err.message.includes('Network Error');\n};\n\n/**\n * Gives an awaitable class (via `promise`) that can be cancelled at any time.\n * Useful when combined with `Promise.race` to cancel background tasks.\n */\nexport class Cancellable {\n  isCancelled: boolean;\n\n  cancel: () => void;\n\n  cancelledSymbol: symbol;\n\n  promise: Promise<symbol>;\n\n  constructor() {\n    this.isCancelled = false;\n    this.cancel = (): void => undefined;\n    this.cancelledSymbol = Symbol('__#Cancellable-cancelled-symbol');\n    this.promise = new Promise<symbol>((resolve) => {\n      this.cancel = (): void => {\n        this.isCancelled = true;\n        resolve(this.cancelledSymbol);\n      };\n    });\n  }\n}\n\n/**\n * Sleeps for a delay controlled by an exponential backoff function with jitter.\n * Acts as a thin wrapper around `exponential-backoff`\n * that provides a lower-level API\n * @param attemptNumber - The number of attempts that have occurred so far\n * @param options - [optional] config for exponential-backoff\n */\nexport async function exponentialBackoff(\n  attemptNumber: number,\n  options: Partial<IBackOffOptions> = {}\n): Promise<void> {\n  await DelayFactory(\n    getSanitizedOptions({\n      // See https://github.com/coveooss/exponential-backoff for options API\n      jitter: 'full',\n      numOfAttempts: Number.MAX_SAFE_INTEGER,\n      ...options,\n    }),\n    attemptNumber\n  ).apply();\n}\n\n/**\n * Promise version of `setTimeout`; used to wait for a specific delay\n */\nexport async function sleep({\n  amount_ms,\n}: {\n  amount_ms: number;\n}): Promise<void> {\n  await new Promise((resolve) =>\n    setTimeout(() => resolve(undefined), amount_ms)\n  );\n}\n\n/**\n * Exports the current schedule to a `.ics` file,\n * which allows for importing into a third-party calendar application.\n */\nexport function exportCoursesToCalendar(\n  oscar: Oscar,\n  pinnedCrns: string[]\n): void {\n  const cal = ics() as ICS | undefined;\n  if (cal == null) {\n    window.alert('This browser does not support calendar export');\n    softError(\n      new ErrorWithFields({\n        message: 'ics() returned null or undefined',\n      })\n    );\n\n    return;\n  }\n\n  pinnedCrns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n\n    section.meetings.forEach((meeting) => {\n      if (!meeting.period || !meeting.days.length) return;\n      const { from, to } = meeting.dateRange;\n      const subject = section.course.id;\n      const description = section.course.title;\n      const location = meeting.where;\n      const begin = new Date(from.getTime());\n      while (\n        !meeting.days.includes(\n          ['-', 'M', 'T', 'W', 'R', 'F', '-'][begin.getDay()] ?? '-'\n        )\n      ) {\n        begin.setDate(begin.getDate() + 1);\n      }\n      begin.setHours(meeting.period.start / 60, meeting.period.start % 60);\n      const end = new Date(begin.getTime());\n      end.setHours(meeting.period.end / 60, meeting.period.end % 60);\n      const rrule = {\n        freq: 'WEEKLY',\n        until: to,\n        byday: meeting.days\n          .map(\n            (day) =>\n              ({ M: 'MO', T: 'TU', W: 'WE', R: 'TH', F: 'FR' }[day] ?? null)\n          )\n          .filter((day) => !!day),\n      };\n      cal.addEvent(subject, description, location, begin, end, rrule);\n    });\n  });\n  cal.download('gt-scheduler');\n}\n\n/**\n * Downloads a screenshot of the \"shadow\" calendar\n * that exists invisible in the app\n * and reflects the current state of the scheduler.\n * Allows the screenshot to be exported consistently\n * regardless of screen size or app state.\n * Requires the theme to style the background before taking the screenshot.\n */\nexport function downloadShadowCalendar(\n  captureElement: HTMLDivElement,\n  theme: Theme\n): void {\n  const computed = window\n    .getComputedStyle(captureElement)\n    .getPropertyValue('left');\n\n  domtoimage\n    .toBlob(captureElement, {\n      width: captureElement.offsetWidth * PNG_SCALE_FACTOR,\n      height: captureElement.offsetHeight * PNG_SCALE_FACTOR,\n      style: {\n        transform: `scale(${PNG_SCALE_FACTOR})`,\n        'transform-origin': `${computed} 0px`,\n        'background-color': theme === 'light' ? '#FFFFFF' : '#333333',\n      },\n    })\n    .then((blob) => saveAs(blob, 'schedule.png'))\n    .catch((err) =>\n      softError(\n        new ErrorWithFields({\n          message:\n            'could not take screenshot of shadow calendar for schedule export',\n          source: err,\n        })\n      )\n    );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type ButtonProps = {\n  className?: string;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  children?: React.ReactNode;\n};\n\nexport default function Button({\n  className,\n  disabled = false,\n  href,\n  onClick,\n  children,\n}: ButtonProps): React.ReactElement {\n  if (disabled)\n    return (\n      <div className={classes('Button', 'disabled', className)}>{children}</div>\n    );\n\n  if (href != null)\n    return (\n      <a\n        className={classes('Button', className)}\n        href={href}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {children}\n      </a>\n    );\n\n  return (\n    <div\n      className={classes('Button', className)}\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={(event): void => {\n        // Intercept enter presses\n        if (event.key === 'Enter' && onClick != null) onClick();\n      }}\n      role=\"button\"\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils';\nimport Button, { ButtonProps } from '../Button';\n\nimport './stylesheet.scss';\n\ntype FontAwesomeProps = React.ComponentProps<typeof FontAwesomeIcon>;\nexport type Action = {\n  icon: FontAwesomeProps['icon'];\n  styling?: React.CSSProperties;\n  dataTip?: boolean;\n  dataFor?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n} & Omit<ButtonProps, 'children'>;\n\ntype BaseActionRowProps = {\n  label: string;\n  actions: (Action | null | undefined)[];\n  className?: string;\n  children?: React.ReactNode;\n};\nexport type ActionRowProps = BaseActionRowProps &\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof BaseActionRowProps>;\n\nexport default function ActionRow({\n  className,\n  label,\n  children,\n  actions,\n  ...restProps\n}: ActionRowProps): React.ReactElement {\n  return (\n    <div className={classes('ActionRow', className)} {...restProps}>\n      <div className=\"action-row-header\">\n        <div className=\"label\">{label}</div>\n        <div className={classes('actions', 'default')}>\n          {actions\n            .flatMap((action) => (action != null ? [action] : []))\n            .map(\n              (\n                {\n                  icon,\n                  styling,\n                  dataTip,\n                  dataFor,\n                  onMouseEnter,\n                  onMouseLeave,\n                  ...rest\n                },\n                i\n              ) => (\n                <Button className=\"action\" {...rest} key={i}>\n                  <FontAwesomeIcon\n                    fixedWidth\n                    style={styling}\n                    icon={icon}\n                    data-tip={dataTip}\n                    data-for={dataFor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                  />\n                </Button>\n              )\n            )}\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport type Theme = 'light' | 'dark';\n\nexport function isTheme(theme: string): theme is Theme {\n  switch (theme) {\n    case 'light':\n    case 'dark':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type LoadingState<T> =\n  | LoadingStateLoaded<T>\n  | LoadingStateLoading\n  | LoadingStateError\n  | LoadingStateCustom;\nexport type LoadingStateLoaded<T> = { type: 'loaded'; result: T };\nexport type LoadingStateLoading = { type: 'loading' };\nexport type LoadingStateError = {\n  type: 'error';\n  overview: React.ReactNode;\n  error: Error;\n  stillLoading: boolean;\n};\nexport type LoadingStateCustom = {\n  type: 'custom';\n  contents: React.ReactNode;\n};\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\nexport type TermData = {\n  desiredCourses: string[];\n  pinnedCrns: string[];\n  excludedCrns: string[];\n  colorMap: Record<string, string>;\n  sortingOptionIndex: number;\n};\n\nexport const defaultTermData: TermData = {\n  desiredCourses: [],\n  pinnedCrns: [],\n  excludedCrns: [],\n  colorMap: {},\n  sortingOptionIndex: 0,\n};\n\nexport const defaultTermDataRaw: string = JSON.stringify(defaultTermData);\n\n// Declare (better) types for the ICS library\nexport type ICS = {\n  download(filename: string, ext?: string): string | false;\n  addEvent(\n    subject: string,\n    description: string,\n    location: string,\n    begin: string | Date,\n    stop: string | Date,\n    rrule: unknown\n  ): false | string[];\n};\n\nexport interface Combination {\n  crns: string[];\n  startMap: Record<string, number>;\n  endMap: Record<string, number>;\n}\n\nexport interface Period {\n  start: number;\n  end: number;\n}\n\nexport interface DateRange {\n  from: Date;\n  to: Date;\n}\n\nexport interface Location {\n  lat: number;\n  long: number;\n}\n\nexport interface Meeting {\n  period: Period | undefined;\n  days: string[];\n  where: string;\n  location: Location | null;\n  instructors: string[];\n  dateRange: DateRange;\n}\n\nexport interface CourseGpa {\n  averageGpa?: number;\n  [instructor: string]: number | undefined;\n}\n\n// Meeting type (imported as `CrawlerMeeting`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type CrawlerMeeting = [\n  /**\n   * an integer index into `caches.periods`,\n   * specifying the class's start/end times\n   */\n  periodIndex: number,\n  /**\n   * a string specifying what days the class takes place on\n   * (e.g. `\"MW\"` or `\"TR\"`)\n   */\n  days: string,\n  /**\n   * a string giving the room/location where the course will be held\n   * (e.g. `\"College of Business 224\"`)\n   */\n  room: string,\n  /**\n   * an integer index into `caches.locations`,\n   * containing the latitude and longitude for a given course\n   */\n  locationIndex: number,\n  /**\n   * an array of strings listing all the instructors for this section,\n   * along with a 1-character code to mark the principal instructor\n   * (e.g. `[\"Katarzyna Rubar (P)\"]`)\n   */\n  instructors: string[],\n  /**\n   * an integer index into `caches.dateRanges`,\n   * specifying the start/end date of the class this semester\n   */\n  dateRangeIndex: number\n];\n\n// Section type (imported as `CrawlerSection`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains  information about the course's section\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerSection = [\n  /**\n   * the CRN number of this section of the course\n   */\n  crn: string,\n  /**\n   * array of information about the section's meeting\n   * times/places/professors/etc.; in most cases, this array will only contain\n   * 1 item\n   */\n  meetings: CrawlerMeeting[],\n  /**\n   * integer number of credit hours this course is worth\n   */\n  creditHours: number,\n  /**\n   * integer index into `caches.scheduleTypes`\n   */\n  scheduleTypeIndex: number,\n  /**\n   * integer index into `caches.campuses`,\n   * specifying which campus the class is being taught at\n   */\n  campusIndex: number,\n  /**\n   * array of integer indices into `caches.attributes`,\n   * specifying any additional attributes the course has\n   */\n  attributeIndices: number[],\n  /**\n   * integer index into caches.gradeBases,\n   * specifying the grading scheme of the class\n   */\n  gradeBaseIndex: number\n];\n\n// Prerequisite types:\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type MinimumGrade = 'A' | 'B' | 'C' | 'D' | 'T';\nexport type PrerequisiteCourse = { id: string; grade?: MinimumGrade };\nexport type PrerequisiteClause = PrerequisiteCourse | PrerequisiteSet;\nexport type PrerequisiteOperator = 'and' | 'or';\nexport type PrerequisiteSet = [\n  operator: PrerequisiteOperator,\n  ...clauses: PrerequisiteClause[]\n];\n\n/**\n * Recursive data structure that is the sequence of all prerequisites in prefix\n * notation, parsed from the information on Oscar\n *\n * @example\n *\n * ```json\n   [\n     \"and\",\n     [\n       \"or\",\n       {\"id\":\"CS 3510\", \"grade\":\"C\"},\n       {\"id\":\"CS 3511\", \"grade\":\"C\"}\n     ]\n   ]\n * ```\n */\nexport type CrawlerPrerequisites = PrerequisiteSet | [];\n\n// Caches type (imported as `CrawlerCaches`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains data shared by multiple class descriptions\n */\nexport interface CrawlerCaches {\n  /**\n   * List of all the different time ranges that classes can be offered at\n   * (e.g. `\"8:00 am - 8:50 am\"`;\n   * there is one `\"TBA\"` string for classes whose time is \"To Be Announced\")\n   */\n  periods: string[];\n  /**\n   * List of all possible start/ending dates that classes can be offered between\n   * (e.g. `\"Aug 17, 2020 - Dec 10, 2020\"`)\n   */\n  dateRanges: string[];\n  /**\n   * List of the different types of classes for each time block\n   * (e.g. `\"Lecture*\"`, `\"Recitation*\"`, or `\"Internship/Practicum*\"`)\n   */\n  scheduleTypes: string[];\n  /**\n   * List of the different GT campus locations that a class could take place at\n   * (e.g. `\"Georgia Tech-Atlanta *\"` or `\"Online\"`)\n   */\n  campuses: string[];\n  /**\n   * List of other miscellaneous attributes that can be associated with a class\n   * (e.g. `\"Hybrid Course\"`, `\"Honors Program\"`, or `\"Capstone\"`)\n   */\n  attributes: string[];\n  /**\n   * List of the different kinds of grading schemes a course can have\n   */\n  gradeBases: string[];\n  /**\n   * List of the different building locations a class can be at\n   */\n  locations: Location[];\n}\n\n// Course type (imported as `CrawlerCourse`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains information about a single class\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerCourse = [\n  /**\n   * the full, human-readable name of the course (e.g. \"Accounting I\")\n   */\n  fullName: string,\n  /**\n   * a JSON object with information about each section of the course;\n   * the section IDs are the keys (`\"A\"`, `\"B\"`, `\"S2\"`, etc.)\n   */\n  sections: Record<string, CrawlerSection>,\n  /**\n     * a tree of prerequisite classes and the necessary grades in them\n     * (using boolean expressions in prefix order)\n     *\n     * @example\n     *\n     * ```json\n       [\n         \"and\",\n         [\n            \"or\",\n            {\"id\":\"CS 3510\", \"grade\":\"C\"},\n            {\"id\":\"CS 3511\", \"grade\":\"C\"}\n         ]\n       ]\n     * ```\n     */\n  // ! Type had `undefined` explicitly added to ensure we check when accessing\n  prerequisites: CrawlerPrerequisites | undefined,\n  /**\n   * Description pulled from Oscar\n   */\n  description: string | null\n];\n\n// TermData type (imported as `CrawlerTermData`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Primary JSON object returned by the API.\n * See https://github.com/GTBitsOfGood/gt-scheduler/issues/1#issuecomment-694326220\n * for more info on the shape\n */\nexport interface CrawlerTermData {\n  /**\n   * Contains information about each class;\n   * this makes up the vast bulk of the resultant JSON.\n   * The course IDs are the keys (`\"ACCT 2101\"`, `\"CS 2340\"`, etc.)\n   */\n  courses: Record<string, CrawlerCourse>;\n  /**\n   * Contains data shared by multiple class descriptions\n   */\n  caches: CrawlerCaches;\n  /**\n   * Contains the time this JSON file was retrieved\n   */\n  // ! Type changed to `string` since this is what the JSON will be\n  updatedAt: string;\n  /**\n   * Version number for the term data\n   */\n  version: number;\n}\n","import axios from 'axios';\n\nimport { Oscar, Section } from '.';\nimport {\n  CourseGpa,\n  CrawlerCourse,\n  CrawlerPrerequisites,\n  Period,\n} from '../types';\nimport {\n  hasConflictBetween,\n  isLab,\n  isLecture,\n  isAxiosNetworkError,\n} from '../utils';\nimport { ErrorWithFields, softError } from '../log';\n\ninterface SectionGroupMeeting {\n  days: string[];\n  period: Period | undefined;\n}\n\ninterface SectionGroup {\n  /**\n   * Equal to`JSON.stringify(this.sectionGroupMeetings)`\n   */\n  hash: string;\n  meetings: SectionGroupMeeting[];\n  sections: Section[];\n}\n\nexport default class Course {\n  id: string;\n\n  subject: string;\n\n  number: string;\n\n  title: string;\n\n  sections: Section[];\n\n  prereqs: CrawlerPrerequisites | undefined;\n\n  hasLab: boolean;\n\n  onlyLectures: Section[] | undefined;\n\n  onlyLabs: Section[] | undefined;\n\n  allInOnes: Section[] | undefined;\n\n  sectionGroups: Record<string, SectionGroup> | undefined;\n\n  term: string;\n\n  constructor(oscar: Oscar, courseId: string, data: CrawlerCourse) {\n    this.term = oscar.term;\n    const [title, sections, prereqs] = data;\n\n    this.id = courseId;\n    const [subject, number] = this.id.split(' ');\n    if (subject == null || number == null) {\n      throw new ErrorWithFields({\n        message: 'course ID could not be parsed',\n        fields: {\n          id: this.id,\n          subject,\n          number,\n          term: this.term,\n        },\n      });\n    }\n    this.subject = subject;\n    this.number = number;\n\n    this.title = title;\n    this.sections = Object.entries(sections).flatMap<Section>(\n      ([sectionId, sectionData]) => {\n        if (sectionData == null) return [];\n        try {\n          return [new Section(oscar, this, sectionId, sectionData)];\n        } catch (err) {\n          softError(\n            new ErrorWithFields({\n              message: 'could not construct Section bean',\n              source: err,\n              fields: {\n                courseId,\n                term: this.term,\n              },\n            })\n          );\n          return [];\n        }\n      }\n    );\n    this.prereqs = prereqs;\n\n    const onlyLectures = this.sections.filter(\n      (section) => isLecture(section) && !isLab(section)\n    );\n    const onlyLabs = this.sections.filter(\n      (section) => isLab(section) && !isLecture(section)\n    );\n    this.hasLab = !!onlyLectures.length && !!onlyLabs.length;\n    if (this.hasLab) {\n      for (const lecture of onlyLectures) {\n        lecture.associatedLabs = onlyLabs.filter((lab) =>\n          lab.id.startsWith(lecture.id)\n        );\n      }\n      for (const lab of onlyLabs) {\n        lab.associatedLectures = onlyLectures.filter((lecture) =>\n          lab.id.startsWith(lecture.id)\n        );\n      }\n      const lonelyLectures = onlyLectures.filter(\n        (lecture) => !lecture.associatedLabs.length\n      );\n      const lonelyLabs = onlyLabs.filter(\n        (lab) => !lab.associatedLectures.length\n      );\n      for (const lecture of lonelyLectures) {\n        lecture.associatedLabs = lonelyLabs.filter(\n          (lab) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      for (const lab of lonelyLabs) {\n        lab.associatedLectures = lonelyLectures.filter(\n          (lecture) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      this.onlyLectures = onlyLectures;\n      this.onlyLabs = onlyLabs;\n      this.allInOnes = this.sections.filter(\n        (section) => isLecture(section) && isLab(section)\n      );\n    } else {\n      this.sectionGroups = this.distinct(this.sections);\n    }\n  }\n\n  distinct(sections: Section[]): Record<string, SectionGroup> {\n    const groups: Record<string, SectionGroup> = {};\n    sections.forEach((section) => {\n      const sectionGroupMeetings = section.meetings.map<SectionGroupMeeting>(\n        ({ days, period }) => ({\n          days,\n          period,\n        })\n      );\n      const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n      const sectionGroup = groups[sectionGroupHash];\n      if (sectionGroup) {\n        sectionGroup.sections.push(section);\n      } else {\n        groups[sectionGroupHash] = {\n          hash: sectionGroupHash,\n          meetings: sectionGroupMeetings,\n          sections: [section],\n        };\n      }\n    });\n    return groups;\n  }\n\n  async fetchGpa(): Promise<CourseGpa> {\n    const base =\n      'https://c4citk6s9k.execute-api.us-east-1.amazonaws.com/test/data';\n    // We have to clean up the course ID before sending it to the API,\n    // since courses like CHEM 1212K should become CHEM 1212\n    const id = `${this.subject} ${this.number.replace(/\\D/g, '')}`;\n    const encodedCourse = encodeURIComponent(id);\n    const url = `${base}/course?courseID=${encodedCourse}`;\n\n    let responseData: CourseDetailsAPIResponse;\n    try {\n      responseData = (await axios.get<CourseDetailsAPIResponse>(url)).data;\n    } catch (err) {\n      // Ignore network errors\n      if (!isAxiosNetworkError(err)) {\n        softError(\n          new ErrorWithFields({\n            message: 'error fetching course details from Course Critique API',\n            source: err,\n            fields: {\n              baseId: this.id,\n              cleanedId: id,\n              url,\n              term: this.term,\n            },\n          })\n        );\n      }\n\n      return {};\n    }\n\n    // Extract the relevant fields from the response\n    // We catch (or even throw) errors here to defensively ensure that\n    // the data coming out of this function is safely typed\n    try {\n      const gpaMap: CourseGpa = {};\n\n      // Extract the course-wide average GPA\n      const rawAverageGpa = responseData.header[0].avg_gpa;\n      // If the field is null, then the course has no GPA information\n      if (rawAverageGpa === null) return {};\n      if (typeof rawAverageGpa !== 'number')\n        throw new ErrorWithFields({\n          message: `data at \".header[0].avg_gpa\" was not a number`,\n          fields: {\n            actual: rawAverageGpa,\n            term: this.term,\n          },\n        });\n      gpaMap.averageGpa = rawAverageGpa;\n\n      // Extract the GPA for each instructor\n      responseData.raw.forEach((instructorData, i) => {\n        // Extract the instructor's name\n        const rawInstructor = instructorData.instructor_name;\n        if (typeof rawInstructor !== 'string')\n          throw new ErrorWithFields({\n            message: `data at \".raw[idx].instructor_name\" was not a string`,\n            fields: {\n              idx: i,\n              actual: rawInstructor,\n              term: this.term,\n            },\n          });\n\n        // Extract the instructor's GPA\n        const instructorGpa = instructorData.GPA;\n        if (typeof instructorGpa !== 'number')\n          throw new ErrorWithFields({\n            message: `data at \".raw[idx].GPA\" was not a number`,\n            fields: {\n              idx: i,\n              actual: instructorGpa,\n              term: this.term,\n            },\n          });\n\n        // Normalize the instructor name from \"LN, FN\" to \"FN LN\"\n        let instructor = rawInstructor;\n        const nameSegments = instructor.split(', ');\n        if (nameSegments.length === 2) {\n          const [lastName, firstName] = nameSegments as [string, string];\n          instructor = `${firstName} ${lastName}`;\n        }\n\n        gpaMap[instructor] = instructorGpa;\n      });\n\n      return gpaMap;\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message:\n            'error extracting course GPA from Course Critique API response',\n          source: err,\n          fields: {\n            baseId: this.id,\n            cleanedId: id,\n            url,\n            term: this.term,\n          },\n        })\n      );\n      return {};\n    }\n  }\n}\n\n// Based on response for CS 6035 on 2021-08-28\n// from the Course Critique API.\n// Each field has `| unknown` added to ensure\n// that we narrow the type before using them.\ninterface CourseDetailsAPIResponse {\n  header: [\n    {\n      course_name: string | null | unknown;\n      description: string | null | unknown;\n      credits: number | null | unknown;\n      avg_gpa: number | null | unknown;\n      avg_a: number | null | unknown;\n      avg_b: number | null | unknown;\n      avg_c: number | null | unknown;\n      avg_d: number | null | unknown;\n      avg_f: number | null | unknown;\n      avg_w: number | null | unknown;\n      full_name: string | null | unknown;\n    }\n  ];\n  raw: Array<{\n    instructor_gt_username: string | unknown;\n    instructor_name: string | unknown;\n    link: string | unknown;\n    class_size_group: string | unknown;\n    GPA: number | unknown;\n    A: number | unknown;\n    B: number | unknown;\n    C: number | unknown;\n    D: number | unknown;\n    F: number | unknown;\n    W: number | unknown;\n    sections: number | unknown;\n  }>;\n}\n","import axios from 'axios';\nimport cheerio from 'cheerio';\n\nimport { unique } from '../utils';\nimport { DELIVERY_MODES, BACKEND_BASE_URL } from '../constants';\nimport Course from './Course';\nimport Oscar from './Oscar';\nimport { CrawlerMeeting, Meeting } from '../types';\n\nexport type Seating = [\n  seating:\n    | [] // Loading state\n    | [\n        // Loaded state\n        seatsCurrent: number,\n        seatsTotal: number,\n        waitlistCurrent: number,\n        waitlistTotal: number\n      ]\n    | string[], // Error state\n  fetchTime: number\n];\n\ntype SectionConstructionData = [\n  crn: string,\n  meetings: CrawlerMeeting[],\n  credits: number,\n  scheduleTypeIndex: number,\n  campusIndex: number,\n  attributeIndices: number[],\n  gradeBasisIndex: number\n];\n\nexport default class Section {\n  course: Course;\n\n  id: string;\n\n  crn: string;\n\n  seating: Seating;\n\n  credits: number;\n\n  scheduleType: string;\n\n  campus: string;\n\n  deliveryMode: string | undefined;\n\n  gradeBasis: string;\n\n  meetings: Meeting[];\n\n  instructors: string[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLabs: Section[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLectures: Section[];\n\n  term: string;\n\n  constructor(\n    oscar: Oscar,\n    course: Course,\n    sectionId: string,\n    data: SectionConstructionData\n  ) {\n    this.term = oscar.term;\n    const [\n      crn,\n      meetings,\n      credits,\n      scheduleTypeIndex,\n      campusIndex,\n      attributeIndices,\n      gradeBasisIndex,\n    ] = data;\n\n    this.course = course;\n    this.id = sectionId;\n    this.crn = crn;\n    this.seating = [[], 0];\n    this.credits = credits;\n    this.scheduleType = oscar.scheduleTypes[scheduleTypeIndex] ?? 'unknown';\n    this.campus = oscar.campuses[campusIndex] ?? 'unknown';\n\n    const attributes = attributeIndices\n      .map((attributeIndex) => oscar.attributes[attributeIndex])\n      .flatMap((attribute) => (attribute == null ? [] : [attribute]));\n    this.deliveryMode = attributes.find(\n      (attribute) => attribute in DELIVERY_MODES\n    );\n\n    this.gradeBasis = oscar.gradeBases[gradeBasisIndex] ?? 'unknown';\n    this.meetings = meetings.map<Meeting>(\n      ([\n        periodIndex,\n        days,\n        where,\n        locationIndex,\n        instructors,\n        dateRangeIndex,\n      ]) => ({\n        period: oscar.periods[periodIndex],\n        days: days === '&nbsp;' ? [] : days.split(''),\n        where,\n        location: oscar.locations[locationIndex] ?? null,\n        instructors: instructors.map((instructor) =>\n          instructor.replace(/ \\(P\\)$/, '')\n        ),\n        // We need some fallback here\n        dateRange: oscar.dateRanges[dateRangeIndex] ?? {\n          from: new Date(),\n          to: new Date(),\n        },\n      })\n    );\n    this.instructors = unique(\n      this.meetings\n        .map<string[]>(({ instructors }) => instructors)\n        .reduce((accum, instructors) => [...accum, ...instructors], [])\n    );\n\n    // These fields are initialized after construction\n    // inside `Course.constructor`\n    this.associatedLabs = [];\n    this.associatedLectures = [];\n  }\n\n  async fetchSeating(term: string): Promise<Seating> {\n    const prevDate = this.seating[1];\n    const currDate = Date.now();\n\n    if (currDate - prevDate > 300000) {\n      const url = `${BACKEND_BASE_URL}/proxy/class_section?term=${term}&crn=${this.crn}`;\n      return axios({\n        url,\n        method: 'get',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          'Content-Type': 'text/html',\n        },\n      })\n        .then((response) => {\n          const $ = cheerio.load(response.data);\n          const availabilityTable = $('.datadisplaytable .datadisplaytable');\n          const tableRow = availabilityTable.find('tr');\n\n          this.seating = [\n            [\n              parseInt(tableRow.eq(1).children('td').first().text(), 10),\n              parseInt(tableRow.eq(1).children('td').eq(1).text(), 10),\n              parseInt(tableRow.eq(2).children('td').first().text(), 10),\n              parseInt(tableRow.eq(2).children('td').eq(1).text(), 10),\n            ],\n            currDate,\n          ];\n\n          return this.seating;\n        })\n        .catch(() => [new Array(4).fill('N/A'), currDate]);\n    }\n    return this.seating;\n  }\n}\n","import { Combination } from '../types';\n\nexport default class SortingOption {\n  label: string;\n\n  calculateFactor: (combo: Combination) => number;\n\n  constructor(label: string, calculateFactor: (combo: Combination) => number) {\n    this.label = label;\n    this.calculateFactor = calculateFactor;\n  }\n}\n","import axios from 'axios';\n\nimport { BACKEND_BASE_URL } from '../constants';\n\nexport default async function FormSubmit({\n  rating,\n  feedback,\n}: {\n  rating: number;\n  feedback: string;\n}): Promise<void> {\n  const url = `${BACKEND_BASE_URL}/feedback`;\n  await axios({\n    method: 'post',\n    url,\n    data: {\n      rating,\n      feedback,\n    },\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n  });\n}\n","import { Course, Section, SortingOption } from '.';\nimport { hasConflictBetween, stringToTime } from '../utils';\nimport {\n  Combination,\n  Period,\n  DateRange,\n  Location,\n  CrawlerTermData,\n} from '../types';\nimport { ErrorWithFields, softError } from '../log';\n\n// `new Oscar(...)` gets the entirety of the crawler JSON data\ntype OscarConstructionDate = CrawlerTermData;\n\nexport default class Oscar {\n  periods: (Period | undefined)[];\n\n  dateRanges: DateRange[];\n\n  scheduleTypes: string[];\n\n  campuses: string[];\n\n  attributes: string[];\n\n  gradeBases: string[];\n\n  locations: (Location | null)[];\n\n  updatedAt: Date;\n\n  version: number;\n\n  courses: Course[];\n\n  courseMap: Record<string, Course>;\n\n  crnMap: Record<string, Section>;\n\n  sortingOptions: SortingOption[];\n\n  constructor(data: OscarConstructionDate, public term: string) {\n    const { courses, caches, updatedAt, version } = data;\n\n    this.periods = caches.periods.map((period, i) => {\n      if (period === 'TBA') {\n        return undefined;\n      }\n\n      const periodSegments = period.split(' - ');\n      if (periodSegments.length !== 2) {\n        softError(\n          new ErrorWithFields({\n            message: 'period did not follow expected format',\n            fields: {\n              period,\n              cacheIndex: i,\n              term: this.term,\n            },\n          })\n        );\n        return undefined;\n      }\n\n      const [start, end] = periodSegments as [string, string];\n      return {\n        start: stringToTime(start),\n        end: stringToTime(end),\n      };\n    });\n\n    this.dateRanges = caches.dateRanges.map((dateRange, i) => {\n      let segments = dateRange.split(' - ');\n      if (segments.length !== 2) {\n        softError(\n          new ErrorWithFields({\n            message: 'date range did not follow expected format',\n            fields: {\n              dateRange,\n              cacheIndex: i,\n              term: this.term,\n            },\n          })\n        );\n        // We need some fallback here\n        segments = ['Jan 1, 1970', 'Jan 2, 1970'];\n      }\n\n      const [from, to] = segments.map((v) => new Date(v)) as [Date, Date];\n      from.setHours(0);\n      to.setHours(23, 59, 59, 999);\n      return { from, to };\n    });\n\n    this.scheduleTypes = caches.scheduleTypes;\n    this.campuses = caches.campuses;\n    this.attributes = caches.attributes;\n    this.gradeBases = caches.gradeBases;\n    this.locations = caches.locations;\n    this.updatedAt = new Date(updatedAt);\n    this.version = version;\n\n    this.courses = Object.entries(courses).flatMap(([courseId, source]) => {\n      try {\n        return [new Course(this, courseId, source)];\n      } catch (err) {\n        softError(\n          new ErrorWithFields({\n            message: 'could not initialize Course bean',\n            fields: {\n              courseId,\n              source,\n              term: this.term,\n            },\n          })\n        );\n        return [];\n      }\n    });\n\n    this.courseMap = {};\n    this.crnMap = {};\n    this.courses.forEach((course) => {\n      this.courseMap[course.id] = course;\n      course.sections.forEach((section) => {\n        this.crnMap[section.crn] = section;\n      });\n    });\n\n    this.sortingOptions = [\n      new SortingOption('Most Compact', (combination) => {\n        const { startMap, endMap } = combination;\n        const diffs = Object.keys(startMap).map((day) => {\n          const end = endMap[day];\n          const start = startMap[day];\n          if (end == null || start == null) return 0;\n          return end - start;\n        });\n        const sum = diffs.reduce((tot, min) => tot + min, 0);\n        return +sum;\n      }),\n      new SortingOption('Earliest Ending', (combination) => {\n        const { endMap } = combination;\n        const ends = Object.values(endMap);\n        const sum = ends.reduce<number>((tot, end) => tot + (end ?? 0), 0);\n        const avg = sum / ends.length;\n        return +avg;\n      }),\n      new SortingOption('Latest Beginning', (combination) => {\n        const { startMap } = combination;\n        const starts = Object.values(startMap);\n        const sum = starts.reduce<number>((tot, min) => tot + (min ?? 0), 0);\n        const avg = sum / starts.length;\n        return -avg;\n      }),\n    ];\n  }\n\n  findCourse(courseId: string): Course | undefined {\n    return this.courseMap[courseId];\n  }\n\n  findSection(crn: string): Section | undefined {\n    return this.crnMap[crn];\n  }\n\n  getCombinations(\n    desiredCourses: string[],\n    pinnedCrns: string[],\n    excludedCrns: string[]\n  ): Combination[] {\n    const crnsList: string[][] = [];\n    const dfs = (courseIndex = 0, crns: string[] = []): void => {\n      if (courseIndex === desiredCourses.length) {\n        crnsList.push(crns);\n        return;\n      }\n      const courseId = desiredCourses[courseIndex];\n      if (courseId === undefined) return;\n      const course = this.findCourse(courseId);\n      if (course === undefined) return;\n      const isIncluded = (section: Section): boolean =>\n        !excludedCrns.includes(section.crn);\n      const isPinned = (section: Section): boolean =>\n        pinnedCrns.includes(section.crn);\n      const hasConflict = (section: Section): boolean =>\n        [...pinnedCrns, ...crns].some((crn) => {\n          const crnSection = this.findSection(crn);\n          if (crnSection === undefined) return false;\n          return hasConflictBetween(crnSection, section);\n        });\n      if (course.hasLab) {\n        // If a course has a lab, then `onlyLectures`, `onlyLabs`,\n        // and `allInOnes` should be non-undefined, but we have to check\n        // anyways here to satisfy TypeScript\n        const pinnedOnlyLecture = (course.onlyLectures ?? []).find(isPinned);\n        const pinnedOnlyLab = (course.onlyLabs ?? []).find(isPinned);\n        const pinnedAllInOne = (course.allInOnes ?? []).find(isPinned);\n        if ((pinnedOnlyLecture && pinnedOnlyLab) || pinnedAllInOne) {\n          dfs(courseIndex + 1, crns);\n        } else if (pinnedOnlyLecture) {\n          pinnedOnlyLecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n            if (hasConflict(lab)) return;\n            dfs(courseIndex + 1, [...crns, lab.crn]);\n          });\n        } else if (pinnedOnlyLab) {\n          pinnedOnlyLab.associatedLectures\n            .filter(isIncluded)\n            .forEach((lecture) => {\n              if (hasConflict(lecture)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn]);\n            });\n        } else {\n          (course.onlyLectures ?? []).filter(isIncluded).forEach((lecture) => {\n            if (hasConflict(lecture)) return;\n            lecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n              if (hasConflict(lab)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn, lab.crn]);\n            });\n          });\n          (course.allInOnes ?? []).filter(isIncluded).forEach((section) => {\n            if (hasConflict(section)) return;\n            dfs(courseIndex + 1, [...crns, section.crn]);\n          });\n        }\n      } else if (course.sections.some(isPinned)) {\n        dfs(courseIndex + 1, crns);\n      } else {\n        // If a course does not have a lab, then `sectionGroups` should be\n        // non-undefined, but we have to check anyways here to satisfy\n        // TypeScript\n        Object.values(course.sectionGroups ?? {}).forEach((sectionGroup) => {\n          if (sectionGroup == null) return;\n          const section = sectionGroup.sections.find(isIncluded);\n          if (!section || hasConflict(section)) return;\n          dfs(courseIndex + 1, [...crns, section.crn]);\n        });\n      }\n    };\n    dfs();\n    return crnsList.map((crns) => {\n      const startMap: Record<string, number> = {};\n      const endMap: Record<string, number> = {};\n      this.iterateTimeBlocks([...pinnedCrns, ...crns], (day, period) => {\n        if (period === undefined) return;\n        const end = endMap[day];\n        const start = startMap[day];\n        if (start == null || start > period.start) startMap[day] = period.start;\n        if (end == null || end < period.end) endMap[day] = period.end;\n      });\n      return {\n        crns,\n        startMap,\n        endMap,\n      };\n    });\n  }\n\n  sortCombinations(\n    combinations: Combination[],\n    sortingOptionIndex: number\n  ): Combination[] {\n    const sortingOption = this.sortingOptions[sortingOptionIndex];\n    if (sortingOption === undefined) {\n      throw new ErrorWithFields({\n        message: `sorting option index was out of bounds`,\n        fields: {\n          sortingOptionIndex,\n          actualSortingOptionsLength: this.sortingOptions.length,\n          term: this.term,\n        },\n      });\n    }\n\n    return combinations\n      .map((combination) => ({\n        ...combination,\n        factor: sortingOption.calculateFactor(combination),\n      }))\n      .sort((a, b) => a.factor - b.factor);\n  }\n\n  iterateTimeBlocks(\n    crns: string[],\n    callback: (day: string, period: Period | undefined) => void\n  ): void {\n    crns.forEach((crn) => {\n      const section = this.findSection(crn);\n      if (section !== undefined) {\n        section.meetings.forEach(\n          (meeting) =>\n            meeting.period &&\n            meeting.days.forEach((day) => {\n              callback(day, meeting.period);\n            })\n        );\n      }\n    });\n  }\n}\n\n/**\n * Create an empty instance of the Oscar bean\n * to use as the default context value\n */\nexport const EMPTY_OSCAR = new Oscar(\n  {\n    courses: {},\n    caches: {\n      periods: [],\n      dateRanges: [],\n      scheduleTypes: [],\n      campuses: [],\n      attributes: [],\n      gradeBases: [],\n      locations: [],\n    },\n    updatedAt: JSON.parse(JSON.stringify(new Date())) as string,\n    version: 1,\n  },\n  '197008'\n);\n","import React from 'react';\n\nimport { Theme, defaultTermData, TermData } from '../types';\nimport Oscar, { EMPTY_OSCAR } from '../beans/Oscar';\nimport { ErrorWithFields } from '../log';\n\ntype Setter<T> = (next: T) => void;\n\nexport type ThemeContextValue = [Theme, Setter<Theme>];\nexport const ThemeContext = React.createContext<ThemeContextValue>([\n  'light',\n  (next: Theme): void => {\n    throw new ErrorWithFields({\n      message: 'empty ThemeContext.setTheme value being used',\n      fields: {\n        next,\n      },\n    });\n  },\n]);\n\nexport type TermsContextValue = string[];\nexport const TermsContext = React.createContext<TermsContextValue>([]);\n\nexport type TermContextData = {\n  term: string;\n  oscar: Oscar;\n} & TermData;\nexport type TermContextSetters = {\n  setTerm: Setter<string>;\n  patchTermData: Setter<Partial<TermData>>;\n};\nexport type TermContextValue = [TermContextData, TermContextSetters];\nexport const TermContext = React.createContext<TermContextValue>([\n  {\n    term: '',\n    oscar: EMPTY_OSCAR,\n    ...defaultTermData,\n  },\n  {\n    setTerm: (next: string): void => {\n      throw new ErrorWithFields({\n        message: 'empty TermContext.setTerm value being used',\n        fields: {\n          next,\n        },\n      });\n    },\n    patchTermData: (patch: Partial<TermData>): void => {\n      throw new ErrorWithFields({\n        message: 'empty TermContext.patchTermData value being used',\n        fields: {\n          patch,\n        },\n      });\n    },\n  },\n]);\n\nexport type OverlayCrnsContextValue = [string[], Setter<string[]>];\nexport const OverlayCrnsContext = React.createContext<OverlayCrnsContextValue>([\n  [],\n  (next: string[]): void => {\n    throw new ErrorWithFields({\n      message: 'empty OverlayCrnsContext.setOverlayCrns value being used',\n      fields: {\n        next,\n      },\n    });\n  },\n]);\n","import React, { useContext } from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { classes, getContentClassName, periodToString } from '../../utils';\nimport { CLOSE, OPEN, DAYS } from '../../constants';\nimport { TermContext } from '../../contexts';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport interface TimeBlockPosition {\n  rowIndex: number;\n  rowSize: number;\n  period: Period;\n  crn: string;\n}\n\nexport type SizeInfo = Record<string, Record<string, TimeBlockPosition>>;\n\nexport type TimeBlocksProps = {\n  className?: string;\n  crn: string;\n  overlay?: boolean;\n  capture: boolean;\n  preview: boolean;\n  isAutosized: boolean;\n  sizeInfo: SizeInfo;\n};\n\nexport function makeSizeInfoKey(period: Period): string {\n  return [period.start, period.end].join('-');\n}\n\nexport default function TimeBlocks({\n  className,\n  crn,\n  overlay = false,\n  preview,\n  capture,\n  isAutosized,\n  sizeInfo,\n}: TimeBlocksProps): React.ReactElement | null {\n  const [{ oscar, colorMap }] = useContext(TermContext);\n\n  const section = oscar.findSection(crn);\n  if (section == null) return null;\n\n  const color = colorMap[section.course.id];\n  const contentClassName = getContentClassName(color);\n\n  return (\n    <div\n      className={classes(\n        'TimeBlocks',\n        capture && 'capture',\n        overlay && 'overlay',\n        className\n      )}\n    >\n      {section.meetings.map((meeting, i) => {\n        const { period } = meeting;\n        if (period == null) return;\n\n        const sizeInfoKey = makeSizeInfoKey(period);\n        return meeting.days.map((day) => {\n          const sizeInfoDay = sizeInfo[day];\n          if (sizeInfoDay == null) return;\n          const sizeInfoPeriodDay = sizeInfoDay[sizeInfoKey];\n          if (sizeInfoPeriodDay == null) return;\n\n          return (\n            <div\n              className={classes('meeting', contentClassName, 'default', day)}\n              key={[i, day].join('-')}\n              style={{\n                top: `${((period.start - OPEN) / (CLOSE - OPEN)) * 100}%`,\n                height: `${\n                  ((period.end - period.start) / (CLOSE - OPEN)) * 100\n                }%`,\n                width: `${20 / sizeInfoPeriodDay.rowSize}%`,\n                left: `${\n                  DAYS.indexOf(day) * 20 +\n                  sizeInfoPeriodDay.rowIndex * (20 / sizeInfoPeriodDay.rowSize)\n                }%`,\n                backgroundColor: color,\n              }}\n              data-tip\n              data-for={crn}\n            >\n              {!preview && (\n                <div className=\"meeting-wrapper\">\n                  <div className=\"ids\">\n                    <span className=\"course-id\">{section.course.id}</span>\n                    <span className=\"section-id\">&nbsp;{section.id}</span>\n                  </div>\n                  <span className=\"period\">{periodToString(period)}</span>\n                  <span className=\"where\">{meeting.where}</span>\n                  <span className=\"instructors\">\n                    {meeting.instructors.join(', ')}\n                  </span>\n                </div>\n              )}\n            </div>\n          );\n        });\n      })}\n\n      {!isAutosized && (\n        <ReactTooltip\n          id={crn}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"top\"\n          effect=\"solid\"\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Course Name</b>\n                </td>\n                <td>{section.course.title}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Delivery Type</b>\n                </td>\n                <td>{section.deliveryMode}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Course Number</b>\n                </td>\n                <td>{section.crn}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Credit Hours</b>\n                </td>\n                <td>{section.credits}</td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport { CLOSE, DAYS, OPEN } from '../../constants';\nimport { classes, timeToShortString } from '../../utils';\nimport { TimeBlocks } from '..';\nimport { TermContext } from '../../contexts';\nimport { makeSizeInfoKey, TimeBlockPosition } from '../TimeBlocks';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport type CalendarProps = {\n  className?: string;\n  overlayCrns: string[];\n  preview?: boolean;\n  capture?: boolean;\n  isAutosized?: boolean;\n};\n\nexport default function Calendar({\n  className,\n  overlayCrns,\n  preview = false,\n  capture = false,\n  isAutosized = false,\n}: CalendarProps): React.ReactElement {\n  const [{ pinnedCrns, oscar }] = useContext(TermContext);\n\n  // Contains the rowIndex's and rowSize's passed into each crn's TimeBlocks\n  // e.g. crnSizeInfo[crn][day][\"period.start-period.end\"].rowIndex\n  const crnSizeInfo: Record<\n    string,\n    Record<string, Record<string, TimeBlockPosition>>\n  > = {};\n\n  // Recursively sets the rowSize of all time blocks within the current\n  // connected grouping of blocks to the current block's rowSize\n  const updateJoinedRowSizes = (\n    periodInfos: TimeBlockPosition[],\n    seen: Set<string>,\n    curCrn: string,\n    curPeriod: Period,\n    newRowSize: number\n  ): void => {\n    if (seen.has(curCrn)) {\n      return;\n    }\n    seen.add(curCrn);\n\n    periodInfos\n      .filter(\n        (period2Info) =>\n          period2Info.period.start < curPeriod.end &&\n          period2Info.period.end > curPeriod.start\n      )\n      .forEach((period2Info) => {\n        period2Info.rowSize = newRowSize;\n        updateJoinedRowSizes(\n          periodInfos,\n          seen,\n          period2Info.crn,\n          period2Info.period,\n          newRowSize\n        );\n      });\n  };\n\n  const crns = Array.from(new Set([...pinnedCrns, ...(overlayCrns || [])]));\n  const maxMeetingLen = (crn: string): number => {\n    const section = oscar.findSection(crn);\n    if (section == null) return 0;\n    return Math.max(\n      ...section.meetings.flatMap(({ period }) => {\n        if (period == null) return [];\n        return [period.end - period.start];\n      })\n    );\n  };\n\n  crns.sort((a, b) => maxMeetingLen(a) - maxMeetingLen(b));\n\n  // Populates crnSizeInfo by iteratively finding the next time block's\n  // rowSize and rowIndex (1 more than greatest of already processed connected\n  // blocks), updating the processed connected blocks to match its rowSize\n  crns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n\n    section.meetings\n      .filter((m) => m.period)\n      .forEach((meeting) => {\n        const { period } = meeting;\n        if (period == null) return;\n\n        meeting.days.forEach((day) => {\n          const dayPeriodInfos = Object.values(crnSizeInfo)\n            .flatMap<TimeBlockPosition | undefined>((days) =>\n              days != null ? Object.values(days[day] ?? {}) : []\n            )\n            .flatMap<TimeBlockPosition>((info) => (info == null ? [] : [info]));\n\n          const curRowSize = dayPeriodInfos\n            .filter(\n              (period2Info) =>\n                period2Info.period.start < period.end &&\n                period2Info.period.end > period.start\n            )\n            .reduce(\n              (acc, period2Info) => Math.max(acc, period2Info.rowSize + 1),\n              1\n            );\n\n          updateJoinedRowSizes(\n            dayPeriodInfos,\n            new Set(),\n            crn,\n            period,\n            curRowSize\n          );\n\n          const courseSizeInfo = crnSizeInfo[crn] || {};\n          crnSizeInfo[crn] = courseSizeInfo;\n\n          const daySizeInfo = courseSizeInfo[day] || {};\n          courseSizeInfo[day] = daySizeInfo;\n\n          daySizeInfo[makeSizeInfoKey(period)] = {\n            period,\n            crn,\n            rowIndex: curRowSize - 1,\n            rowSize: curRowSize,\n          };\n        });\n      });\n  });\n\n  return (\n    <div\n      className={classes(\n        'Calendar',\n        capture && 'capture',\n        preview && 'preview',\n        className\n      )}\n    >\n      {!preview && (\n        <div className=\"times\">\n          {new Array((CLOSE - OPEN) / 60).fill(0).map((_, i) => {\n            const time = OPEN + i * 60;\n            return (\n              <div className=\"time\" key={time}>\n                <span className=\"label\">{timeToShortString(time)}</span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {!preview && (\n        <div className=\"days\">\n          {DAYS.map((day) => (\n            <div className=\"day\" key={day}>\n              <span className=\"label\">{day}</span>\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"meetings\">\n        {pinnedCrns.map((crn) => (\n          <TimeBlocks\n            key={crn}\n            crn={crn}\n            preview={preview}\n            capture={capture}\n            isAutosized={isAutosized}\n            sizeInfo={crnSizeInfo[crn] ?? {}}\n          />\n        ))}\n        {overlayCrns &&\n          overlayCrns\n            .filter((crn) => !pinnedCrns.includes(crn))\n            .map((crn) => (\n              <TimeBlocks\n                key={crn}\n                crn={crn}\n                overlay={!preview}\n                preview={preview}\n                capture={capture}\n                isAutosized\n                sizeInfo={crnSizeInfo[crn] ?? {}}\n              />\n            ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport { Button, Calendar, Select } from '..';\nimport { OverlayCrnsContext, TermContext } from '../../contexts';\nimport { Combination } from '../../types';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function CombinationContainer(): React.ReactElement {\n  const [\n    { oscar, desiredCourses, pinnedCrns, excludedCrns, sortingOptionIndex },\n    { patchTermData },\n  ] = useContext(TermContext);\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n\n  const handleResetPinnedCrns = useCallback(() => {\n    if (window.confirm('Are you sure to reset sections you selected?')) {\n      patchTermData({\n        pinnedCrns: [],\n      });\n    }\n  }, [patchTermData]);\n\n  const combinations = useMemo(\n    () => oscar.getCombinations(desiredCourses, pinnedCrns, excludedCrns),\n    [oscar, desiredCourses, pinnedCrns, excludedCrns]\n  );\n  const sortedCombinations = useMemo(\n    () => oscar.sortCombinations(combinations, sortingOptionIndex),\n    [oscar, combinations, sortingOptionIndex]\n  );\n\n  return (\n    <div className=\"CombinationContainer\">\n      <Select\n        onChange={(newSortingOptionIndex): void =>\n          patchTermData({ sortingOptionIndex: newSortingOptionIndex })\n        }\n        value={sortingOptionIndex}\n        options={oscar.sortingOptions.map((sortingOption, i) => ({\n          value: i,\n          label: sortingOption.label,\n        }))}\n      />\n      <Button\n        className=\"reset\"\n        onClick={handleResetPinnedCrns}\n        disabled={pinnedCrns.length === 0}\n      >\n        Reset Sections\n      </Button>\n      <div className=\"scroller\">\n        <AutoSizer>\n          {({ width, height }): React.ReactElement => (\n            <List\n              width={width}\n              height={height}\n              style={{ outline: 'none' }}\n              rowCount={sortedCombinations.length}\n              rowHeight={108}\n              rowRenderer={({ index, key, style }): React.ReactElement => {\n                const { crns } = sortedCombinations[index] as Combination;\n                return (\n                  <div className=\"list-item\" style={style} key={key}>\n                    <div\n                      className=\"combination\"\n                      onMouseEnter={(): void => setOverlayCrns(crns)}\n                      onMouseLeave={(): void => setOverlayCrns([])}\n                      onClick={(): void =>\n                        patchTermData({\n                          pinnedCrns: [...pinnedCrns, ...crns],\n                        })\n                      }\n                    >\n                      <div className=\"number\">{index + 1}</div>\n                      <Calendar\n                        className=\"calendar-preview\"\n                        overlayCrns={crns}\n                        isAutosized\n                        preview\n                      />\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faInfoCircle,\n  faShareAlt,\n  faPalette,\n  faPlus,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, getContentClassName } from '../../utils';\nimport { ActionRow, Instructor, Palette, Prerequisite } from '..';\nimport { TermContext } from '../../contexts';\nimport { Course as CourseBean, Section } from '../../beans';\nimport { CourseGpa, CrawlerPrerequisites } from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\n\nexport type CourseProps = {\n  className?: string;\n  courseId: string;\n  onAddCourse?: () => void;\n};\n\nexport default function Course({\n  className,\n  courseId,\n  onAddCourse,\n}: CourseProps): React.ReactElement | null {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [prereqOpen, setPrereqOpen] = useState<boolean>(false);\n  const [paletteShown, setPaletteShown] = useState<boolean>(false);\n  const [gpaMap, setGpaMap] = useState<CourseGpa | null>(null);\n  const isSearching = Boolean(onAddCourse);\n  const [\n    { oscar, term, desiredCourses, pinnedCrns, excludedCrns, colorMap },\n    { patchTermData },\n  ] = useContext(TermContext);\n\n  useEffect(() => {\n    if (!isSearching) {\n      const course = oscar.findCourse(courseId);\n      if (course == null) return;\n      course\n        .fetchGpa()\n        .then(setGpaMap)\n        .catch((err) => {\n          softError(\n            new ErrorWithFields({\n              message: 'error fetching course GPA',\n              source: err,\n              fields: {\n                courseId,\n                term: course.term,\n              },\n            })\n          );\n        });\n    }\n  }, [isSearching, oscar, courseId]);\n\n  const handleRemoveCourse = useCallback(\n    (course: CourseBean) => {\n      const newColorMap = { ...colorMap };\n      delete newColorMap[course.id];\n\n      patchTermData({\n        desiredCourses: desiredCourses.filter((id) => id !== course.id),\n        pinnedCrns: pinnedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        excludedCrns: excludedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        colorMap: newColorMap,\n      });\n    },\n    [desiredCourses, pinnedCrns, excludedCrns, colorMap, patchTermData]\n  );\n\n  const handleIncludeSections = useCallback(\n    (sections: Section[]) => {\n      const crns = sections.map((section) => section.crn);\n      patchTermData({\n        excludedCrns: excludedCrns.filter((crn) => !crns.includes(crn)),\n      });\n    },\n    [excludedCrns, patchTermData]\n  );\n\n  const course = oscar.findCourse(courseId);\n  if (course == null) return null;\n\n  const color = colorMap[course.id];\n  const contentClassName = color != null && getContentClassName(color);\n\n  const hasPrereqs = oscar.version > 1;\n  let prereqs: CrawlerPrerequisites | null = null;\n  if (hasPrereqs) {\n    prereqs = course.prereqs ?? [];\n  }\n\n  const instructorMap: Record<string, Section[] | undefined> = {};\n  course.sections.forEach((section) => {\n    const [primaryInstructor = 'Not Assigned'] = section.instructors;\n\n    const instructorSections = instructorMap[primaryInstructor] ?? [];\n    instructorSections.push(section);\n    instructorMap[primaryInstructor] = instructorSections;\n  });\n\n  const instructors = Object.keys(instructorMap);\n  const excludedInstructors = instructors.filter((instructor) => {\n    const sections = instructorMap[instructor];\n    if (sections == null) return false;\n    return sections.every((section) => excludedCrns.includes(section.crn));\n  });\n  const includedInstructors = instructors.filter(\n    (instructor) => !excludedInstructors.includes(instructor)\n  );\n\n  const prereqControl = (\n    nextPrereqOpen: boolean,\n    nextExpanded: boolean\n  ): void => {\n    setPrereqOpen(nextPrereqOpen);\n    setExpanded(nextExpanded);\n  };\n  const prereqAction = {\n    icon: faShareAlt,\n    styling: { transform: 'rotate(90deg)' },\n    onClick: (): void => {\n      prereqControl(true, !prereqOpen ? true : !expanded);\n    },\n  };\n\n  const infoAction = {\n    icon: faInfoCircle,\n    href:\n      `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n      `course_detail?cat_term_in=${term}&subj_code_in=` +\n      `${course.subject}&crse_numb_in=${course.number}`,\n  };\n\n  const pinnedSections = course.sections.filter((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n  const totalCredits = pinnedSections.reduce(\n    (credits, section) => credits + section.credits,\n    0\n  );\n\n  return (\n    <div\n      className={classes('Course', contentClassName, 'default', className)}\n      style={{ backgroundColor: color }}\n      key={course.id}\n    >\n      <ActionRow\n        label={[\n          course.id,\n          pinnedSections.map((section) => section.id).join(', '),\n        ].join(' ')}\n        actions={\n          isSearching\n            ? [\n                { icon: faPlus, onClick: onAddCourse },\n                hasPrereqs ? prereqAction : infoAction,\n              ]\n            : [\n                {\n                  icon: expanded ? faAngleUp : faAngleDown,\n                  onClick: (): void => prereqControl(false, !expanded),\n                },\n                hasPrereqs ? prereqAction : infoAction,\n                {\n                  icon: faPalette,\n                  onClick: (): void => setPaletteShown(!paletteShown),\n                },\n                {\n                  icon: faTrash,\n                  onClick: (): void => handleRemoveCourse(course),\n                },\n              ]\n        }\n      >\n        <div className=\"course-row\">\n          <span className=\"course-title\">{course.title}</span>\n          <span className=\"section-crns\">\n            {pinnedSections.map((section) => section.crn).join(', ')}\n          </span>\n        </div>\n        {!isSearching && (\n          <div className=\"course-row\">\n            <span className=\"gpa\">\n              Course GPA:{' '}\n              {gpaMap === null\n                ? 'Loading...'\n                : gpaMap.averageGpa\n                ? gpaMap.averageGpa.toFixed(2)\n                : 'N/A'}\n            </span>\n            {totalCredits > 0 && (\n              <span className=\"credits\">{totalCredits} Credits</span>\n            )}\n          </div>\n        )}\n        {paletteShown && (\n          <Palette\n            className=\"palette\"\n            onSelectColor={(col): void =>\n              patchTermData({ colorMap: { ...colorMap, [courseId]: col } })\n            }\n            color={color ?? null}\n            onMouseLeave={(): void => setPaletteShown(false)}\n          />\n        )}\n      </ActionRow>\n      {expanded && !prereqOpen && (\n        <div className={classes('hover-container', 'nested')}>\n          {includedInstructors.map((name) => {\n            let instructorGpa: number | undefined = 0;\n            if (gpaMap !== null) {\n              instructorGpa = gpaMap[name];\n            }\n            return (\n              <Instructor\n                key={name}\n                color={color}\n                name={name}\n                sections={instructorMap[name] ?? []}\n                gpa={\n                  gpaMap === null\n                    ? 'Loading...'\n                    : instructorGpa\n                    ? instructorGpa.toFixed(2)\n                    : 'N/A'\n                }\n              />\n            );\n          })}\n          {excludedInstructors.length > 0 && (\n            <div className=\"excluded-instructor-container\">\n              {excludedInstructors.map((name) => (\n                <span\n                  className=\"excluded-instructor\"\n                  key={name}\n                  onClick={(): void => {\n                    const instructorSections = instructorMap[name];\n                    if (instructorSections == null) return;\n                    handleIncludeSections(instructorSections);\n                  }}\n                >\n                  {name}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      {expanded && prereqOpen && prereqs !== null && (\n        <Prerequisite course={course} prereqs={prereqs} />\n      )}\n    </div>\n  );\n}\n","import React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { Course, CourseFilter } from '..';\nimport { classes, getRandomColor } from '../../utils';\nimport { ASYNC_DELIVERY_MODE, CAMPUSES, DELIVERY_MODES } from '../../constants';\nimport { TermContext } from '../../contexts';\nimport { Course as CourseBean, Section } from '../../beans';\n\nimport './stylesheet.scss';\n\nexport type CourseAddProps = {\n  className?: string;\n};\n\ntype SortKey = 'deliveryMode' | 'campus';\n\ntype SortFilter = {\n  [sortKey in SortKey]: string[];\n};\n\nfunction isSortKey(sortKey: string): sortKey is SortKey {\n  switch (sortKey) {\n    case 'deliveryMode':\n    case 'campus':\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction doesFilterMatchCourse(\n  course: CourseBean,\n  filter: SortFilter\n): boolean {\n  return Object.entries(filter).every(([key, tags]) => {\n    if (!isSortKey(key)) return true;\n\n    return (\n      tags.length === 0 ||\n      course.sections.some((section) => {\n        const sortValue = section[key];\n        if (sortValue == null) return false;\n\n        return tags.includes(sortValue);\n      })\n    );\n  });\n}\n\nfunction doesFilterMatchSection(section: Section, filter: SortFilter): boolean {\n  return Object.entries(filter).every(([key, tags]) => {\n    if (tags.length === 0) return true;\n    if (!isSortKey(key)) return true;\n\n    const sortValue = section[key];\n    if (sortValue == null) return false;\n\n    return tags.includes(sortValue);\n  });\n}\n\nexport default function CourseAdd({\n  className,\n}: CourseAddProps): React.ReactElement {\n  const [{ oscar, desiredCourses, excludedCrns, colorMap }, { patchTermData }] =\n    useContext(TermContext);\n  const [keyword, setKeyword] = useState('');\n  const [filter, setFilter] = useState<SortFilter>({\n    deliveryMode: [],\n    campus: [],\n  });\n  const [activeIndex, setActiveIndex] = useState(0);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleChangeKeyword = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      let input = e.target.value.trim();\n      const results = /^([A-Z]+)(\\d.*)$/i.exec(input);\n      if (results != null) {\n        const [, subject, number] = results as unknown as [\n          string,\n          string,\n          string\n        ];\n        input = `${subject} ${number}`;\n      }\n      setKeyword(input);\n    },\n    []\n  );\n\n  const courses = useMemo(() => {\n    const results = /^([A-Z]+) ?((\\d.*)?)$/i.exec(keyword.toUpperCase());\n    if (!results) {\n      return [];\n    }\n    const [, subject, number] = results as unknown as [string, string, string];\n\n    setActiveIndex(0);\n\n    return oscar.courses\n      .filter((course) => {\n        const keywordMatch =\n          course.subject === subject && course.number.startsWith(number);\n        const filterMatch = doesFilterMatchCourse(course, filter);\n        return keywordMatch && filterMatch;\n      })\n      .filter((course) => !desiredCourses.includes(course.id));\n  }, [oscar, keyword, filter, desiredCourses]);\n\n  const handleAddCourse = useCallback(\n    (course: CourseBean) => {\n      if (desiredCourses.includes(course.id)) return;\n      const toBeExcludedCrns = course.sections\n        .filter((section) => {\n          const timeDecided =\n            section.deliveryMode === ASYNC_DELIVERY_MODE ||\n            (section.meetings.length &&\n              section.meetings.every(\n                (meeting) => meeting.days.length && meeting.period\n              ));\n          const filterMatch = doesFilterMatchSection(section, filter);\n          return !timeDecided || !filterMatch;\n        })\n        .map((section) => section.crn);\n      patchTermData({\n        desiredCourses: [...desiredCourses, course.id],\n        excludedCrns: [...excludedCrns, ...toBeExcludedCrns],\n        colorMap: { ...colorMap, [course.id]: getRandomColor() },\n      });\n      setKeyword('');\n      inputRef.current?.focus();\n    },\n    [filter, desiredCourses, excludedCrns, colorMap, inputRef, patchTermData]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      switch (e.key) {\n        case 'Enter': {\n          const course = courses[activeIndex];\n          if (course != null) {\n            handleAddCourse(course);\n          }\n          break;\n        }\n        case 'ArrowDown':\n          setActiveIndex(Math.min(activeIndex + 1, courses.length - 1));\n          break;\n        case 'ArrowUp':\n          setActiveIndex(Math.max(activeIndex - 1, 0));\n          break;\n        default:\n          return;\n      }\n      e.preventDefault();\n    },\n    [courses, handleAddCourse, activeIndex]\n  );\n\n  const handleToggleFilter = useCallback(\n    (key: SortKey, tag: string) => {\n      const tags = filter[key];\n      setFilter({\n        ...filter,\n        [key]: tags.includes(tag)\n          ? tags.filter((v) => v !== tag)\n          : [...tags, tag],\n      });\n    },\n    [filter]\n  );\n\n  const handleResetFilter = useCallback(\n    (key) => {\n      setFilter({\n        ...filter,\n        [key]: [],\n      });\n    },\n    [filter]\n  );\n\n  const activeCourse = courses[activeIndex];\n\n  return (\n    <div className={classes('CourseAdd', className)}>\n      <div className=\"add\">\n        <div className=\"primary\">\n          <FontAwesomeIcon\n            className={classes('icon', courses.length > 0 && 'active')}\n            fixedWidth\n            icon={faPlus}\n          />\n          <div className=\"keyword-wrapper\">\n            {activeCourse && (\n              <div className={classes('keyword', 'autocomplete')}>\n                {activeCourse.id}\n              </div>\n            )}\n            <input\n              type=\"text\"\n              ref={inputRef}\n              value={keyword}\n              onChange={handleChangeKeyword}\n              className=\"keyword\"\n              placeholder=\"XX 0000\"\n              onKeyDown={handleKeyDown}\n            />\n          </div>\n        </div>\n        {[\n          ['Delivery Mode', 'deliveryMode', DELIVERY_MODES] as const,\n          ['Campus', 'campus', CAMPUSES] as const,\n        ].map(([name, property, labels]) => (\n          <CourseFilter\n            key={property}\n            name={name}\n            labels={labels}\n            selectedTags={filter[property]}\n            onReset={(): void => handleResetFilter(property)}\n            onToggle={(tag): void => handleToggleFilter(property, tag)}\n          />\n        ))}\n      </div>\n      {courses.length > 0 ? (\n        courses.map((course) => (\n          <Course\n            key={course.id}\n            className={classes(course === activeCourse && 'active')}\n            courseId={course.id}\n            onAddCourse={(): void => handleAddCourse(course)}\n          />\n        ))\n      ) : (\n        <div className=\"disclaimer\">\n          Disclaimer: GT Scheduler should be used as general reference only, and\n          users are solely responsible for ensuring any information including\n          registration restrictions.\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport ago from 's-ago';\n\nimport { Button, Course, CourseAdd } from '..';\nimport { TermContext } from '../../contexts';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function CourseContainer(): React.ReactElement {\n  const [{ oscar, desiredCourses }] = useContext(TermContext);\n\n  return (\n    <div className=\"CourseContainer\">\n      <div className=\"scroller\">\n        <div className=\"course-list\">\n          {desiredCourses.map((courseId) => {\n            return <Course courseId={courseId} key={courseId} />;\n          })}\n        </div>\n        <CourseAdd className=\"course-add\" />\n      </div>\n      <Button\n        className=\"updated-at\"\n        href=\"https://github.com/gt-scheduler/crawler\"\n      >\n        Course data fetched {ago(oscar.updatedAt)}\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes, humanizeArrayReact } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type CourseFilterProps = {\n  name: string;\n  labels: Record<string, string>;\n  selectedTags: string[];\n  onReset: () => void;\n  onToggle: (tag: string) => void;\n};\n\nexport default function CourseFilter({\n  name,\n  labels,\n  selectedTags,\n  onReset,\n  onToggle,\n}: CourseFilterProps): React.ReactElement {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"CourseFilter\">\n      <div\n        className={classes('header', selectedTags.length > 0 && 'active')}\n        onClick={(): void => setExpanded(!expanded)}\n      >\n        {!expanded && selectedTags.length > 0 ? (\n          <div className=\"name\">\n            {humanizeArrayReact(\n              selectedTags.flatMap<string>((tag) => {\n                const selectedTag = labels[tag];\n                return selectedTag != null ? [selectedTag] : [];\n              }),\n              <span className=\"or\">or</span>\n            )}\n          </div>\n        ) : (\n          <div className=\"name\">{name}</div>\n        )}\n        <FontAwesomeIcon fixedWidth icon={expanded ? faAngleUp : faAngleDown} />\n      </div>\n      {expanded && (\n        <div className=\"tag-container\">\n          <div\n            className={classes('tag', selectedTags.length === 0 && 'active')}\n            onClick={onReset}\n          >\n            All\n          </div>\n          {Object.keys(labels).map((tag) => (\n            <div\n              key={tag}\n              className={classes('tag', selectedTags.includes(tag) && 'active')}\n              property={tag}\n              onClick={(): void => onToggle(tag)}\n            >\n              {labels[tag]}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport Cookies from 'js-cookie';\n\n/**\n * Gets the latest value of a cookie,\n * providing a callback that updates the state (causing a re-render)\n * and persists the new value to the cookie.\n * Does not support `key` changing between calls to `useCookie`\n * without the parent context unmounting & remounting.\n */\nexport default function useCookie(\n  key: string,\n  defaultValue: string\n): [string, (next: string) => void] {\n  const [value, setValue] = useState<string>(() => {\n    const val = Cookies.get(key);\n    if (val !== undefined) return val;\n\n    // Use the default value, persisting it to cookies\n    Cookies.set(key, defaultValue, { expires: 1460 });\n    return defaultValue;\n  });\n\n  const setCookieValue = useCallback(\n    (val) => {\n      setValue(val);\n      Cookies.set(key, val, { expires: 1460 });\n    },\n    [key, setValue]\n  );\n\n  return [value, setCookieValue];\n}\n","import { useState, useEffect } from 'react';\n\nimport { isMobile } from '../utils';\n\n/**\n * Subscribes to resize events on the page\n *\n * ? Would this be better to subscribe to a media query ?\n */\nexport default function useMobile(): boolean {\n  const [mobile, setMobile] = useState(isMobile());\n  useEffect(() => {\n    const handleResize = (): void => {\n      const newMobile = isMobile();\n      if (mobile !== newMobile) {\n        setMobile(newMobile);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return (): void => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [mobile]);\n\n  return mobile;\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type SpinnerProps = {\n  style?: React.CSSProperties;\n  className?: string;\n  size?: 'small' | 'normal' | number;\n};\n\n/**\n * Shows a simple circular spinner with a configurable size,\n * designed to indicate loading.\n */\nexport default function Spinner({\n  style,\n  className,\n  size = 'normal',\n}: SpinnerProps): React.ReactElement {\n  const actualSize =\n    typeof size === 'number'\n      ? size\n      : {\n          small: 16,\n          normal: 40,\n        }[size];\n  return (\n    <svg\n      className={classes('spinner', className)}\n      style={\n        {\n          ...style,\n          '--size': `${actualSize}px`,\n        } as React.CSSProperties\n      }\n      viewBox=\"0 0 50 50\"\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" />\n    </svg>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\n\nimport { classes } from '../../utils';\nimport { Button } from '..';\nimport Spinner from '../Spinner';\n\nimport './stylesheet.scss';\n\nexport type SelectProps<V extends string | number> = {\n  className?: string;\n  value: V;\n  onChange: (newValue: V) => void;\n  options: SelectOption<V>[];\n};\n\nexport type SelectOption<V> = {\n  value: V;\n  label: React.ReactNode;\n};\n\nexport default function Select<V extends string | number>({\n  className,\n  value,\n  onChange,\n  options,\n}: SelectProps<V>): React.ReactElement {\n  const [opened, setOpened] = useState(false);\n\n  const selectedOption = options.find((option) => option.value === value);\n  const label = selectedOption ? selectedOption.label : '-';\n\n  return (\n    <div\n      className={classes('Button', 'Select', className)}\n      onClick={(): void => setOpened(!opened)}\n    >\n      <div className=\"text\">{label}</div>\n      <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n      {opened && (\n        <div className=\"intercept\" onClick={(): void => setOpened(false)} />\n      )}\n      {opened && (\n        <div className=\"option-container\">\n          {options.map(({ value: optionValue, label: optionLabel }) => (\n            <Button\n              className=\"option\"\n              key={optionValue}\n              onClick={(): void => onChange(optionValue)}\n            >\n              {optionLabel}\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport type LoadingSelectProps = {\n  className?: string;\n  label?: string;\n};\n\nexport function LoadingSelect({\n  className,\n  label = 'Loading',\n}: LoadingSelectProps): React.ReactElement {\n  return (\n    <div className={classes('Button', 'Select', className, 'disabled')}>\n      <Spinner size=\"small\" style={{ marginRight: 12 }} />\n      <div className=\"text\">{label}</div>\n      <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAdjust,\n  faBars,\n  faCalendarAlt,\n  faDownload,\n  faPaste,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport Cookies from 'js-cookie';\nimport ReactTooltip from 'react-tooltip';\n\nimport { getSemesterName } from '../../utils';\nimport { Button, Select, Tab } from '..';\nimport { useMobile } from '../../hooks';\nimport { ThemeContext } from '../../contexts';\nimport { LoadingSelect } from '../Select';\nimport Spinner from '../Spinner';\n\nimport './stylesheet.scss';\n\nexport type HeaderDisplayProps = {\n  totalCredits?: number | null;\n  currentTab: number;\n  onChangeTab: (newTab: number) => void;\n  onToggleMenu: () => void;\n  tabs: string[];\n  onCopyCrns?: () => void;\n  enableCopyCrns?: boolean;\n  onExportCalendar?: () => void;\n  enableExportCalendar?: boolean;\n  onDownloadCalendar?: () => void;\n  enableDownloadCalendar?: boolean;\n  termsState:\n    | { type: 'loading' }\n    | {\n        type: 'loaded';\n        terms: string[];\n        currentTerm: string;\n        onChangeTerm: (next: string) => void;\n      };\n};\n\n/**\n * Renders the top header component as a simple display component,\n * letting any substantive state be passed in as props.\n * See `<Header>` for the full implementation that owns the header state.\n * This is safe to render without `TermContext` or `TermsContext` being present.\n */\nexport default function HeaderDisplay({\n  totalCredits = null,\n  currentTab,\n  onChangeTab,\n  onToggleMenu,\n  tabs,\n  onCopyCrns = (): void => undefined,\n  enableCopyCrns = false,\n  onExportCalendar = (): void => undefined,\n  enableExportCalendar = false,\n  onDownloadCalendar = (): void => undefined,\n  enableDownloadCalendar = false,\n  termsState,\n}: HeaderDisplayProps): React.ReactElement {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  const handleThemeChange = useCallback(() => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    Cookies.set('theme', newTheme, { expires: 1460 });\n    setTheme(newTheme);\n  }, [theme, setTheme]);\n\n  // Obtain a ref to the copy button to only close its tooltip\n  const crnButton = useRef<HTMLDivElement>(null);\n\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = useMobile();\n  return (\n    <div className=\"Header\">\n      {/* Menu button, only displayed on mobile */}\n      {mobile && (\n        <Button className=\"nav-menu-button\" onClick={onToggleMenu}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faBars} />\n        </Button>\n      )}\n\n      {/* Left-aligned logo */}\n      <Button className=\"logo\">\n        <span className=\"gt\">GT </span>\n        <span className=\"scheduler\">Scheduler</span>\n      </Button>\n\n      {/* Term selector */}\n      {termsState.type === 'loaded' ? (\n        <Select\n          onChange={termsState.onChangeTerm}\n          value={termsState.currentTerm}\n          options={termsState.terms.map((currentTerm) => ({\n            value: currentTerm,\n            label: getSemesterName(currentTerm),\n          }))}\n          className=\"semester\"\n        />\n      ) : (\n        <LoadingSelect />\n      )}\n\n      <span className=\"credits\">\n        {totalCredits === null ? (\n          <Spinner size=\"small\" style={{ marginRight: 8 }} />\n        ) : (\n          totalCredits\n        )}{' '}\n        Credits\n      </span>\n\n      {/* Include middle-aligned tabs on desktop */}\n      {!mobile && (\n        <div className=\"tabs\">\n          {tabs.map((tabLabel, tabIdx) => (\n            <Tab\n              key={tabIdx}\n              active={tabIdx === currentTab}\n              onClick={(): void => onChangeTab(tabIdx)}\n              label={tabLabel}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Action bar */}\n      <div className=\"menu\">\n        <Button onClick={onDownloadCalendar} disabled={!enableDownloadCalendar}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faDownload} />\n          <div className=\"text\">Download</div>\n        </Button>\n        <Button onClick={onExportCalendar} disabled={!enableExportCalendar}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faCalendarAlt} />\n          <div className=\"text\">Export</div>\n        </Button>\n\n        {/* Include separate button and tooltip component\n              with manually controlled closing logic */}\n        <div\n          className=\"menu\"\n          data-tip\n          data-for=\"copy-crn\"\n          delay-hide=\"1000\"\n          ref={crnButton}\n        >\n          <Button disabled={!enableCopyCrns}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faPaste} />\n            <div className=\"text\">CRNs</div>\n          </Button>\n        </div>\n        {enableCopyCrns && (\n          <ReactTooltip\n            id=\"copy-crn\"\n            type=\"dark\"\n            place=\"bottom\"\n            effect=\"solid\"\n            event=\"click\"\n            delayHide={1000}\n            afterShow={(): void => {\n              onCopyCrns();\n              setTimeout(\n                () => ReactTooltip.hide(crnButton.current ?? undefined),\n                1000\n              );\n            }}\n          >\n            Copied to clipboard!\n          </ReactTooltip>\n        )}\n\n        <Button onClick={handleThemeChange}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faAdjust} />\n          <div className=\"text\">Theme</div>\n        </Button>\n        <Button href=\"https://github.com/gt-scheduler/website\">\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faGithub} />\n          <div className=\"text\">GitHub</div>\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport { downloadShadowCalendar, exportCoursesToCalendar } from '../../utils';\nimport { Calendar } from '..';\nimport { TermContext, TermsContext, ThemeContext } from '../../contexts';\nimport { ErrorWithFields, softError } from '../../log';\nimport HeaderDisplay from '../HeaderDisplay';\n\nimport './stylesheet.scss';\n\nexport type HeaderProps = {\n  currentTab: number;\n  onChangeTab: (newTab: number) => void;\n  onToggleMenu: () => void;\n  tabs: string[];\n};\n\n/**\n * Renders the top header component with all state/interactivity,\n * and includes controls for top-level tab-based navigation.\n * Acts as a wrapper around `<HeaderDisplay>` that provides all props.\n */\nexport default function Header({\n  currentTab,\n  onChangeTab,\n  onToggleMenu,\n  tabs,\n}: HeaderProps): React.ReactElement {\n  const [{ term, oscar, pinnedCrns }, { setTerm }] = useContext(TermContext);\n  const terms = useContext(TermsContext);\n  const [theme] = useContext(ThemeContext);\n  const captureRef = useRef<HTMLDivElement>(null);\n\n  const totalCredits = useMemo(() => {\n    return pinnedCrns.reduce((credits, crn) => {\n      const crnSection = oscar.findSection(crn);\n      return credits + (crnSection != null ? crnSection.credits : 0);\n    }, 0);\n  }, [pinnedCrns, oscar]);\n\n  const handleExport = useCallback(() => {\n    try {\n      exportCoursesToCalendar(oscar, pinnedCrns);\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'exporting courses to calendar failed',\n          fields: {\n            pinnedCrns,\n            term: oscar.term,\n          },\n        })\n      );\n    }\n  }, [oscar, pinnedCrns]);\n\n  const handleDownload = useCallback(() => {\n    const captureElement = captureRef.current;\n    if (captureElement == null) return;\n    try {\n      downloadShadowCalendar(captureElement, theme);\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'downloading shadow calendar as PNG failed',\n          fields: {\n            pinnedCrns,\n            theme,\n            term: oscar.term,\n          },\n        })\n      );\n    }\n  }, [captureRef, theme, pinnedCrns, oscar.term]);\n\n  const handleCopyCrns = useCallback(() => {\n    try {\n      copy(pinnedCrns.join(', '));\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'copying CRNs to clipboard failed',\n          fields: {\n            pinnedCrns,\n            term: oscar.term,\n          },\n        })\n      );\n    }\n  }, [pinnedCrns, oscar.term]);\n\n  return (\n    <>\n      <HeaderDisplay\n        totalCredits={totalCredits}\n        currentTab={currentTab}\n        onChangeTab={onChangeTab}\n        onToggleMenu={onToggleMenu}\n        tabs={tabs}\n        onCopyCrns={handleCopyCrns}\n        enableCopyCrns={pinnedCrns.length > 0}\n        onExportCalendar={handleExport}\n        enableExportCalendar={pinnedCrns.length > 0}\n        onDownloadCalendar={handleDownload}\n        enableDownloadCalendar={pinnedCrns.length > 0}\n        termsState={{\n          type: 'loaded',\n          terms,\n          currentTerm: term,\n          onChangeTerm: setTerm,\n        }}\n      />\n\n      {/* Fake calendar used to capture screenshots */}\n      <div className=\"capture-container\" ref={captureRef}>\n        <Calendar className=\"fake-calendar\" capture overlayCrns={[]} />\n      </div>\n    </>\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faBan,\n  faGraduationCap,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, simplifyName, unique } from '../../utils';\nimport { Section as SectionBean } from '../../beans';\nimport { ActionRow, Section } from '..';\nimport { TermContext } from '../../contexts';\n\nimport './stylesheet.scss';\n\nexport type InstructorProps = {\n  className?: string;\n  color: string | undefined;\n  name: string;\n  sections: SectionBean[];\n  gpa: string;\n};\n\nexport default function Instructor({\n  className,\n  color,\n  name,\n  sections,\n  gpa,\n}: InstructorProps): React.ReactElement {\n  const [{ pinnedCrns, excludedCrns }, { patchTermData }] =\n    useContext(TermContext);\n  const [expanded, setExpanded] = useState(true);\n\n  const includeSection = useCallback(\n    (section: SectionBean) => {\n      patchTermData({\n        excludedCrns: excludedCrns.filter((crn) => crn !== section.crn),\n      });\n    },\n    [excludedCrns, patchTermData]\n  );\n\n  const excludeSections = useCallback(\n    (sectionList: SectionBean[]) => {\n      const crns = sectionList.map((section) => section.crn);\n      patchTermData({\n        excludedCrns: unique([...excludedCrns, ...crns]),\n        pinnedCrns: pinnedCrns.filter((crn) => !crns.includes(crn)),\n      });\n    },\n    [excludedCrns, pinnedCrns, patchTermData]\n  );\n\n  const instructorPinned = sections.some((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n\n  const includedSections = sections.filter(\n    (section) => !excludedCrns.includes(section.crn)\n  );\n  const excludedSections = sections.filter((section) =>\n    excludedCrns.includes(section.crn)\n  );\n\n  const excludeTooltipId = `exclude-instructor-${name.replace(' ', '-')}`;\n  return (\n    <div\n      className={classes(\n        'Instructor',\n        !expanded && 'divider-bottom',\n        className\n      )}\n    >\n      <ActionRow\n        label={name || 'Not Assigned'}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: (): void => setExpanded(!expanded),\n          },\n          !['TBA', 'Not Assigned'].includes(name)\n            ? {\n                icon: faGraduationCap,\n                href: `http://www.ratemyprofessors.com/search.jsp?queryBy=teacherName&schoolName=Georgia+Institute+of+Technology&query=${encodeURIComponent(\n                  simplifyName(name)\n                )}`,\n              }\n            : null,\n          {\n            icon: faBan,\n            dataTip: true,\n            dataFor: excludeTooltipId,\n            onClick: (): void => excludeSections(sections),\n          },\n        ]}\n        style={instructorPinned ? { backgroundColor: color } : undefined}\n      >\n        <div className=\"instructor-row\">\n          <span className=\"gpa\">Instructor GPA: {gpa || 'N/A'}</span>\n        </div>\n      </ActionRow>\n      <ReactTooltip\n        id={excludeTooltipId}\n        type=\"dark\"\n        place=\"bottom\"\n        effect=\"solid\"\n      >\n        Exclude from Combinations\n      </ReactTooltip>\n      {expanded && (\n        <div className={classes('section-container', 'nested')}>\n          {includedSections.map((section) => {\n            const pinned = pinnedCrns.includes(section.crn);\n            return (\n              <Section\n                key={section.id}\n                className=\"divider-bottom\"\n                section={section}\n                color={color}\n                pinned={pinned}\n              />\n            );\n          })}\n          {excludedSections.length > 0 && (\n            <div className=\"excluded-section-container\">\n              {excludedSections.map((section) => (\n                <span\n                  className=\"excluded-section\"\n                  key={section.id}\n                  onClick={(): void => includeSection(section)}\n                >\n                  {section.id}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl';\nimport { ViewState } from 'react-map-gl/src/mapbox/mapbox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin } from '@fortawesome/free-solid-svg-icons';\n\nimport { Location } from '../../types';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './stylesheet.scss';\n\nexport type MapLocation = {\n  section: string;\n  id: string;\n  coords: Location | null;\n};\n\nexport type MapViewProps = {\n  locations: MapLocation[];\n};\n\nexport default function MapView({\n  locations,\n}: MapViewProps): React.ReactElement {\n  // These initial coordinates start the map looking at the GT Atlanta campus\n  const [viewState, setViewState] = useState<ViewState>({\n    latitude: 33.7765,\n    longitude: -84.3963,\n    zoom: 15,\n  });\n\n  const unknown: MapLocation[] = [];\n  const coordsToLocationsMap = new Map<Location, MapLocation[]>();\n  locations.forEach((location) => {\n    if (location.coords === null) {\n      unknown.push(location);\n    } else if (coordsToLocationsMap.has(location.coords)) {\n      coordsToLocationsMap.get(location.coords)?.push(location);\n    } else {\n      coordsToLocationsMap.set(location.coords, [location]);\n    }\n  });\n\n  return (\n    <div className=\"mapbox\">\n      <ReactMapGL\n        height=\"100%\"\n        width=\"100%\"\n        viewState={viewState}\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\n        mapboxApiAccessToken={process.env['REACT_APP_MAPBOX_TOKEN'] ?? ''}\n        onViewStateChange={({\n          viewState: newViewState,\n        }: {\n          viewState: ViewState;\n        }): void => setViewState(newViewState)}\n      >\n        {Array.from(coordsToLocationsMap.entries()).map(\n          ([coords, coordLocations], i) => (\n            <Marker key={i} latitude={coords.lat} longitude={coords.long}>\n              <FontAwesomeIcon icon={faMapPin} className=\"pin-icon\" />\n              <div className=\"pin-text\">\n                {coordLocations.map((coordLocation) => (\n                  <div key={coordLocation.id + coordLocation.section}>\n                    {coordLocation.id} {coordLocation.section}\n                  </div>\n                ))}\n              </div>\n            </Marker>\n          )\n        )}\n        {unknown.length > 0 && (\n          <div className=\"unknown-container\">\n            <b>Undetermined</b>\n            {unknown.map((location, i) => (\n              <div className=\"class\" key={i}>\n                {location.id} {location.section}\n              </div>\n            ))}\n          </div>\n        )}\n        <div className=\"navigation\">\n          <NavigationControl showZoom showCompass />\n        </div>\n      </ReactMapGL>\n    </div>\n  );\n}\n","import React from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { ActionRow } from '..';\nimport { classes, getContentClassName } from '../../utils';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport type Day = 'M' | 'T' | 'W' | 'R' | 'F';\n\nexport function isDay(rawDay: string): rawDay is Day {\n  switch (rawDay) {\n    case 'M':\n    case 'T':\n    case 'W':\n    case 'R':\n    case 'F':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport interface CourseDateItem {\n  id: string;\n  title: string;\n  times: Period | undefined;\n  daysOfWeek: string[];\n}\n\nexport type DaySelectionProps = {\n  courseDateMap: Record<Day, CourseDateItem[]>;\n  activeDay: Day | '';\n  setActiveDay: (next: Day | '') => void;\n};\n\nexport default function DaySelection({\n  courseDateMap,\n  activeDay,\n  setActiveDay,\n}: DaySelectionProps): React.ReactElement {\n  const colorPalette = ['#FCB9AA', '#FFDBCC', '#ECEAE4', '#A2E1DB', '#55CBCD'];\n  const daysOfTheWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n  ];\n\n  const formatTime = (time: number): string => {\n    if (Math.floor(time / 60) >= 12) {\n      const adjustedHour = Math.floor(time / 60) % 12;\n      const hour = adjustedHour === 0 ? '12' : adjustedHour;\n      const minute = String(time % 60).padStart(2, '0');\n      return `${hour}:${minute}pm`;\n    }\n\n    const hour = Math.floor(time / 60);\n    const minute = String(time % 60).padStart(2, '0');\n    return `${hour}:${minute}am`;\n  };\n\n  return (\n    <div className=\"date-container\">\n      {Object.keys(courseDateMap).map((date, i) => {\n        if (!isDay(date)) return null;\n        const courses = courseDateMap[date];\n        return (\n          <div\n            key={date}\n            className={classes(\n              'date',\n              getContentClassName(colorPalette[i]),\n              'default'\n            )}\n            style={{ backgroundColor: colorPalette[i] }}\n          >\n            <ActionRow\n              label={daysOfTheWeek[i] ?? ''}\n              className=\"day-select\"\n              actions={[\n                {\n                  icon: date === activeDay ? faAngleUp : faAngleDown,\n                  onClick: (): void =>\n                    date !== activeDay ? setActiveDay(date) : setActiveDay(''),\n                },\n              ]}\n            />\n            {activeDay === date && (\n              <div className=\"dropdown-content\">\n                {courses == null || courses.length === 0 ? (\n                  <div className=\"course-content\" style={{ padding: 8 }}>\n                    No classes this day!\n                  </div>\n                ) : (\n                  courses.map((course) => {\n                    let timeLabel = 'TBA';\n                    const { times } = course;\n                    if (times != null) {\n                      const { start, end } = times;\n                      timeLabel = `${formatTime(start)} - ${formatTime(end)}`;\n                    }\n\n                    return (\n                      <div className=\"course-content\" key={course.id}>\n                        <div className=\"course-id\">{course.id}</div>\n                        <span className=\"course-row\">{course.title}</span>\n                        <span className=\"course-row\">\n                          {course.daysOfWeek} {timeLabel}\n                        </span>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\n\nimport MapView, { MapLocation } from '../MapView';\nimport { TermContext } from '../../contexts';\nimport DaySelection, { CourseDateItem, Day, isDay } from '../DaySelection';\nimport { Meeting } from '../../types';\n\nimport './stylesheet.scss';\n\n// Construct combined course data\n// to pass to `<MapView>` and `<DaySelection>`\ntype CombinedCourseData = CourseDateItem & MapLocation;\n\nexport default function Map(): React.ReactElement {\n  const [{ oscar, pinnedCrns }] = useContext(TermContext);\n  const [activeDay, setActiveDay] = useState<Day | ''>('M');\n  const courseDateMap: Record<Day, CombinedCourseData[]> = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: [],\n  };\n\n  // Construct the course data for the first meeting of each class\n  pinnedCrns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n    const { meetings } = section;\n    if (meetings.length === 0) return;\n    const firstMeeting = meetings[0] as Meeting;\n\n    firstMeeting.days.forEach((day) => {\n      if (!isDay(day)) return;\n      const courses = courseDateMap[day] ?? [];\n      courses.push({\n        id: section.course.id,\n        title: section.course.title,\n        times: firstMeeting.period,\n        daysOfWeek: firstMeeting.days,\n        section: section.id,\n        coords: firstMeeting.location,\n      });\n      courseDateMap[day] = courses;\n    });\n  });\n\n  // Sort each list of course data by their times\n  const sortedCourseDateMap: Record<Day, CombinedCourseData[]> = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: [],\n  };\n  Object.entries(courseDateMap).forEach(([day, courseDataList]) => {\n    if (!isDay(day)) return;\n    sortedCourseDateMap[day] = courseDataList.sort(\n      (a, b) => (a.times?.start ?? 0) - (b.times?.start ?? 0)\n    );\n  });\n\n  let activeLocations: MapLocation[] = [];\n  if (activeDay !== '') {\n    activeLocations = sortedCourseDateMap[activeDay];\n  }\n\n  return (\n    <div className=\"map-content\">\n      <DaySelection\n        courseDateMap={sortedCourseDateMap}\n        activeDay={activeDay}\n        setActiveDay={setActiveDay}\n      />\n      <MapView locations={activeLocations} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils';\nimport { Button } from '..';\n\nimport './stylesheet.scss';\n\nexport type NavDrawerProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\n\n/**\n * Renders a nav drawer and the overlay when it is open\n */\nexport default function NavDrawer({\n  open,\n  onClose,\n  children,\n}: NavDrawerProps): React.ReactElement {\n  return (\n    <>\n      <div\n        className={classes('drawer-overlay', open && 'open')}\n        tabIndex={-1}\n        onClick={onClose}\n        role=\"presentation\"\n      />\n      <div className={classes('drawer-outer', open && 'open')}>\n        <div className=\"drawer-header\">\n          <Button className=\"drawer-close\" onClick={onClose}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faTimes} />\n          </Button>\n        </div>\n        {children}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Button } from '..';\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type NavMenuProps = {\n  items: string[];\n  currentItem: number;\n  onChangeItem: (next: number) => void;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a vertical nav menu with a single active item\n */\nexport default function NavMenu({\n  items,\n  currentItem,\n  onChangeItem,\n  className,\n  style,\n}: NavMenuProps): React.ReactElement {\n  return (\n    <div className={classes('nav-menu', className)} style={style}>\n      {items.map((item, idx) => (\n        <Button\n          className={classes('nav-button', currentItem === idx && 'active')}\n          onClick={(): void => onChangeItem(idx)}\n          key={idx}\n        >\n          {item}\n        </Button>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\nimport { PALETTE } from '../../constants';\n\nimport './stylesheet.scss';\n\nexport type PaletteProps = {\n  className?: string;\n  color: string | null;\n  onSelectColor: (newColor: string) => void;\n  onMouseLeave: () => void;\n};\n\nexport default function Palette({\n  className,\n  color,\n  onSelectColor,\n  onMouseLeave,\n}: PaletteProps): React.ReactElement {\n  return (\n    <div className={classes('Palette', className)} onMouseLeave={onMouseLeave}>\n      {PALETTE.map((colors, i) => (\n        <div className=\"palette-row\" key={i}>\n          {colors.map((paletteColor) => (\n            <div\n              className={classes('color', paletteColor === color && 'frame')}\n              key={paletteColor}\n              style={{ backgroundColor: paletteColor }}\n              onClick={(): void => onSelectColor(paletteColor)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport {\n  faInfoCircle,\n  faAngleUp,\n  faAngleDown,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { TermContext } from '../../contexts';\nimport { classes, serializePrereqs } from '../../utils';\nimport { ActionRow } from '..';\nimport { Course } from '../../beans';\nimport {\n  CrawlerPrerequisites,\n  PrerequisiteClause,\n  PrerequisiteOperator,\n} from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nconst BASE_ITEM_STYLE = { fontSize: '0.9em', padding: '8px' };\n\nexport type PrerequisiteProps = {\n  course: Course;\n  prereqs: CrawlerPrerequisites;\n};\n\n/**\n * Renders the prereqs for a single course, given that the crawler version\n * supports prereqs. (Make sure to check this before). An empty prereq list is\n * an authoritative statement that the course has no prereqs, and as such a\n * message will be displayed telling the user. Otherwise, this component tries\n * to render the prereq tree in a way that is easily consumable without taking\n * up too much screen space, first trying to split the prereqs up into separate\n * \"options\" (sub-clauses of an OR set) if possible before rendering a list of\n * items with operators in between. Finally, in each item, there is the\n * flattened textual representation of the remainder of the subtree, which\n * restores parentheses groupings (much like the original Oscar prereq syntax)\n */\nexport default function Prerequisite({\n  course,\n  prereqs,\n}: PrerequisiteProps): React.ReactElement {\n  let content: React.ReactNode;\n  if (prereqs.length === 0) {\n    content = <PrerequisiteEmpty />;\n  } else {\n    // `prereqs` isn't an empty array, so it must be `PrerequisiteSet`\n    // (here we manually `Exclude` the empty array case)\n    const [op, ...subClauses] = prereqs as Exclude<CrawlerPrerequisites, []>;\n\n    switch (op) {\n      case 'and':\n        // We only consider this a single \"option\",\n        // so just render the content as a direct child\n        content = <PrerequisiteClauseDisplay clause={['and', ...subClauses]} />;\n        break;\n      case 'or':\n        if (subClauses.length === 1) {\n          // There is only 1 option:\n          // just render the content as a direct child\n          content = (\n            <PrerequisiteClauseDisplay\n              clause={subClauses[0] as PrerequisiteClause}\n            />\n          );\n        } else {\n          // Render an option for each sub-clause\n          content = (\n            <>\n              {subClauses.map((subClause, i) => (\n                <PrerequisiteOption key={i} clause={subClause} index={i} />\n              ))}\n            </>\n          );\n        }\n        break;\n      default:\n        softError(\n          new ErrorWithFields({\n            message: 'invalid operator found in top-level prereqs',\n            fields: {\n              courseId: course.id,\n              operator: op,\n              term: course.term,\n            },\n          })\n        );\n        content = null;\n    }\n  }\n\n  return (\n    <div className={classes('hover-container', 'nested')}>\n      <PrerequisiteHeader course={course} />\n      <div className={classes('nested')}>{content}</div>\n    </div>\n  );\n}\n\n// Private sub-components\n\ntype PrerequisiteHeaderProps = {\n  course: Course;\n};\n\n/**\n * Renders the \"header\" at the top of a prereq display,\n * which includes a link to Oscar giving the original prereq source,\n * plus other course information.\n */\nfunction PrerequisiteHeader({\n  course,\n}: PrerequisiteHeaderProps): React.ReactElement {\n  const [{ term }] = useContext(TermContext);\n\n  return (\n    <ActionRow\n      className={classes('hover-container')}\n      label=\"Prerequisites\"\n      actions={[\n        {\n          icon: faInfoCircle,\n          href:\n            `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n            `course_detail?cat_term_in=${term}&subj_code_in=` +\n            `${course.subject}&crse_numb_in=${course.number}`,\n        },\n      ]}\n    />\n  );\n}\n\ntype PrerequisiteOptionProps = {\n  clause: PrerequisiteClause;\n  index: number;\n};\n\n/**\n * Renders a single prereq option -- a sub-clause of a larger \"OR\" prereq set\n * that is independently collapse-able from the other sibling options.\n * Inside, uses `PrerequisiteClauseDisplay` to render the sub-clause if\n * the option is expanded.\n */\nfunction PrerequisiteOption({\n  clause,\n  index,\n}: PrerequisiteOptionProps): React.ReactElement {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <>\n      <ActionRow\n        className={classes('hover-container')}\n        label={`Option ${index + 1}`}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: (): void => setExpanded(!expanded),\n          },\n        ]}\n      />\n      {expanded && (\n        <div className={classes('nested')}>\n          <PrerequisiteClauseDisplay clause={clause} />\n        </div>\n      )}\n    </>\n  );\n}\n\ntype PrerequisiteClauseDisplayProps = {\n  clause: PrerequisiteClause;\n};\n\n/**\n * Renders an arbitrary prereq clause. If the clause is a singular course,\n * then it renders a single Item. Otherwise, if the clause is a set,\n * this component renders an item for each member of the set, and includes\n * an operator at the end of each item's text to indicate that each item\n * is part of a larger prereq set.\n */\nfunction PrerequisiteClauseDisplay({\n  clause,\n}: PrerequisiteClauseDisplayProps): React.ReactElement {\n  if (!Array.isArray(clause)) {\n    // Render the single prereq course\n    return <PrerequisiteItem clause={clause} operator=\"and\" isLast />;\n  }\n\n  // Render a list of prereq items\n  const [operator, ...subClauses] = clause;\n  return (\n    <>\n      {subClauses.map((subClause, i) => (\n        <PrerequisiteItem\n          key={i}\n          clause={subClause}\n          operator={operator}\n          isLast={i === subClauses.length - 1}\n        />\n      ))}\n    </>\n  );\n}\n\ntype PrerequisiteItemProps = {\n  clause: PrerequisiteClause;\n  operator: PrerequisiteOperator;\n  isLast: boolean;\n};\n\n/**\n * Renders a single \"item\" -- a div with the completely flattened text\n * representation of the prereq subtree passed in as `clause` (whether\n * that's a single prereq course or a sprawling sub-tree with many branches).\n * Includes the ability to display a higher-level operator between different\n * `PrerequisiteItem`'s as long as `isLast` is false, which is used by\n * `PrerequisiteClauseDisplay` when it needs to render a prerequisite set.\n `\n */\nfunction PrerequisiteItem({\n  clause,\n  operator,\n  isLast,\n}: PrerequisiteItemProps): React.ReactElement {\n  return (\n    <div className={classes('divider-bottom')} style={BASE_ITEM_STYLE}>\n      {serializePrereqs(clause)} {!isLast && <strong>{operator}</strong>}\n    </div>\n  );\n}\n\n/**\n * Replacement prerequisite \"item\"-like component that simply contains\n * a notification to the user that the course has no prereqs.\n */\nfunction PrerequisiteEmpty(): React.ReactElement {\n  return (\n    <div style={BASE_ITEM_STYLE}>No prerequisites. You&apos;re good to go!</div>\n  );\n}\n","import React, { useMemo, useState } from 'react';\n\nimport { classes } from '../../utils';\nimport { Button, Calendar, CombinationContainer, CourseContainer } from '..';\nimport { OverlayCrnsContext, OverlayCrnsContextValue } from '../../contexts';\nimport { useMobile } from '../../hooks';\n\n/**\n * Wraps around the root top-level component of the Scheduler tab\n */\nexport default function Scheduler(): React.ReactElement {\n  const mobile = useMobile();\n\n  // Store the current set of CRNs that are shown on the Calendar overlay\n  const [overlayCrns, setOverlayCrns] = useState<string[]>([]);\n\n  // Control second-level navigation between panes on mobile\n  const [tabIndex, setTabIndex] = useState<number>(0);\n\n  // Memoize the CRN overlay set's context value so it is stable\n  const overlayContextValue = useMemo<OverlayCrnsContextValue>(\n    () => [overlayCrns, setOverlayCrns],\n    [overlayCrns, setOverlayCrns]\n  );\n\n  return (\n    <>\n      {mobile && (\n        <div className=\"tab-container\">\n          {['Courses', 'Combinations', 'Calendar'].map((tabTitle, i) => (\n            <Button\n              key={tabTitle}\n              className={classes('tab', tabIndex === i && 'active')}\n              onClick={(): void => setTabIndex(i)}\n            >\n              {tabTitle}\n            </Button>\n          ))}\n        </div>\n      )}\n      <OverlayCrnsContext.Provider value={overlayContextValue}>\n        <div className=\"main\">\n          {(!mobile || tabIndex === 0) && <CourseContainer />}\n          {(!mobile || tabIndex === 1) && <CombinationContainer />}\n          {(!mobile || tabIndex === 2) && (\n            <div className=\"calendar-container\">\n              <Calendar className=\"calendar\" overlayCrns={overlayCrns} />\n            </div>\n          )}\n        </div>\n      </OverlayCrnsContext.Provider>\n    </>\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faBan,\n  faChair,\n  faThumbtack,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, periodToString } from '../../utils';\nimport { ActionRow } from '..';\nimport { OverlayCrnsContext, TermContext } from '../../contexts';\nimport { DELIVERY_MODES } from '../../constants';\nimport { Section as SectionBean } from '../../beans';\nimport { Seating } from '../../beans/Section';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\n\nexport type SectionProps = {\n  className?: string;\n  section: SectionBean;\n  pinned: boolean;\n  color: string | undefined;\n};\n\nexport default function Section({\n  className,\n  section,\n  pinned,\n  color,\n}: SectionProps): React.ReactElement {\n  const [{ term, pinnedCrns, excludedCrns }, { patchTermData }] =\n    useContext(TermContext);\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n  const [seating, setSeating] = useState<Seating>([[], 0]);\n\n  let hovering = false;\n  const handleHover = (): void => {\n    hovering = true;\n    setTimeout(() => {\n      if (hovering) {\n        section\n          .fetchSeating(term)\n          .then((newSeating) => {\n            setSeating(newSeating);\n          })\n          .catch((err) =>\n            softError(\n              new ErrorWithFields({\n                message: 'error while fetching seating',\n                source: err,\n                fields: { crn: section.crn, term: section.term },\n              })\n            )\n          );\n      }\n    }, 333);\n  };\n\n  const excludeSection = useCallback(\n    (sect: SectionBean) => {\n      patchTermData({\n        excludedCrns: [...excludedCrns, sect.crn],\n        pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn),\n      });\n    },\n    [pinnedCrns, excludedCrns, patchTermData]\n  );\n\n  const pinSection = useCallback(\n    (sect: SectionBean) => {\n      if (pinnedCrns.includes(sect.crn)) {\n        patchTermData({\n          pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn),\n        });\n      } else {\n        patchTermData({\n          pinnedCrns: [...pinnedCrns, sect.crn],\n          excludedCrns: excludedCrns.filter((crn) => crn !== sect.crn),\n        });\n      }\n    },\n    [pinnedCrns, excludedCrns, patchTermData]\n  );\n\n  const excludeTooltipId = `section-exclude-${section.id}`;\n  return (\n    <ActionRow\n      label={section.id}\n      className={classes('Section', className)}\n      onMouseEnter={(): void => setOverlayCrns([section.crn])}\n      onMouseLeave={(): void => setOverlayCrns([])}\n      actions={[\n        {\n          icon: pinned ? faTimes : faThumbtack,\n          onClick: (): void => pinSection(section),\n        },\n        {\n          icon: faChair,\n          dataTip: true,\n          dataFor: section.id,\n          href: `https://oscar.gatech.edu/pls/bprod/bwckschd.p_disp_detail_sched?term_in=${term}&crn_in=${section.crn}`,\n        },\n        {\n          icon: faBan,\n          dataTip: true,\n          dataFor: excludeTooltipId,\n          onClick: (): void => excludeSection(section),\n        },\n      ]}\n      style={pinned ? { backgroundColor: color } : undefined}\n    >\n      <ReactTooltip\n        id={excludeTooltipId}\n        className=\"tooltip\"\n        type=\"dark\"\n        place=\"right\"\n        effect=\"solid\"\n      >\n        Exclude from Combinations\n      </ReactTooltip>\n      <div className=\"section-details\">\n        <div className=\"delivery-mode\">\n          {section.deliveryMode != null\n            ? DELIVERY_MODES[section.deliveryMode]\n            : ''}\n        </div>\n        <div className=\"meeting-container\">\n          {section.meetings.map((meeting, i) => {\n            return (\n              <div className=\"meeting\" key={i}>\n                <span className=\"days\">{meeting.days.join('')}</span>\n                <span className=\"period\">{periodToString(meeting.period)}</span>\n              </div>\n            );\n          })}\n        </div>\n\n        <ReactTooltip\n          id={section.id}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"right\"\n          effect=\"solid\"\n          afterShow={(): void => handleHover()}\n          afterHide={(): void => {\n            hovering = false;\n          }}\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Seats Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][1] ?? '<unknown>'} of ${\n                        seating[0][0] ?? '<unknown>'\n                      }`\n                    : `N/A`}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Waitlist Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][3] ?? '<unknown>'} of ${\n                        seating[0][2] ?? '<unknown>'\n                      }`\n                    : `N/A`}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      </div>\n    </ActionRow>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type TabProps = {\n  label: string;\n  onClick: () => void;\n  active?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a single top-level tab that is used in a horizontal list\n */\nexport default function Tab({\n  label,\n  active = false,\n  onClick,\n  className,\n  style,\n}: TabProps): React.ReactElement {\n  return (\n    <button\n      className={classes('Tab', active && 'active', className)}\n      style={style}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {label}\n    </button>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils';\nimport { useMobile } from '../../hooks';\n\nimport './stylesheet.scss';\n\nexport default function Attribution(): React.ReactElement {\n  const mobile = useMobile();\n  return (\n    <div className={classes('Attribution')}>\n      <p>\n        Copyright (c) 2021 with{' '}\n        <span role=\"img\" aria-label=\"love\">\n          ❤️\n        </span>{' '}\n        by <a href=\"https://jasonpark.me\">Jinseo Park</a>,{' '}\n        <a href=\"https://bitsofgood.org\">Bits of Good</a>, and{' '}\n        <a href=\"https://github.com/gt-scheduler/website/graphs/contributors\">\n          {mobile ? 'others' : 'the GT Scheduler contributors'}\n        </a>\n        .\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCommentAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from '..';\nimport { classes } from '../../utils';\nimport { FormSubmit } from '../../beans';\n\nimport './stylesheet.scss';\n\nexport default function Feedback(): React.ReactElement {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [submit, setSubmit] = useState<boolean>(false);\n  const [rating, setRating] = useState<number | null>(null);\n  const [feedback, setFeedback] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onSubmit = (): void => {\n    setLoading(true);\n    // Add 1 to the rating to move it from [0,4] to [1,5]\n    FormSubmit({ rating: (rating ?? 0) + 1, feedback })\n      .then(() => {\n        setSubmit(true);\n        setLoading(false);\n      })\n      .catch(() => {\n        setSubmit(true);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      {!expanded && (\n        <div className=\"FeedbackButtonWrapper\">\n          <Button\n            className=\"FeedbackButton\"\n            onClick={(): void => setExpanded(true)}\n          >\n            <FontAwesomeIcon icon={faCommentAlt} size=\"2x\" />\n          </Button>\n        </div>\n      )}\n      {expanded && (\n        <div>\n          <form className=\"FeedbackForm\">\n            <div className=\"container\">\n              <FontAwesomeIcon\n                icon={faTimes}\n                className=\"CloseIcon\"\n                onClick={(): void => setExpanded(false)}\n              />\n              <h3 className=\"FeedbackTitle\">Feedback</h3>\n              {!submit && (\n                <div>\n                  <p className=\"text\">How would you rate your experience?</p>\n                  <div className=\"FormButtons\">\n                    {[1, 2, 3, 4, 5].map((i) => (\n                      <Button\n                        key={i}\n                        className={classes(\n                          'FormButton',\n                          rating === i - 1 && 'active'\n                        )}\n                        onClick={(): void => setRating(i - 1)}\n                      >\n                        {i}\n                      </Button>\n                    ))}\n                  </div>\n                  <div className=\"ScoreLabels\">\n                    <span className=\"score\" style={{ marginLeft: '4px' }}>\n                      Poor\n                    </span>\n                    <span className=\"score\" style={{ marginRight: '4px' }}>\n                      Great\n                    </span>\n                  </div>\n                  <textarea\n                    className=\"FeedbackTextArea\"\n                    placeholder=\"Please let us know if you have any more feedback!\"\n                    onChange={(event): void => setFeedback(event.target.value)}\n                    value={feedback}\n                  />\n                  <Button\n                    className=\"SubmitButton\"\n                    onClick={onSubmit}\n                    disabled={rating == null || loading}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              )}\n              {submit && (\n                <div className=\"submitted\">\n                  <p className=\"submitted-thanks text\">\n                    <span>Thank you for your feedback!</span>\n                  </p>\n                  <div>\n                    <Button\n                      className=\"SubmitButton\"\n                      onClick={(): void => setExpanded(false)}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport swal from '@sweetalert/with-react';\n\nimport { softError, ErrorWithFields } from '../../log';\n\n// Key to mark when a user has already been shown the information modal.\n// Update this when updating the contents of the modal.\n// In the future, prefix all keys with `YYYY-MM-DD-`\n// to ensure that they remain globally unique.\nconst MODAL_COOKIE_KEY = 'visited-merge-notice';\n\n/**\n * Inner content of the information modal.\n * Change this to update the announcement that is shown when visiting the site.\n * Additionally, make sure to change `MODAL_COOKIE_KEY` with another unique\n * value that has never been used before.\n */\nexport function InformationModalContent(): React.ReactElement {\n  return (\n    <div>\n      <img\n        style={{ width: '175px', margin: '0 auto', display: 'block' }}\n        alt=\"GT Scheduler Logo\"\n        src=\"/mascot.png\"\n      />\n      <h1>GT Scheduler</h1>\n      <p>\n        Hey there, yellow jackets!{' '}\n        <a href=\"https://github.com/gt-scheduler\">GT Scheduler</a> is a new\n        collaboration between <a href=\"https://bitsofgood.org/\">Bits of Good</a>{' '}\n        and <a href=\"https://jasonpark.me/\">Jason (Jinseo) Park</a> aimed at\n        making class registration easier for everybody! Now, you can access\n        course prerequisites, instructor GPAs, live seating information, and\n        more all in one location.\n      </p>\n      <p>\n        If you enjoy our work and are interested in contributing, feel free to{' '}\n        <a href=\"https://github.com/gt-scheduler/website/pulls\">\n          open a pull request\n        </a>{' '}\n        with your improvements. Thank you and enjoy!\n      </p>\n    </div>\n  );\n}\n\n/**\n * Hook to show the information modal upon the user's first visit to the site\n * when they haven't seen this version of the information modal before.\n */\nexport function useInformationModal(): void {\n  useEffect(() => {\n    if (!Cookies.get(MODAL_COOKIE_KEY)) {\n      swal({\n        button: 'Got It!',\n        content: <InformationModalContent />,\n      }).catch((err) => {\n        softError(\n          new ErrorWithFields({\n            message: 'error with swal call',\n            source: err,\n            fields: {\n              cookieKey: MODAL_COOKIE_KEY,\n            },\n          })\n        );\n      });\n\n      Cookies.set(MODAL_COOKIE_KEY, 'true', { expires: 365 });\n    }\n  }, []);\n}\n","import React, { ErrorInfo } from 'react';\n\nimport { ErrorWithFields, softError } from '../../log';\n\ntype ErrorBoundaryProps = {\n  fallback?: (error: Error, errorInfo: ErrorInfo | null) => React.ReactNode;\n  children: React.ReactNode;\n};\n\ntype ErrorBoundaryState = {\n  error: Error | null;\n  info: ErrorInfo | null;\n};\n\n/**\n * Wraps hard errors in the component tree, showing a fallback display\n * so that the error doesn't entirely crash the app.\n * Additionally reports the error to Sentry.\n */\nexport default class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null, info: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { error, info: null };\n  }\n\n  override componentDidCatch(error: Error, info: React.ErrorInfo): void {\n    // Log & report to Sentry\n    softError(\n      new ErrorWithFields({\n        message: 'ErrorBoundary caught error from further in render tree',\n        source: error,\n        fields: {\n          reactErrorInfo: info,\n        },\n      })\n    );\n\n    this.setState({ info });\n  }\n\n  override render(): React.ReactElement | null {\n    const { children, fallback } = this.props;\n    const { error, info } = this.state;\n\n    if (error !== null) {\n      if (fallback != null) {\n        return <>{fallback(error, info)}</>;\n      }\n\n      return null;\n    }\n\n    return <>{children}</>;\n  }\n}\n","import React from 'react';\nimport safeStringify from 'fast-safe-stringify';\n\nimport { ErrorWithFields } from '../../log';\nimport { classes } from '../../utils';\n\nexport type ErrorDetailsFieldProps = {\n  name: string;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  className?: string;\n};\n\n/**\n * A single field in an error details component\n */\nexport function ErrorDetailsField({\n  name,\n  children,\n  style,\n  className,\n}: ErrorDetailsFieldProps): React.ReactElement {\n  return (\n    <div className={classes(className, 'error-details-field')} style={style}>\n      <strong>{name}</strong>: {children}\n    </div>\n  );\n}\n\nexport type ReactErrorDetailsProps = {\n  error: Error;\n  errorInfo: React.ErrorInfo | null;\n};\n\n/**\n * Shows debug information for an error using react error info.\n */\nexport function ReactErrorDetails({\n  error,\n  errorInfo,\n}: ReactErrorDetailsProps): React.ReactElement {\n  return (\n    <>\n      <BaseErrorDetails error={error} />\n      {errorInfo !== null && (\n        <ErrorDetailsField name=\"Component stacktrace\">\n          <pre>\n            <code>{errorInfo.componentStack.replace(/^[\\n\\r]+/, '')}</code>\n          </pre>\n        </ErrorDetailsField>\n      )}\n    </>\n  );\n}\n\nexport type LoadingErrorDetailsProps = {\n  error: Error;\n  overview: React.ReactNode;\n  name: string;\n};\n\n/**\n * Shows debug information for an error that occurred while loading.\n */\nexport function LoadingErrorDetails({\n  error,\n  overview,\n  name,\n}: LoadingErrorDetailsProps): React.ReactElement {\n  return (\n    <>\n      <BaseErrorDetails error={error} />\n      <ErrorDetailsField name=\"Operation name\">\n        (loading) {name}\n      </ErrorDetailsField>\n      <ErrorDetailsField name=\"Overview\">{overview}</ErrorDetailsField>\n    </>\n  );\n}\n\nexport type BaseErrorDetailsProps = {\n  error: Error;\n};\n\n/**\n * Shows debug information for an instance of `Error`.\n */\nexport function BaseErrorDetails({\n  error,\n}: BaseErrorDetailsProps): React.ReactElement {\n  return (\n    <>\n      <ErrorDetailsField name=\"Name\">{error.name}</ErrorDetailsField>\n      <ErrorDetailsField name=\"Message\">{error.message}</ErrorDetailsField>\n      <ErrorDetailsField name=\"Version\">\n        {process.env['REACT_APP_SENTRY_VERSION']}\n      </ErrorDetailsField>\n      {error instanceof ErrorWithFields && (\n        <ErrorDetailsField name=\"Fields\">\n          <pre>\n            <code>\n              {Object.entries(error.getAllFields())\n                .map(([key, value]) => `    ${key}: ${safeStringify(value)}`)\n                .join('\\n')}\n            </code>\n          </pre>\n        </ErrorDetailsField>\n      )}\n      <ErrorDetailsField name=\"Stacktrace\">\n        <pre>\n          <code>{error.stack ?? '~'}</code>\n        </pre>\n      </ErrorDetailsField>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type ExpandableCardProps = {\n  label?: string;\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a simple expandable card that has a button\n * which can be clicked to render all content.\n */\nexport default function ExpandableCard({\n  children,\n  label = 'Details',\n  className,\n  style,\n}: ExpandableCardProps): React.ReactElement {\n  const [showChildren, setShowChildren] = useState(false);\n\n  return (\n    <div className={classes('expandable-card', className)} style={style}>\n      <button\n        className=\"expandable-card-button\"\n        onClick={(): void => setShowChildren(!showChildren)}\n        type=\"button\"\n      >\n        <FontAwesomeIcon\n          fixedWidth\n          icon={faCaretDown}\n          style={{\n            transform: showChildren ? 'rotate(-90deg)' : 'none',\n            marginRight: 8,\n          }}\n        />\n        {label}\n      </button>\n      {showChildren && children}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ExpandableCard from '../ExpandableCard';\n\nimport './stylesheet.scss';\n\nexport const GITHUB_ISSUE_URL =\n  'https://github.com/gt-scheduler/website/issues/new?assignees=&labels=bug&template=bug-report----.md&title=';\n\nexport type ErrorDisplayProps = {\n  errorDetails: React.ReactNode;\n  children: React.ReactNode;\n};\n\n/**\n * Renders the content for an error display,\n * directing the user to report the error to GitHub\n * and showing a collapsible section that includes details.\n */\nexport default function ErrorDisplay({\n  errorDetails,\n  children,\n}: ErrorDisplayProps): React.ReactElement {\n  return (\n    <div className=\"error-display-outer\">\n      {children}\n      <div>\n        If the issue keeps happening, please consider filing{' '}\n        <a href={GITHUB_ISSUE_URL} target=\"_blank\" rel=\"noreferrer noopener\">\n          a new issue on the gt-scheduler GitHub\n        </a>\n        , and include the information below under &ldquo;Error Details&rdquo; in\n        addition to what you were doing when the error occurred.\n      </div>\n      <div>\n        The error has already been logged, but filing an issue lets you provide\n        more information about what happened and makes it a lot easier for us to\n        fix the bug. Thanks ❤\n      </div>\n      <ExpandableCard label=\"Error Details\">{errorDetails}</ExpandableCard>\n    </div>\n  );\n}\n","import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport './stylesheet.scss';\n\n/**\n * Renders the top of an error display,\n * with an icon and a title saying 'An error occurred'\n */\nexport default function ErrorHeader(): React.ReactElement {\n  return (\n    <div className=\"error-header\">\n      <FontAwesomeIcon icon={faExclamationTriangle} />\n      <h4>An error occurred :(</h4>\n    </div>\n  );\n}\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useMemo,\n  useContext,\n} from 'react';\n\nimport { NavDrawer, NavMenu } from '..';\nimport { useMobile } from '../../hooks';\nimport { ErrorWithFields } from '../../log';\n\nexport const NAV_TABS = ['Scheduler', 'Map'];\n\nexport type AppNavigationProps = {\n  children: React.ReactNode;\n};\n\nexport type AppNavigationContextValue = {\n  currentTabIndex: number;\n  setTabIndex: (next: number) => void;\n  isDrawerOpen: boolean;\n  openDrawer: () => void;\n  closeDrawer: () => void;\n};\n\nexport const AppNavigationContext =\n  React.createContext<AppNavigationContextValue>({\n    currentTabIndex: 0,\n    setTabIndex: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty AppNavigationContext.setTabIndex value being used',\n      });\n    },\n    isDrawerOpen: false,\n    openDrawer: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty AppNavigationContext.openDrawer value being used',\n      });\n    },\n    closeDrawer: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty AppNavigationContext.closeDrawer value being used',\n      });\n    },\n  });\n\n/**\n * Handles controlling the state of app navigation,\n * including the drawer and top-level tabs\n */\nexport function AppNavigation({\n  children,\n}: AppNavigationProps): React.ReactElement {\n  const mobile = useMobile();\n\n  // Allow top-level tab-based navigation\n  const [currentTabIndex, setTabIndex] = useState(0);\n\n  // Handle the status of the drawer being open on mobile\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const openDrawer = useCallback(() => setIsDrawerOpen(true), []);\n  const closeDrawer = useCallback(() => setIsDrawerOpen(false), []);\n  useEffect(() => {\n    // Close the drawer if switching to desktop\n    if (isDrawerOpen && !mobile) {\n      setIsDrawerOpen(false);\n    }\n  }, [isDrawerOpen, mobile]);\n\n  // Memoize the context value\n  const contextValue = useMemo<AppNavigationContextValue>(\n    () => ({\n      currentTabIndex,\n      setTabIndex,\n      isDrawerOpen,\n      openDrawer,\n      closeDrawer,\n    }),\n    [currentTabIndex, setTabIndex, isDrawerOpen, openDrawer, closeDrawer]\n  );\n\n  return (\n    <AppNavigationContext.Provider value={contextValue}>\n      {children}\n    </AppNavigationContext.Provider>\n  );\n}\n\n/**\n * Adds the nav drawer that is conditionally open depending on navigation state\n * when the app is running on a mobile device\n */\nexport function AppMobileNav(): React.ReactElement | null {\n  const mobile = useMobile();\n  const { currentTabIndex, setTabIndex, isDrawerOpen, closeDrawer } =\n    useContext(AppNavigationContext);\n\n  if (!mobile) return null;\n\n  return (\n    <NavDrawer open={isDrawerOpen} onClose={closeDrawer}>\n      <NavMenu\n        items={NAV_TABS}\n        currentItem={currentTabIndex}\n        onChangeItem={setTabIndex}\n      />\n    </NavDrawer>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { softError, ErrorWithFields } from '../../log';\nimport { LoadingState } from '../../types';\nimport {\n  Cancellable,\n  exponentialBackoff,\n  isAxiosNetworkError,\n} from '../../utils';\n\nconst CRAWLER_REPO = 'gt-scheduler/crawler';\nconst CRAWLER_BRANCH = 'gh-pages';\nconst GITHUB_API_URL = `https://api.github.com/repos/${CRAWLER_REPO}/contents?ref=${CRAWLER_BRANCH}`;\n\n/**\n * Downloads the list of terms that the crawler has valid data for.\n * Repeatedly attempts to load in the case of errors,\n * and cancels itself once the parent context is unmounted.\n */\nexport default function useDownloadTerms(): LoadingState<string[]> {\n  const [state, setState] = useState<LoadingState<string[]>>({\n    type: 'loading',\n  });\n\n  // Fetch all terms via the GitHub API\n  useEffect(() => {\n    const loadOperation = new Cancellable();\n    async function load(): Promise<void> {\n      let attemptNumber = 1;\n      while (!loadOperation.isCancelled) {\n        try {\n          const result = await Promise.race([\n            loadOperation.promise,\n            axios.get<{ name: string }[]>(GITHUB_API_URL),\n          ]);\n\n          if (result === loadOperation.cancelledSymbol) {\n            return;\n          }\n\n          const newTerms = (result as Exclude<typeof result, symbol>).data\n            .map((content) => content.name)\n            .filter((name) => /\\d{6}\\.json/.test(name))\n            .map((name) => name.replace(/\\.json$/, ''))\n            .sort()\n            .reverse();\n\n          // Ensure that there is at least 1 term before continuing\n          if (newTerms.length === 0) {\n            throw new ErrorWithFields({\n              message: 'fetched list of terms is empty; cannot continue',\n            });\n          }\n\n          setState({\n            type: 'loaded',\n            result: newTerms,\n          });\n\n          return;\n        } catch (err) {\n          // Report the error to Sentry if not a network error\n          if (!isAxiosNetworkError(err)) {\n            softError(\n              new ErrorWithFields({\n                message: 'error fetching list of terms',\n                source: err,\n                fields: {\n                  url: GITHUB_API_URL,\n                },\n              })\n            );\n          }\n\n          // Flag that an error has occurred\n          setState({\n            type: 'error',\n            error: err instanceof Error ? err : new Error(err),\n            stillLoading: true,\n            overview: String(err),\n          });\n        }\n\n        // Sleep for an exponential backoff between each retry\n        await exponentialBackoff(attemptNumber);\n        attemptNumber += 1;\n      }\n    }\n\n    load().catch(() => {\n      // Unreachable\n    });\n\n    // Cancel the background load when this cleans up\n    return (): void => {\n      loadOperation.cancel();\n    };\n  }, [setState]);\n\n  return state;\n}\n","import React from 'react';\n\nimport ErrorHeader from '../ErrorHeader';\nimport { BaseErrorDetails, ErrorDetailsField } from '../ErrorDetails';\nimport ExpandableCard from '../ExpandableCard';\nimport { getSemesterName } from '../../utils';\nimport { NonEmptyArray } from '../../types';\n\nimport './stylesheet.scss';\n\nexport type FallbackResult = 'accepted' | 'rejected';\n\n/**\n * Renders some contents that present the user with the option of\n * accepting or ignoring the application's suggested fallback\n * for their invalid term data.\n */\nexport function renderTermDataFallbackNotification(\n  props: TermDataFallbackNotificationProps\n): React.ReactElement {\n  return <TermDataFallbackNotification {...props} />;\n}\n\nconst GITHUB_ISSUE_URL =\n  'https://github.com/gt-scheduler/website/issues/new?assignees=&labels=help-request&template=help----.md&title=';\n\nexport type TermDataFallbackNotificationProps = {\n  originalRaw: string;\n  fallbackRaw: string;\n  errors: NonEmptyArray<Error>;\n  term: string;\n  onAccept: () => void;\n};\n\n/**\n * Content that is shown in the modal when `showTermDataFallbackNotification`\n * is called\n */\nexport function TermDataFallbackNotification({\n  originalRaw,\n  fallbackRaw,\n  errors,\n  term,\n  onAccept,\n}: TermDataFallbackNotificationProps): React.ReactElement {\n  const semester = getSemesterName(term);\n  return (\n    <div className=\"term-data-fallback-notification\">\n      <ErrorHeader />\n      <p>\n        Your schedule data for <strong>{semester}</strong> could not be\n        successfully loaded from cookies. The application has attempted to\n        automatically recover the data, but it may not have been able to recover\n        all of it.\n      </p>\n      <p>\n        <strong>\n          Would you like to accept the recovered data (at the risk of losing\n          some data)?\n        </strong>{' '}\n        If you don&apos;t accept, then you won&apos;t be able to access your{' '}\n        {semester} data but you can still switch to another term or manually fix\n        your data.\n      </p>\n      <p>\n        If you&apos;re unsure of what to do and want help from the gt-scheduler\n        maintainers, consider filing{' '}\n        <a href={GITHUB_ISSUE_URL} target=\"_blank\" rel=\"noreferrer noopener\">\n          a new issue on the gt-scheduler GitHub\n        </a>\n        , and include the below information under &ldquo;Original&rdquo; and\n        &ldquo;Proposed fallback&rdquo; in addition to all of the content under\n        &ldquo;Error Details&rdquo;.\n      </p>\n      <button\n        className=\"term-data-fallback-notification-button\"\n        onClick={onAccept}\n        type=\"button\"\n      >\n        Accept\n      </button>\n      <ErrorDetailsField name=\"Original\">\n        <ExpandableCard label=\"Expand\" style={{ marginTop: 4 }}>\n          <pre>\n            <code>{tryPrettifyRawJSON(originalRaw)}</code>\n          </pre>\n        </ExpandableCard>\n      </ErrorDetailsField>\n      <ErrorDetailsField name=\"Proposed fallback\" style={{ marginTop: 16 }}>\n        <ExpandableCard label=\"Expand\" style={{ marginTop: 4 }}>\n          <pre>\n            <code>{tryPrettifyRawJSON(fallbackRaw)}</code>\n          </pre>\n        </ExpandableCard>\n      </ErrorDetailsField>\n      <ErrorDetailsField name=\"Error Details\" style={{ marginTop: 16 }}>\n        <ExpandableCard label=\"Expand\" style={{ marginTop: 4 }}>\n          {errors.length > 1 ? (\n            errors.map((err, i) => (\n              <ExpandableCard key={i} label={`Error #${i + 1} Details`}>\n                <BaseErrorDetails error={err} />\n              </ExpandableCard>\n            ))\n          ) : (\n            <BaseErrorDetails error={errors[0]} />\n          )}\n        </ExpandableCard>\n      </ErrorDetailsField>\n    </div>\n  );\n}\n\nfunction tryPrettifyRawJSON(rawJSON: string): string {\n  try {\n    return JSON.stringify(JSON.parse(rawJSON), null, 2);\n  } catch (err) {\n    return rawJSON;\n  }\n}\n","import { useState, useMemo, useEffect, useCallback } from 'react';\n\nimport { useCookie } from '..';\nimport { Oscar } from '../../beans';\nimport { softError, ErrorWithFields } from '../../log';\nimport {\n  TermData,\n  LoadingState,\n  defaultTermDataRaw,\n  defaultTermData,\n  LoadingStateError,\n  LoadingStateCustom,\n  NonEmptyArray,\n} from '../../types';\nimport { renderTermDataFallbackNotification } from '../../components/TermDataFallbackNotification';\n\n/**\n * Gets the current term data from the user's cookies,\n * ensuring it is in a valid state before returning a loaded result.\n * Provides a patch callback that can be used to update the term data\n * and persist it to cookies.\n * Does not support `term` changing between calls to `useTermDataFromCookies`\n * without the parent context unmounting & remounting.\n */\nexport default function useTermDataFromCookies(\n  term: string,\n  oscar: Oscar\n): LoadingState<[TermData, (patch: Partial<TermData>) => void]> {\n  // Persist the term data as a cookie\n  const [termDataRaw, setTermDataRaw] = useCookie(term, defaultTermDataRaw);\n  const [persistentErrorState, setPersistentErrorState] = useState<\n    LoadingStateError | LoadingStateCustom | null\n  >(null);\n\n  // Parse & validate the term data\n  const parseResult = useMemo<TermDataValidationResult>(() => {\n    const parsed = parseTermData(termDataRaw);\n    if (parsed.type === 'error') {\n      return {\n        type: 'error',\n        errors: [parsed.error],\n        // Fall back to the default value here\n        fallback: defaultTermData,\n      };\n    }\n\n    return validateTermData(parsed.parsed, termDataRaw);\n  }, [termDataRaw]);\n\n  // If the term data is not valid, store the invalid data\n  // & present the user with the option of fixing it\n  useEffect(() => {\n    if (parseResult.type === 'error') {\n      parseResult.errors.forEach((err) => {\n        softError(\n          new ErrorWithFields({\n            message: 'parsing error for term data',\n            source: err,\n            fields: {\n              term,\n              termDataRaw,\n              fallback: parseResult.fallback,\n            },\n          })\n        );\n      });\n\n      // Try storing the invalid data in local storage\n      // just in case it wasn't invalid & we're losing valid data:\n      /* eslint-disable no-console */\n      try {\n        const key = `${new Date().toISOString()}-invalid-term-data`;\n        window.localStorage.setItem(key, termDataRaw);\n        console.log(`Saved previous data to local storage at key '${key}'`);\n      } catch (err) {\n        console.log('Could not save previous data to local storage:');\n        console.error(err);\n        console.log(`Previous data:`);\n        console.log(termDataRaw);\n      }\n      /* eslint-enable no-console */\n\n      // Stringify the fallback value\n      let fallbackTermDataRaw: string;\n      try {\n        fallbackTermDataRaw = JSON.stringify(parseResult.fallback);\n      } catch (error) {\n        const err = new ErrorWithFields({\n          message: 'error serializing fallback term data to JSON',\n          source: error,\n          fields: {\n            term,\n            termDataRaw,\n            fallback: parseResult.fallback,\n          },\n        });\n        setPersistentErrorState({\n          type: 'error',\n          overview: 'could not prepare fallback term data to save',\n          error: err,\n          stillLoading: false,\n        });\n        softError(err);\n        return;\n      }\n\n      // Some fallback scenarios present an easy choice\n      if (termDataRaw === '' || termDataRaw === 'undefined') {\n        setTermDataRaw(fallbackTermDataRaw);\n        return;\n      }\n\n      // Show an alert to the user, allowing them to choose whether to fall back\n      setPersistentErrorState({\n        type: 'custom',\n        contents: renderTermDataFallbackNotification({\n          originalRaw: termDataRaw,\n          fallbackRaw: fallbackTermDataRaw,\n          errors: parseResult.errors,\n          term,\n          onAccept: (): void => {\n            // The user accepted the fallback, set the state\n            setTermDataRaw(fallbackTermDataRaw);\n            setPersistentErrorState(null);\n          },\n        }),\n      });\n    }\n  }, [term, oscar, parseResult, setTermDataRaw, termDataRaw]);\n\n  // Create the callback to patch term data.\n  // This isn't actually used if the parse didn't succeed,\n  // but we have to create it unconditionally since it is a hook.\n  const patchTermData = useCallback(\n    (patch: Partial<TermData>) => {\n      if (parseResult.type === 'error') {\n        // This shouldn't be possible to call if the parse didn't succeed,\n        // as we don't return this callback from the function.\n        throw new ErrorWithFields({\n          message: 'patchTermData called when term data is not valid',\n          fields: {\n            patch,\n            term,\n            parseResult,\n            termDataRaw,\n          },\n        });\n      }\n\n      // Ensure the new term data is valid before committing it\n      const updated = { ...parseResult.termData, ...patch };\n      const validationResult = validateTermData(updated);\n      if (validationResult.type === 'error') {\n        validationResult.errors.forEach((err) => {\n          softError(\n            new ErrorWithFields({\n              message: 'patched term data is not valid; ignoring update',\n              source: err,\n              fields: {\n                patch,\n                term,\n                termData: parseResult.termData,\n                updated,\n              },\n            })\n          );\n        });\n        return;\n      }\n\n      // Serialize the updated term data to a string\n      let updatedRawTermData: string;\n      try {\n        updatedRawTermData = JSON.stringify(updated);\n      } catch (error) {\n        softError(\n          new ErrorWithFields({\n            message: 'error serializing patched term data to JSON',\n            source: error,\n            fields: {\n              patch,\n              term,\n              termDataRaw,\n              termData: parseResult.termData,\n            },\n          })\n        );\n        return;\n      }\n\n      setTermDataRaw(updatedRawTermData);\n    },\n    [parseResult, term, setTermDataRaw, termDataRaw]\n  );\n\n  // Only consider courses and CRNs that exist\n  // (fixes issues where a CRN/course is removed from Oscar\n  // after a schedule was made with them).\n  // This isn't actually used if the parse didn't succeed,\n  // but we have to run it unconditionally since it is a hook.\n  const filteredTermData = useMemo<TermData>(() => {\n    if (parseResult.type === 'error') {\n      return defaultTermData;\n    }\n    const { termData } = parseResult;\n\n    const courseFilter = (courseId: string): boolean =>\n      oscar != null && oscar.findCourse(courseId) != null;\n    const crnFilter = (crn: string): boolean =>\n      oscar != null && oscar.findSection(crn) != null;\n\n    const desiredCourses = termData.desiredCourses.filter(courseFilter);\n    const pinnedCrns = termData.pinnedCrns.filter(crnFilter);\n    const excludedCrns = termData.excludedCrns.filter(crnFilter);\n\n    return { ...termData, desiredCourses, pinnedCrns, excludedCrns };\n  }, [oscar, parseResult]);\n\n  if (persistentErrorState !== null) {\n    return persistentErrorState;\n  }\n\n  if (parseResult.type === 'error') {\n    return {\n      type: 'loading',\n    };\n  }\n\n  // Only return `filteredTermData` and `patchTermData`\n  // if `parseResult.type` is `valid`\n  if (parseResult.type === 'valid') {\n    return {\n      type: 'loaded',\n      result: [filteredTermData, patchTermData],\n    };\n  }\n\n  // Unreachable\n  throw new ErrorWithFields({\n    message: 'unreachable state reached in useTermData',\n    fields: {\n      term,\n      parseResult,\n      termDataRaw,\n    },\n  });\n}\n\ntype TermDataParseResult =\n  | { type: 'error'; error: Error }\n  | { type: 'parsed'; parsed: unknown };\n\n/**\n * Parses raw term data from its string representation to the parsed JSON\n */\nfunction parseTermData(rawTermData: string): TermDataParseResult {\n  if (rawTermData === '' || rawTermData === 'undefined') {\n    return {\n      type: 'error',\n      error: new ErrorWithFields({\n        message: 'raw term data was empty or \"undefined\"',\n        fields: {\n          rawTermData,\n        },\n      }),\n    };\n  }\n\n  try {\n    return { type: 'parsed', parsed: JSON.parse(rawTermData) };\n  } catch (err) {\n    return {\n      type: 'error',\n      error: new ErrorWithFields({\n        message: 'raw term data was not valid JSON data',\n        source: err,\n        fields: {\n          rawTermData,\n        },\n      }),\n    };\n  }\n}\n\ntype TermDataValidationResult =\n  | { type: 'error'; errors: NonEmptyArray<Error>; fallback: TermData }\n  | { type: 'valid'; termData: TermData };\n\nconst isStringArray = (field: unknown): field is string[] =>\n  field != null &&\n  Array.isArray(field) &&\n  field.every((elem) => typeof elem === 'string');\n\nconst isStringStringMap = (field: unknown): field is Record<string, string> =>\n  typeof field === 'object' &&\n  field != null &&\n  Object.keys(field).every((elem) => typeof elem === 'string') &&\n  Object.values(field).every((elem) => typeof elem === 'string');\n\n/**\n * Validates parsed term data, ensuring that it is of the expected shape\n */\nfunction validateTermData(\n  termData: unknown,\n  rawTermData?: string\n): TermDataValidationResult {\n  try {\n    if (\n      termData == null ||\n      typeof termData !== 'object' ||\n      Array.isArray(termData)\n    ) {\n      return {\n        type: 'error',\n        fallback: defaultTermData,\n        errors: [\n          new ErrorWithFields({\n            message: 'term data is the wrong type',\n            fields: {\n              rawTermData,\n              termDataType: typeof termData,\n              termData,\n            },\n          }),\n        ],\n      };\n    }\n\n    const validTermData = { ...defaultTermData };\n\n    // Ensure each field is valid, copying them as we go\n    const termDataAsRecord = termData as Record<string, unknown>;\n    const fieldValidationErrors: Error[] = [];\n    const {\n      desiredCourses,\n      pinnedCrns,\n      excludedCrns,\n      colorMap,\n      sortingOptionIndex,\n    } = termDataAsRecord;\n\n    if (isStringArray(desiredCourses)) {\n      validTermData.desiredCourses = desiredCourses;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.desiredCourses was not a string array',\n          fields: {\n            rawTermData,\n            termData,\n            desiredCourses,\n            fallback: validTermData.desiredCourses,\n          },\n        })\n      );\n    }\n\n    if (isStringArray(pinnedCrns)) {\n      validTermData.pinnedCrns = pinnedCrns;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.pinnedCrns was not a string array',\n          fields: {\n            rawTermData,\n            termData,\n            pinnedCrns,\n            fallback: validTermData.pinnedCrns,\n          },\n        })\n      );\n    }\n\n    if (isStringArray(excludedCrns)) {\n      validTermData.excludedCrns = excludedCrns;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.excludedCrns was not a string array',\n          fields: {\n            rawTermData,\n            termData,\n            excludedCrns,\n            fallback: validTermData.excludedCrns,\n          },\n        })\n      );\n    }\n\n    if (isStringStringMap(colorMap)) {\n      validTermData.colorMap = colorMap;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.colorMap was not a string/string map',\n          fields: {\n            rawTermData,\n            termData,\n            colorMap,\n            fallback: validTermData.colorMap,\n          },\n        })\n      );\n    }\n\n    if (typeof sortingOptionIndex === 'number') {\n      validTermData.sortingOptionIndex = sortingOptionIndex;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.sortingOptionIndex was not a number',\n          fields: {\n            rawTermData,\n            termData,\n            sortingOptionIndex,\n            fallback: validTermData.sortingOptionIndex,\n          },\n        })\n      );\n    }\n\n    if (fieldValidationErrors.length > 0) {\n      return {\n        type: 'error',\n        fallback: validTermData,\n        errors: fieldValidationErrors as NonEmptyArray<Error>,\n      };\n    }\n\n    return { type: 'valid', termData: validTermData };\n  } catch (err) {\n    if (err instanceof Error) {\n      return {\n        type: 'error',\n        fallback: defaultTermData,\n        errors: [\n          new ErrorWithFields({\n            message: 'an unexpected error occurred when parsing term data',\n            source: err,\n            fields: {\n              rawTermData,\n            },\n          }),\n        ],\n      };\n    }\n\n    return {\n      type: 'error',\n      fallback: defaultTermData,\n      errors: [\n        new ErrorWithFields({\n          message: 'an unexpected error occurred when parsing term data',\n          fields: {\n            rawTermData,\n            originalError: err,\n          },\n        }),\n      ],\n    };\n  }\n}\n","import { useState, useEffect } from 'react';\n\nimport { useCookie } from '..';\nimport { ErrorWithFields, softError } from '../../log';\nimport { LoadingState } from '../../types';\n\n/**\n * Gets the currently selected term from cookies,\n * ensuring it is valid before returning a loaded result.\n */\nexport default function useTermFromCookies(\n  terms: string[]\n): LoadingState<[string, (next: string) => void]> {\n  const [term, setTerm] = useCookie('term', terms[0] ?? '');\n  const [unrecoverableError, setUnrecoverableError] = useState<Error | null>(\n    null\n  );\n\n  // Set the term to be the first one if it is unset\n  useEffect(() => {\n    if (!isValidTerm(term, terms)) {\n      const [recentTerm] = terms as [string];\n      if (isValidTerm(recentTerm, terms)) {\n        setTerm(recentTerm);\n      } else {\n        const err = new ErrorWithFields({\n          message: 'most recent term is not valid; can not fallback',\n          fields: {\n            recentTerm,\n            terms,\n          },\n        });\n\n        setUnrecoverableError(err);\n        softError(err);\n      }\n    }\n  }, [terms, term, setTerm]);\n\n  if (unrecoverableError !== null) {\n    return {\n      type: 'error',\n      error: unrecoverableError,\n      stillLoading: false,\n      overview: 'an internal assertion failed when attempting to fall back',\n    };\n  }\n\n  if (!isValidTerm(term, terms)) {\n    return {\n      type: 'loading',\n    };\n  }\n\n  return {\n    type: 'loaded',\n    result: [term, setTerm],\n  };\n}\n\n/**\n * Determines if the given term is considered \"valid\";\n * helps to recover from invalid cookie values if possible.\n */\nfunction isValidTerm(term: string, terms: string[]): boolean {\n  return term !== '' && term !== 'undefined' && terms.includes(term);\n}\n","import React from 'react';\n\nimport {\n  LoadingStateLoading,\n  LoadingStateError,\n  LoadingStateCustom,\n} from '../../types';\nimport { LoadingErrorDetails } from '../ErrorDetails';\nimport ErrorDisplay from '../ErrorDisplay';\nimport ErrorHeader from '../ErrorHeader';\nimport Spinner from '../Spinner';\n\nimport './stylesheet.scss';\n\nexport type LoadingDisplayProps = {\n  state: LoadingStateLoading | LoadingStateError | LoadingStateCustom;\n  name: string;\n};\n\n/**\n * Renders a `LoadingState<T>` value,\n * showing a spinner if the state is loading,\n * and an error otherwise if an error ocurred.\n */\nexport default function LoadingDisplay({\n  state,\n  name,\n}: LoadingDisplayProps): React.ReactElement {\n  let contents: React.ReactNode;\n  if (state.type === 'loading') {\n    contents = (\n      <>\n        <Spinner size=\"normal\" style={{ opacity: 0.6 }} />\n        <h4>Loading</h4>\n        <div>{name}</div>\n      </>\n    );\n  } else if (state.type === 'custom') {\n    // Don't wrap custom contents in the outer div\n    return <>{state.contents}</>;\n  } else if (state.stillLoading) {\n    contents = (\n      <>\n        <Spinner size=\"normal\" style={{ opacity: 0.6 }} />\n        <h4>Loading</h4>\n        <ErrorDisplay\n          errorDetails={\n            <LoadingErrorDetails\n              error={state.error}\n              overview={state.overview}\n              name={name}\n            />\n          }\n        >\n          <div>\n            An error ocurred while loading {name}: {state.overview}\n          </div>\n          <div>\n            The application is retrying in the background, so the issue may\n            resolve itself. If it doesn&apos;t, try refreshing the page.\n          </div>\n        </ErrorDisplay>\n      </>\n    );\n  } else {\n    contents = (\n      <>\n        <ErrorHeader />\n        <ErrorDisplay\n          errorDetails={\n            <LoadingErrorDetails\n              error={state.error}\n              overview={state.overview}\n              name={name}\n            />\n          }\n        >\n          <div>\n            An unrecoverable error ocurred while loading {name}:{' '}\n            {state.overview}\n          </div>\n          <div>Try refreshing the page to see if it fixes the issue.</div>\n        </ErrorDisplay>\n      </>\n    );\n  }\n\n  return <div className=\"loading-display\">{contents}</div>;\n}\n","import React, { useContext } from 'react';\n\nimport { Header, Scheduler, Attribution } from '..';\nimport { ReactErrorDetails } from '../ErrorDetails';\nimport ErrorDisplay from '../ErrorDisplay';\nimport ErrorHeader from '../ErrorHeader';\nimport ErrorBoundary from '../ErrorBoundary';\nimport HeaderDisplay from '../HeaderDisplay';\nimport Map from '../Map';\nimport { AppNavigationContext, AppMobileNav, NAV_TABS } from './navigation';\nimport { classes } from '../../utils';\n\n/**\n * Renders the actual content at the root of the app\n * once it has completely loaded state,\n * including headers & footers.\n */\nexport function AppContent(): React.ReactElement {\n  const { currentTabIndex, setTabIndex, openDrawer } =\n    useContext(AppNavigationContext);\n\n  return (\n    <>\n      <AppMobileNav />\n      <Header\n        currentTab={currentTabIndex}\n        onChangeTab={setTabIndex}\n        onToggleMenu={openDrawer}\n        tabs={NAV_TABS}\n      />\n      <ErrorBoundary\n        fallback={(error, errorInfo): React.ReactElement => (\n          <SkeletonContent>\n            <ErrorHeader />\n            <ErrorDisplay\n              errorDetails={\n                <ReactErrorDetails error={error} errorInfo={errorInfo} />\n              }\n            >\n              <div>\n                There was en error somewhere somewhere in the{' '}\n                {NAV_TABS[currentTabIndex] ?? '?'} tab and it can&apos;t\n                continue.\n              </div>\n              <div>Try refreshing the page to see if it fixes the issue.</div>\n            </ErrorDisplay>\n          </SkeletonContent>\n        )}\n      >\n        {currentTabIndex === 0 && <Scheduler />}\n        {currentTabIndex === 1 && <Map />}\n      </ErrorBoundary>\n      <Attribution />\n    </>\n  );\n}\n\nexport type AppSkeletonWithLoadingTermsProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Renders a non-functional \"skeleton\" of the app\n * that shows as much content as possible without needing valid context values.\n * The term select box is marked as loading and cannot be interacted with.\n */\nexport function AppSkeletonWithLoadingTerms({\n  children,\n}: AppSkeletonWithLoadingTermsProps): React.ReactElement {\n  const { currentTabIndex, setTabIndex, openDrawer } =\n    useContext(AppNavigationContext);\n\n  return (\n    <>\n      <AppMobileNav />\n      <HeaderDisplay\n        currentTab={currentTabIndex}\n        onChangeTab={setTabIndex}\n        onToggleMenu={openDrawer}\n        tabs={NAV_TABS}\n        termsState={{ type: 'loading' }}\n      />\n      {children}\n      <Attribution />\n    </>\n  );\n}\n\nexport type AppSkeletonWithSwitchableTermsProps = {\n  children: React.ReactNode;\n  terms: string[];\n  currentTerm: string;\n  onChangeTerm: (next: string) => void;\n};\n\n/**\n * Renders a non-functional \"skeleton\" of the app\n * that shows as much content as possible without needing valid context values.\n * The term select box can be interacted with.\n */\nexport function AppSkeletonWithSwitchableTerms({\n  children,\n  terms,\n  currentTerm,\n  onChangeTerm,\n}: AppSkeletonWithSwitchableTermsProps): React.ReactElement {\n  const { currentTabIndex, setTabIndex, openDrawer } =\n    useContext(AppNavigationContext);\n\n  return (\n    <>\n      <AppMobileNav />\n      <HeaderDisplay\n        currentTab={currentTabIndex}\n        onChangeTab={setTabIndex}\n        onToggleMenu={openDrawer}\n        tabs={NAV_TABS}\n        termsState={{ type: 'loaded', terms, currentTerm, onChangeTerm }}\n      />\n      {children}\n      <Attribution />\n    </>\n  );\n}\n\nexport type SkeletonContentProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Parent component for any content rendered inside an app skeleton,\n * centering it horizontally and vertically\n * and allowing vertical overflow to be scrolled.\n */\nexport function SkeletonContent({\n  children,\n}: SkeletonContentProps): React.ReactElement {\n  return (\n    <div className={classes('main', 'skeleton')}>\n      <div className=\"skeleton-content\">\n        <div className=\"skeleton-content-inner\">{children}</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useMemo } from 'react';\n\nimport { Oscar } from '../../beans';\nimport { TermContextValue, TermsContext, TermContext } from '../../contexts';\nimport useDownloadOscarData from '../../hooks/data/useDownloadOscarData';\nimport useDownloadTerms from '../../hooks/data/useDownloadTerms';\nimport useTermDataFromCookies from '../../hooks/data/useTermDataFromCookies';\nimport useTermFromCookies from '../../hooks/data/useTermFromCookies';\nimport { TermData } from '../../types';\nimport LoadingDisplay from '../LoadingDisplay';\nimport {\n  AppSkeletonWithLoadingTerms,\n  SkeletonContent,\n  AppSkeletonWithSwitchableTerms,\n} from './content';\n\nexport type LoadTermsProps = {\n  children: (props: { terms: string[] }) => React.ReactNode;\n};\n\n/**\n * Handles loading the list of terms from the GitHub API upon first mount,\n * showing loading and error states as needed.\n * Renders a disabled header & attribution footer even when loading.\n * Once the terms are loaded, this renders `<EnsureValidTerm>` with the terms.\n */\nexport function LoadTerms({ children }: LoadTermsProps): React.ReactElement {\n  const loadingState = useDownloadTerms();\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeletonWithLoadingTerms>\n        <SkeletonContent>\n          <LoadingDisplay state={loadingState} name=\"list of current terms\" />\n        </SkeletonContent>\n      </AppSkeletonWithLoadingTerms>\n    );\n  }\n\n  return <>{children({ terms: loadingState.result })}</>;\n}\n\nexport type EnsureValidTermProps = {\n  terms: string[];\n  children: (props: {\n    term: string;\n    setTerm: (next: string) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles loading the term from cookies and ensuring it has a valid value\n * before passing it to `<LoadOscarData>`.\n */\nexport function EnsureValidTerm({\n  children,\n  terms,\n}: EnsureValidTermProps): React.ReactElement {\n  const loadingState = useTermFromCookies(terms);\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeletonWithLoadingTerms>\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"currently selected term from cookies\"\n          />\n        </SkeletonContent>\n      </AppSkeletonWithLoadingTerms>\n    );\n  }\n\n  const [term, setTerm] = loadingState.result;\n  return <>{children({ term, setTerm })}</>;\n}\n\n/**\n * Loads the instance of the `Oscar` bean from the crawled data,\n * showing loading and error states as needed.\n * Renders a disabled header & attribution footer even when loading.\n * Once the oscar bean is loaded, this renders `<EnsureValidTermData>`\n * with the data.\n */\nexport type LoadOscarDataProps = {\n  terms: string[];\n  term: string;\n  setTerm: (next: string) => void;\n  children: (props: { oscar: Oscar }) => React.ReactNode;\n};\n\nexport function LoadOscarData({\n  terms,\n  term,\n  setTerm,\n  children,\n}: LoadOscarDataProps): React.ReactElement {\n  const loadingState = useDownloadOscarData(term);\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeletonWithSwitchableTerms\n        terms={terms}\n        currentTerm={term}\n        onChangeTerm={setTerm}\n      >\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"Oscar course data for the current term\"\n          />\n        </SkeletonContent>\n      </AppSkeletonWithSwitchableTerms>\n    );\n  }\n\n  return <>{children({ oscar: loadingState.result })}</>;\n}\n\nexport type EnsureValidTermDataProps = {\n  terms: string[];\n  term: string;\n  setTerm: (next: string) => void;\n  oscar: Oscar;\n  children: (props: {\n    termData: TermData;\n    patchTermData: (patch: Partial<TermData>) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles loading term data from cookies and ensuring it has a valid value\n * before passing it to `<AppContextProvider>`\n */\nexport function EnsureValidTermData({\n  terms,\n  term,\n  setTerm,\n  oscar,\n  children,\n}: EnsureValidTermDataProps): React.ReactElement {\n  // This hook doesn't support changing `term` without the parent context\n  // (this component) un-mounting & re-mounting.\n  // Luckily, whenever the term is changed, `oscar` is invalidated and reloaded,\n  // which causes this component to not be rendered until it is loaded again.\n  const loadingState = useTermDataFromCookies(term, oscar);\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeletonWithSwitchableTerms\n        terms={terms}\n        currentTerm={term}\n        onChangeTerm={setTerm}\n      >\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"saved schedule from cookies\"\n          />\n        </SkeletonContent>\n      </AppSkeletonWithSwitchableTerms>\n    );\n  }\n\n  const [termData, patchTermData] = loadingState.result;\n  return <>{children({ termData, patchTermData })}</>;\n}\n\nexport type AppContextProviderProps = {\n  terms: string[];\n  term: string;\n  setTerm: (next: string) => void;\n  oscar: Oscar;\n  termData: TermData;\n  patchTermData: (patch: Partial<TermData>) => void;\n  children: React.ReactNode;\n};\n\n/**\n * Handles making all loaded data available to the rest of the app\n * via the contexts `TermsContext` and `TermContext`.\n */\nexport function AppContextProvider({\n  terms,\n  term,\n  setTerm,\n  oscar,\n  termData,\n  patchTermData,\n  children,\n}: AppContextProviderProps): React.ReactElement {\n  // Memoize context values so that their references are stable\n  const termContextValue = useMemo<TermContextValue>(\n    () => [\n      { term, oscar, ...termData },\n      { setTerm, patchTermData },\n    ],\n    [term, oscar, termData, setTerm, patchTermData]\n  );\n\n  return (\n    <TermsContext.Provider value={terms}>\n      <TermContext.Provider value={termContextValue}>\n        {children}\n      </TermContext.Provider>\n    </TermsContext.Provider>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState, useRef } from 'react';\n\nimport { Oscar } from '../../beans';\nimport { ErrorWithFields, softError } from '../../log';\nimport { CrawlerTermData, LoadingState } from '../../types';\nimport {\n  Cancellable,\n  exponentialBackoff,\n  isAxiosNetworkError,\n  sleep,\n} from '../../utils';\n\nconst constructTermDataUrl = (term: string): string =>\n  `https://gt-scheduler.github.io/crawler/${term}.json`;\n\n// Number of minutes between re-downloads of the oscar data\nconst REFRESH_INTERVAL_MIN = 15;\n\n/**\n * Downloads the crawled data from Oscar that the crawler prepared\n * for the given term.\n * Repeatedly attempts to load in the case of errors,\n * and cancels any in-flight downloads if the parent context is unmounted\n * or the term is changed.\n * Once loaded, this also attempts to update the data every 15 minutes\n * in case the crawler has run again and there is updated data.\n * @param term - The term to fetch crawler data for\n */\nexport default function useDownloadOscarData(\n  term: string\n): LoadingState<Oscar> {\n  const [state, setState] = useState<LoadingState<Oscar>>({\n    type: 'loading',\n  });\n\n  // Keep a ref of the latest loaded Oscar\n  // to check if it is any newer than the current one.\n  const loadedOscarRef = useRef<Oscar | null>(null);\n\n  // Fetch the current term's crawler information\n  useEffect(() => {\n    const loadOperation = new Cancellable();\n    const url = constructTermDataUrl(term);\n\n    async function loadAndRefresh(): Promise<void> {\n      let isFirst = true;\n      while (!loadOperation.isCancelled) {\n        // Load the oscar data, showing errors only if this is the first time\n        // it is being loaded (otherwise, just log errors\n        // but don't disrupt the user). This is to prevent\n        // a background refresh from showing an error screen\n        // in the middle of a session.\n        // `load` will return early if it is cancelled\n        await load({ showErrors: isFirst });\n        if (loadOperation.isCancelled) return;\n\n        // Sleep for the refresh interval,\n        // exiting early if cancelled\n        const result = await Promise.race([\n          loadOperation.promise,\n          sleep({ amount_ms: REFRESH_INTERVAL_MIN * 60 * 1000 }),\n        ]);\n\n        if (result === loadOperation.cancelledSymbol) {\n          return;\n        }\n\n        isFirst = false;\n      }\n    }\n\n    async function load({\n      showErrors,\n    }: {\n      showErrors: boolean;\n    }): Promise<void> {\n      setState({\n        type: 'loading',\n      });\n\n      let attemptNumber = 1;\n      while (!loadOperation.isCancelled) {\n        try {\n          const result = await Promise.race([\n            loadOperation.promise,\n            axios.get<CrawlerTermData>(url),\n          ]);\n\n          if (result === loadOperation.cancelledSymbol) {\n            return;\n          }\n\n          const json = (result as Exclude<typeof result, symbol>).data;\n\n          // If the data is the same as the currently loaded data,\n          // skip loading it\n          if (\n            loadedOscarRef.current !== null &&\n            new Date(json.updatedAt).getTime() ===\n              loadedOscarRef.current?.updatedAt.getTime()\n          ) {\n            // Skip this update\n            return;\n          }\n\n          const oscar = new Oscar(json, term);\n          setState({\n            type: 'loaded',\n            result: oscar,\n          });\n          loadedOscarRef.current = oscar;\n\n          return;\n        } catch (err) {\n          // Report the error to Sentry if not a network error\n          if (!isAxiosNetworkError(err)) {\n            softError(\n              new ErrorWithFields({\n                message: 'error fetching crawler data',\n                source: err,\n                fields: {\n                  term,\n                  url,\n                },\n              })\n            );\n          }\n\n          if (showErrors) {\n            // Flag that an error has occurred\n            setState({\n              type: 'error',\n              error: err instanceof Error ? err : new Error(err),\n              stillLoading: true,\n              overview: String(err),\n            });\n          }\n        }\n\n        // Sleep for an exponential backoff between each retry\n        await exponentialBackoff(attemptNumber);\n        attemptNumber += 1;\n      }\n    }\n\n    loadAndRefresh().catch((err) => {\n      softError(\n        new ErrorWithFields({\n          message: 'error loading and refreshing oscar data',\n          source: err,\n          fields: {\n            term,\n            url,\n          },\n        })\n      );\n    });\n\n    // Cancel the background load when this cleans up\n    return (): void => {\n      loadOperation.cancel();\n    };\n  }, [term, setState]);\n\n  // If we are about to start a new background load\n  // after the term changed, then don't return a loaded Oscar\n  if (state.type === 'loaded' && state.result.term !== term) {\n    return { type: 'loading' };\n  }\n\n  return state;\n}\n","import React, { useEffect, useMemo } from 'react';\n\nimport { classes } from '../../utils';\nimport Feedback from '../Feedback';\nimport { useBodyClass, useCookie, useMobile } from '../../hooks';\nimport { ThemeContext, ThemeContextValue } from '../../contexts';\nimport { isTheme } from '../../types';\nimport { useInformationModal } from '../InformationModal';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { ReactErrorDetails } from '../ErrorDetails';\nimport ErrorDisplay from '../ErrorDisplay';\nimport ErrorHeader from '../ErrorHeader';\nimport { AppNavigation } from './navigation';\nimport {\n  LoadTerms,\n  EnsureValidTerm,\n  LoadOscarData,\n  EnsureValidTermData,\n  AppContextProvider,\n} from './data';\nimport {\n  AppSkeletonWithLoadingTerms,\n  SkeletonContent,\n  AppContent,\n} from './content';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function App(): React.ReactElement {\n  // Display a popup when first visiting the site\n  useInformationModal();\n\n  return (\n    <ThemeLoader>\n      <AppCSSRoot>\n        <ErrorBoundary\n          fallback={(error, errorInfo): React.ReactElement => (\n            <AppSkeletonWithLoadingTerms>\n              <SkeletonContent>\n                <ErrorHeader />\n                <ErrorDisplay\n                  errorDetails={\n                    <ReactErrorDetails error={error} errorInfo={errorInfo} />\n                  }\n                >\n                  <div>\n                    There was en error somewhere in the core application logic\n                    and it can&apos;t continue.\n                  </div>\n                  <div>\n                    Try refreshing the page to see if it fixes the issue.\n                  </div>\n                </ErrorDisplay>\n              </SkeletonContent>\n            </AppSkeletonWithLoadingTerms>\n          )}\n        >\n          <AppNavigation>\n            {/* LoadTerms is the start in a chain of components that handles\n                loading all data for the app and controlling state\n                (some of which is persisted in cookies).\n                It allows for more explicit data flows and dependencies,\n                and promotes better loading and error states/handling. */}\n            <LoadTerms>\n              {({ terms }): React.ReactNode => (\n                <EnsureValidTerm terms={terms}>\n                  {({ term, setTerm }): React.ReactNode => (\n                    <LoadOscarData terms={terms} term={term} setTerm={setTerm}>\n                      {({ oscar }): React.ReactNode => (\n                        <EnsureValidTermData\n                          terms={terms}\n                          term={term}\n                          setTerm={setTerm}\n                          oscar={oscar}\n                        >\n                          {({ termData, patchTermData }): React.ReactNode => (\n                            <AppContextProvider\n                              terms={terms}\n                              term={term}\n                              setTerm={setTerm}\n                              oscar={oscar}\n                              termData={termData}\n                              patchTermData={patchTermData}\n                            >\n                              <AppContent />\n                            </AppContextProvider>\n                          )}\n                        </EnsureValidTermData>\n                      )}\n                    </LoadOscarData>\n                  )}\n                </EnsureValidTerm>\n              )}\n            </LoadTerms>\n          </AppNavigation>\n          <Feedback />\n        </ErrorBoundary>\n      </AppCSSRoot>\n    </ThemeLoader>\n  );\n}\n\n// Private sub-components\n\ntype ThemeLoaderProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Provides the current UI theme to all children (via context),\n * ensuring that it is one of the valid values in `Theme`.\n */\nfunction ThemeLoader({ children }: ThemeLoaderProps): React.ReactElement {\n  const [theme, setTheme] = useCookie('theme', 'dark');\n  const correctedTheme = isTheme(theme) ? theme : 'dark';\n\n  // Ensure that the stored theme is valid; otherwise reset it\n  useEffect(() => {\n    if (theme !== correctedTheme) {\n      setTheme(correctedTheme);\n    }\n  }, [theme, correctedTheme, setTheme]);\n\n  const themeContextValue = useMemo<ThemeContextValue>(\n    () => [correctedTheme, setTheme],\n    [correctedTheme, setTheme]\n  );\n\n  // Add the current theme as a class on the body element\n  useBodyClass(theme);\n\n  return (\n    <ThemeContext.Provider value={themeContextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\ntype AppCSSRootProps = {\n  children?: React.ReactNode;\n};\n\n/**\n * Mounts the outer `div.App` that is used to control global CSS selectors\n * such as `.App.mobile`.\n */\nfunction AppCSSRoot({ children }: AppCSSRootProps): React.ReactElement {\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = useMobile();\n\n  return <div className={classes('App', mobile && 'mobile')}>{children}</div>;\n}\n","import { useLayoutEffect } from 'react';\n\n/**\n * Adds the given class(es) to the HTML `body` element\n * when this hook runs.\n */\nexport default function useBodyClass(className: string | string[]): void {\n  useLayoutEffect(() => {\n    if (typeof className === 'string') {\n      document.body.classList.add(className);\n    } else {\n      document.body.classList.add(...className);\n    }\n\n    return (): void => {\n      if (typeof className === 'string') {\n        document.body.classList.remove(className);\n      } else {\n        document.body.classList.remove(...className);\n      }\n    };\n  }, [className]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport App from './components/App';\n\nimport 'normalize.css';\nimport './stylesheet.scss';\n\n// Only initialize sentry on production\nif (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line no-console\n  console.log('Initializing Sentry');\n  Sentry.init({\n    dsn: 'https://8955ef982197469e97c7644a8c090db1@o552970.ingest.sentry.io/5679614',\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n    ignoreErrors: ['ResizeObserver loop limit exceeded'],\n    release: process.env['REACT_APP_SENTRY_VERSION'],\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}