{"version":3,"sources":["constants.ts","utils.ts","components/Button/index.tsx","components/ActionRow/index.tsx","types.ts","contexts/index.ts","components/Calendar/index.js","components/CombinationContainer/index.js","components/Comparison/index.js","components/Course/index.js","components/CourseAdd/index.js","components/CourseContainer/index.js","components/CourseFilter/index.js","libs/ics.js","hooks/useCookie.js","hooks/useMobile.js","components/Header/index.tsx","components/Instructor/index.js","components/MapView/index.js","components/DaySelection/index.tsx","components/Map/index.js","components/NavDrawer/index.tsx","components/NavMenu/index.tsx","components/Palette/index.js","components/Prerequisite/index.js","components/Scheduler/index.js","components/Section/index.js","components/Select/index.js","components/Tab/index.tsx","components/TimeBlocks/index.js","components/Attribution/index.js","beans/Oscar.ts","beans/Course.ts","beans/Section.ts","beans/SortingOption.ts","beans/Feedback.ts","components/Feedback/index.js","components/App/index.js","hooks/useJsonCookie.js","index.js"],"names":["OPEN","DAYS","PALETTE","DELIVERY_MODES","CAMPUSES","Video","Online","BACKEND_BASE_URL","stringToTime","string","regexResult","exec","hour","minute","timeToString","time","ampm","hh","mm","padStart","A","timeToShortString","periodToString","period","start","end","getRandomColor","colors","flat","Math","random","length","getContentClassName","color","parseInt","substring","hasConflictBetween","section1","section2","meetings","some","meeting1","meeting2","day","days","includes","classes","classList","filter","c","join","isMobile","window","innerWidth","simplifyName","name","tokens","split","shift","pop","unique","array","Array","from","Set","isLab","section","type","scheduleType","isLecture","getSemesterName","term","year","semester","Number","humanizeArray","conjunction","init","last","decryptReqs","reqs","openPar","closePar","i","isArray","subClauses","forEach","req","id","Button","className","disabled","href","onClick","children","rel","target","tabIndex","onKeyDown","event","key","role","ActionRow","label","actions","restProps","action","map","icon","styling","dataTip","dataFor","onMouseEnter","onMouseLeave","rest","fixedWidth","style","defaultTermData","desiredCourses","pinnedCrns","excludedCrns","colorMap","sortingOptionIndex","ThemeContext","React","createContext","TermsContext","TermContext","oscar","setTerm","setOscar","patchTermData","OverlayCrnsContext","Calendar","overlayCrns","preview","capture","isAutosized","useContext","crnSizeInfo","updateJoinedRowSizes","periodInfos","seen","curCrn","curPeriod","newRowSize","has","add","period2Info","rowSize","crn","crns","maxMeetingLen","max","findSection","m","sort","a","b","meeting","dayPeriodInfos","Object","values","curRowSize","reduce","acc","rowIndex","fill","_","TimeBlocks","sizeInfo","overlay","CombinationContainer","setOverlayCrns","handleResetPinnedCrns","useCallback","confirm","combinations","useMemo","getCombinations","sortedCombinations","sortCombinations","Select","onChange","value","options","sortingOptions","sortingOption","width","height","outline","rowCount","rowHeight","rowRenderer","index","Course","courseId","onAddCourse","useState","expanded","setExpanded","prereqOpen","setPrereqOpen","paletteShown","setPaletteShown","gpaMap","setGpaMap","isSearching","Boolean","useEffect","findCourse","fetchGpa","then","handleRemoveCourse","course","sections","undefined","handleIncludeSections","contentClassName","hasPrereqs","version","prereqs","slice","every","prereq","instructorMap","instructors","primaryInstructor","push","keys","excludedInstructors","instructor","includedInstructors","prereqControl","pre","exp","prereqAction","faShareAlt","transform","infoAction","faInfoCircle","subject","number","pinnedSections","totalCredits","credits","backgroundColor","faPlus","faAngleUp","faAngleDown","faPalette","faTrash","dangerouslySetInnerHTML","__html","title","averageGpa","toFixed","Palette","onSelectColor","col","Instructor","gpa","Prerequisite","isHeader","option","isEmpty","CourseAdd","keyword","setKeyword","deliveryMode","campus","setFilter","activeIndex","setActiveIndex","inputRef","useRef","handleChangeKeyword","e","input","trim","results","match","courses","toUpperCase","keywordMatch","startsWith","filterMatch","entries","tags","handleAddCourse","toBeExcludedCrns","timeDecided","current","focus","handleKeyDown","min","preventDefault","handleToggleFilter","tag","v","handleResetFilter","activeCourse","ref","placeholder","property","labels","CourseFilter","selectedTags","onReset","onToggle","CourseContainer","expandable","ago","updatedAt","ics","uidDomain","prodId","navigator","userAgent","indexOf","SEPARATOR","appVersion","calendarEvents","calendarStart","calendarEnd","BYDAY_VALUES","events","calendar","addEvent","description","location","begin","stop","rrule","freq","Error","until","isNaN","Date","parse","interval","count","byday","prototype","toString","call","d","elem","pos","start_date","end_date","now_date","start_year","getFullYear","start_month","getMonth","start_day","getDate","start_hours","getHours","start_minutes","getMinutes","start_seconds","getSeconds","end_year","end_month","end_day","end_hours","end_minutes","end_seconds","now_year","now_month","now_day","now_hours","now_minutes","now_seconds","start_time","end_time","rruleString","now","uDate","toISOString","replace","calendarEvent","splice","download","filename","ext","blob","Blob","bb","BlobBuilder","append","getBlob","document","characterSet","saveAs","build","console","log","useCookie","defaultValue","setValue","setCookieValue","val","Cookies","set","expires","get","useMobile","mobile","setMobile","handleResize","newMobile","addEventListener","removeEventListener","Header","currentTab","onChangeTab","onToggleMenu","tabs","terms","theme","setTheme","captureRef","handleThemeChange","newTheme","crnSection","handleExport","cal","dateRange","to","where","getTime","getDay","setDate","setHours","M","T","W","R","F","alert","handleDownload","captureElement","computed","getComputedStyle","getPropertyValue","domtoimage","toBlob","offsetWidth","offsetHeight","crnButton","faBars","currentTerm","tabLabel","tabIdx","active","faDownload","faCalendarAlt","faPaste","place","effect","delayHide","afterShow","copy","setTimeout","ReactTooltip","hide","faAdjust","faGithub","includeSection","excludeSections","sectionList","instructorPinned","includedSections","excludedSections","faGraduationCap","encodeURIComponent","faBan","pinned","MapView","locations","latitude","longitude","zoom","viewport","setViewport","unknown","coords","showZoom","showCompass","mapStyle","mapboxApiAccessToken","process","onViewportChange","display","lat","long","faMapPin","Fragment","DaySelection","courseDateMap","activeDay","setActiveDay","colorPalette","daysOfTheWeek","formatTime","floor","adjustedHour","String","date","padding","daysOfWeek","times","Map","info","crnMap","activeLocations","loc","NavDrawer","open","onClose","faTimes","NavMenu","items","currentItem","onChangeItem","item","idx","paletteColor","isLast","reqStyle","fontSize","subreqs","Scheduler","setTabIndex","overlayContextValue","tabTitle","Provider","Section","seating","setSeating","hovering","excludeSection","sect","pinSection","faThumbtack","faChair","fetchSeating","afterHide","opened","setOpened","selectedOption","find","faCaretDown","Tab","top","left","Attribution","Oscar","data","periods","dateRanges","scheduleTypes","campuses","attributes","gradeBases","courseMap","caches","this","SortingOption","combination","startMap","endMap","tot","ends","starts","crnsList","dfs","courseIndex","isIncluded","isPinned","hasConflict","hasLab","pinnedOnlyLecture","onlyLectures","pinnedOnlyLab","onlyLabs","pinnedAllInOne","allInOnes","associatedLabs","lab","associatedLectures","lecture","sectionGroups","sectionGroup","iterateTimeBlocks","factor","calculateFactor","callback","sectionId","lonelyLectures","lonelyLabs","distinct","groups","sectionGroupMeetings","sectionGroupHash","JSON","stringify","hash","encodedCourse","axios","url","method","response","header","avg_gpa","raw","datum","instructor_name","GPA","lastName","firstName","fullName","catch","err","error","gradeBasis","scheduleTypeIndex","campusIndex","attributeIndices","gradeBasisIndex","attributeIndex","attribute","periodIndex","locationIndex","dateRangeIndex","accum","prevDate","currDate","headers","tableRow","cheerio","load","$","eq","first","text","FormSubmit","rating","feedback","Feedback","submit","setSubmit","setRating","setFeedback","loading","setLoading","onMouse","faCommentAlt","size","marginLeft","marginRight","NAV_TABS","App","setTerms","rawValue","setRawValue","parsedValue","patchValue","patch","rawVal","useJsonCookie","termData","filteredTermData","crnFilter","themeContextValue","termsContextValue","termContextValue","cookieKey","swal","button","content","alt","src","res","newOscar","newTerms","test","reverse","recentTerm","currentTabIndex","isDrawerOpen","setIsDrawerOpen","openDrawer","closeDrawer","fallback","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2256a859.chunk.js","sourcesContent":["const OPEN = 8 * 60;\nconst CLOSE = 21 * 60;\nconst DAYS = ['M', 'T', 'W', 'R', 'F'];\n\nconst PNG_SCALE_FACTOR = 2;\n\nconst PALETTE = [\n  [\n    '#4D4D4D',\n    '#999999',\n    '#FFFFFF',\n    '#F44E3B',\n    '#FE9200',\n    '#FCDC00',\n    '#DBDF00',\n    '#A4DD00',\n    '#68CCCA',\n    '#73D8FF',\n    '#AEA1FF',\n    '#FDA1FF'\n  ],\n  [\n    '#333333',\n    '#808080',\n    '#CCCCCC',\n    '#D33115',\n    '#E27300',\n    '#FCC400',\n    '#B0BC00',\n    '#68BC00',\n    '#16A5A5',\n    '#009CE0',\n    '#7B64FF',\n    '#FA28FF'\n  ],\n  [\n    '#000000',\n    '#666666',\n    '#B3B3B3',\n    '#9F0500',\n    '#C45100',\n    '#FB9E00',\n    '#808900',\n    '#194D33',\n    '#0C797D',\n    '#0062B1',\n    '#653294',\n    '#AB149E'\n  ]\n];\n\nconst ASYNC_DELIVERY_MODE = 'Remote Asynchronous Course';\n\nconst DELIVERY_MODES = {\n  'Hybrid Course': 'Hybrid',\n  'Remote Synchronous Course': 'Remote Synchronous',\n  'Remote Asynchronous Course': 'Remote Asynchronous',\n  'Residential Course': 'Residential'\n};\n\nconst CAMPUSES = {\n  'Georgia Tech-Atlanta *': 'Atlanta',\n  'GT Lorraine-Undergrad Programs': 'Lorraine Undergrad',\n  'GT Lorraine-Graduate Programs': 'Lorraine Graduate',\n  'Georgia Tech - Shenzhen': 'Shenzhen',\n  Video: 'Video',\n  Online: 'Online',\n  'MBA Evening Program': 'MBA Evening'\n};\n\nconst BACKEND_BASE_URL = 'https://gt-scheduler.azurewebsites.net';\n\nexport {\n  OPEN,\n  CLOSE,\n  DAYS,\n  PNG_SCALE_FACTOR,\n  PALETTE,\n  ASYNC_DELIVERY_MODE,\n  DELIVERY_MODES,\n  CAMPUSES,\n  BACKEND_BASE_URL\n};\n","import { Section } from './beans';\nimport { DAYS, PALETTE } from './constants';\nimport { Period, PrerequisiteClause, PrerequisiteCourse } from './types';\n\nconst stringToTime = (string: string): number => {\n  const regexResult = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  if (regexResult === null) return 0;\n  const [, hour, minute, ampm] = regexResult;\n  return ((ampm === 'p' ? 12 : 0) + (+hour % 12)) * 60 + +minute;\n};\n\nconst timeToString = (time: number, ampm: boolean = true): string => {\n  const hour = (time / 60) | 0;\n  const minute = time % 60;\n  const hh = hour > 12 ? hour - 12 : hour;\n  const mm = `${minute}`.padStart(2, '0');\n  const A = `${hour < 12 ? 'a' : 'p'}m`;\n  return ampm ? `${hh}:${mm} ${A}` : `${hh}:${mm}`;\n};\n\nconst timeToShortString = (time: number): string => {\n  const hour = (time / 60) | 0;\n  return `${hour > 12 ? hour - 12 : hour}${hour < 12 ? 'a' : 'p'}m`;\n};\n\nconst periodToString = (period: Period): string =>\n  period\n    ? `${timeToString(period.start, false)} - ${timeToString(period.end)}`\n    : 'TBA';\n\nconst getRandomColor = (): string => {\n  const colors = PALETTE.flat();\n  const index = (Math.random() * colors.length) | 0;\n  return colors[index];\n};\n\nconst getContentClassName = (color: string): string => {\n  const r = parseInt(color.substring(1, 3), 16);\n  const g = parseInt(color.substring(3, 5), 16);\n  const b = parseInt(color.substring(5, 7), 16);\n  return r * 0.299 + g * 0.587 + b * 0.114 > 128\n    ? 'light-content'\n    : 'dark-content';\n};\n\nconst hasConflictBetween = (section1: Section, section2: Section): boolean =>\n  section1.meetings.some((meeting1) =>\n    section2.meetings.some(\n      (meeting2) =>\n        meeting1.period &&\n        meeting2.period &&\n        DAYS.some(\n          (day) => meeting1.days.includes(day) && meeting2.days.includes(day)\n        ) &&\n        meeting1.period.start < meeting2.period.end &&\n        meeting2.period.start < meeting1.period.end\n    )\n  );\n\nconst classes = (...classList: (string | boolean | null | undefined)[]) =>\n  classList.filter((c) => c).join(' ');\n\nconst isMobile = (): boolean => window.innerWidth < 1024;\n\nconst simplifyName = (name: string): string => {\n  const tokens = name.split(' ');\n  const firstName = tokens.shift();\n  const lastName = tokens.pop();\n  return [firstName, lastName].join(' ');\n};\n\nconst unique = <T>(array: T[]): T[] => Array.from(new Set(array));\n\nconst isLab = (section: Section): boolean =>\n  ['Lab', 'Studio'].some((type) => section.scheduleType.includes(type));\n\nconst isLecture = (section: Section): boolean =>\n  section.scheduleType.includes('Lecture');\n\nconst getSemesterName = (term: string): string => {\n  const year = term.substring(0, 4);\n  const semester = (() => {\n    switch (Number.parseInt(term.substring(4), 10)) {\n      case 1:\n        return 'Winter';\n      case 2:\n      case 3:\n        return 'Spring';\n      case 5:\n      case 6:\n        return 'Summer';\n      case 8:\n      case 9:\n        return 'Fall';\n      default:\n        return 'Unknown';\n    }\n  })();\n  return `${semester} ${year}`;\n};\n\nconst humanizeArray = <T>(array: T[], conjunction: string = 'and'): string => {\n  if (array.length <= 2) {\n    return array.join(` ${conjunction} `);\n  }\n  const init = [...array];\n  const last = init.pop();\n  return `${init.join(', ')}, ${conjunction} ${last}`;\n};\n\nconst decryptReqs = (\n  reqs: PrerequisiteClause,\n  openPar: boolean = false,\n  closePar: boolean = false\n): string => {\n  // This function accepts the index of a sub-clause\n  // from the sub-clause slice of a compound prereq clause\n  // (i.e. the [...sub-clauses] part of a clause\n  // that itself is of the form [operator, ...sub-clauses]).\n  // As such, we compare to the clause length - 2\n  // (since the sub-clauses[0] is really reqs[1])\n  const last = (i: number) => Array.isArray(reqs) && i === reqs.length - 2;\n  let string = '';\n\n  if (!Array.isArray(reqs)) {\n    string += (openPar ? '(' : '') + reqs.id + (closePar ? ')' : '');\n  } else if (reqs[0] === 'and') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string += decryptReqs(req, i === 0, last(i)) + (last(i) ? '' : ' and ');\n    });\n  } else if (reqs[0] === 'or') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string += decryptReqs(req) + (last(i) ? '' : ' or ');\n    });\n  } else {\n    // TODO(jazevedo620) 08-24-2021: under what conditions is this code run?\n    // It seems like (if `reqs` is indeed of type `PrerequisiteClause`)\n    // that this code isn't run, but I'm wary of removing it for now\n    // until types are added to the dependent `<Prerequisite>` component.\n    (reqs as PrerequisiteCourse[]).forEach((req, i) => {\n      string += req.id + (i === reqs.length - 1 ? '' : ' or ');\n    });\n  }\n\n  return string;\n};\n\nexport {\n  stringToTime,\n  timeToString,\n  timeToShortString,\n  periodToString,\n  getRandomColor,\n  getContentClassName,\n  hasConflictBetween,\n  classes,\n  isMobile,\n  simplifyName,\n  unique,\n  isLab,\n  isLecture,\n  getSemesterName,\n  humanizeArray,\n  decryptReqs\n};\n","import React from 'react';\nimport { classes } from '../../utils';\nimport './stylesheet.scss';\n\nexport type ButtonProps = {\n  className?: string;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  children?: React.ReactNode;\n};\n\nexport default function Button({\n  className,\n  disabled = false,\n  href,\n  onClick,\n  children\n}: ButtonProps) {\n  if (disabled)\n    return (\n      <div className={classes('Button', 'disabled', className)}>{children}</div>\n    );\n\n  if (href != null)\n    return (\n      <a\n        className={classes('Button', className)}\n        href={href}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {children}\n      </a>\n    );\n\n  return (\n    <div\n      className={classes('Button', className)}\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={(event) => {\n        // Intercept enter presses\n        if (event.key === 'Enter' && onClick != null) onClick();\n      }}\n      role=\"button\"\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { classes } from '../../utils';\nimport Button, { ButtonProps } from '../Button';\n\nimport './stylesheet.scss';\n\ntype FontAwesomeProps = React.ComponentProps<typeof FontAwesomeIcon>;\nexport type Action = {\n  icon: FontAwesomeProps['icon'];\n  styling?: React.CSSProperties;\n  dataTip?: string;\n  dataFor?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n} & Omit<ButtonProps, 'children'>;\n\ntype BaseActionRowProps = {\n  label: string;\n  actions: Action[];\n  className?: string;\n  children?: React.ReactNode;\n};\nexport type ActionRowProps = BaseActionRowProps &\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof BaseActionRowProps>;\n\nexport default function ActionRow({\n  className,\n  label,\n  children,\n  actions,\n  ...restProps\n}: ActionRowProps) {\n  return (\n    <div className={classes('ActionRow', className)} {...restProps}>\n      <div className=\"action-row-header\">\n        <div className=\"label\">{label}</div>\n        <div className={classes('actions', 'default')}>\n          {actions\n            .filter((action) => action)\n            .map(\n              (\n                {\n                  icon,\n                  styling,\n                  dataTip,\n                  dataFor,\n                  onMouseEnter,\n                  onMouseLeave,\n                  ...rest\n                },\n                i\n              ) => (\n                <Button className=\"action\" {...rest} key={i}>\n                  <FontAwesomeIcon\n                    fixedWidth\n                    style={styling}\n                    icon={icon}\n                    data-tip={dataTip}\n                    data-for={dataFor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                  />\n                </Button>\n              )\n            )}\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n}\n","export type Theme = 'light' | 'dark';\n\n// TODO ensure types are correct\nexport type TermData = {\n  desiredCourses: string[];\n  pinnedCrns: string[];\n  excludedCrns: string[];\n  colorMap: Record<string, string | undefined>;\n  sortingOptionIndex: number;\n};\n\nexport const defaultTermData: TermData = {\n  desiredCourses: [],\n  pinnedCrns: [],\n  excludedCrns: [],\n  colorMap: {},\n  sortingOptionIndex: 0\n};\n\n// Declare (better) types for the ICS library\nexport type ICS = {\n  download(filename: string, ext?: string): string | false;\n  addEvent(\n    subject: string,\n    description: string,\n    location: string,\n    begin: string | Date,\n    stop: string | Date,\n    rrule: any\n  ): false | string[];\n};\n\nexport interface Combination {\n  crns: string[];\n  startMap: Record<string, number>;\n  endMap: Record<string, number>;\n}\n\nexport interface Period {\n  start: number;\n  end: number;\n}\n\nexport interface DateRange {\n  from: Date;\n  to: Date;\n}\n\nexport interface Location {\n  lat: number;\n  long: number;\n}\n\nexport interface Meeting {\n  period: Period | undefined;\n  days: string[];\n  where: string;\n  location: Location | null;\n  instructors: string[];\n  dateRange: DateRange;\n}\n\nexport interface CourseGpa {\n  averageGpa?: number;\n  [instructor: string]: number | undefined;\n}\n\n// Meeting type (imported as `CrawlerMeeting`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type CrawlerMeeting = [\n  /**\n   * an integer index into `caches.periods`,\n   * specifying the class's start/end times\n   */\n  periodIndex: number,\n  /**\n   * a string specifying what days the class takes place on\n   * (e.g. `\"MW\"` or `\"TR\"`)\n   */\n  days: string,\n  /**\n   * a string giving the room/location where the course will be held\n   * (e.g. `\"College of Business 224\"`)\n   */\n  room: string,\n  /**\n   * an integer index into `caches.locations`,\n   * containing the latitude and longitude for a given course\n   */\n  locationIndex: number,\n  /**\n   * an array of strings listing all the instructors for this section,\n   * along with a 1-character code to mark the principal instructor\n   * (e.g. `[\"Katarzyna Rubar (P)\"]`)\n   */\n  instructors: string[],\n  /**\n   * an integer index into `caches.dateRanges`,\n   * specifying the start/end date of the class this semester\n   */\n  dateRangeIndex: number\n];\n\n// Section type (imported as `CrawlerSection`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains  information about the course's section\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerSection = [\n  /**\n   * the CRN number of this section of the course\n   */\n  crn: string,\n  /**\n   * array of information about the section's meeting\n   * times/places/professors/etc.; in most cases, this array will only contain\n   * 1 item\n   */\n  meetings: CrawlerMeeting[],\n  /**\n   * integer number of credit hours this course is worth\n   */\n  creditHours: number,\n  /**\n   * integer index into `caches.scheduleTypes`\n   */\n  scheduleTypeIndex: number,\n  /**\n   * integer index into `caches.campuses`,\n   * specifying which campus the class is being taught at\n   */\n  campusIndex: number,\n  /**\n   * array of integer indices into `caches.attributes`,\n   * specifying any additional attributes the course has\n   */\n  attributeIndices: number[],\n  /**\n   * integer index into caches.gradeBases,\n   * specifying the grading scheme of the class\n   */\n  gradeBaseIndex: number\n];\n\n// Prerequisite types:\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type MinimumGrade = 'A' | 'B' | 'C' | 'D' | 'T';\nexport type PrerequisiteCourse = { id: string; grade?: MinimumGrade };\n// Recursive definition: disable lint rule\n// eslint-disable-next-line no-use-before-define\nexport type PrerequisiteClause = PrerequisiteCourse | PrerequisiteSet;\nexport type PrerequisiteOperator = 'and' | 'or';\nexport type PrerequisiteSet = [\n  operator: PrerequisiteOperator,\n  ...clauses: PrerequisiteClause[]\n];\n\n/**\n * Recursive data structure that is the sequence of all prerequisites in prefix\n * notation, parsed from the information on Oscar\n *\n * @example\n *\n * ```json\n   [\n     \"and\",\n     [\n       \"or\",\n       {\"id\":\"CS 3510\", \"grade\":\"C\"},\n       {\"id\":\"CS 3511\", \"grade\":\"C\"}\n     ]\n   ]\n * ```\n */\nexport type CrawlerPrerequisites = PrerequisiteSet | [];\n\n// Caches type (imported as `CrawlerCaches`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains data shared by multiple class descriptions\n */\nexport interface CrawlerCaches {\n  /**\n   * List of all the different time ranges that classes can be offered at\n   * (e.g. `\"8:00 am - 8:50 am\"`;\n   * there is one `\"TBA\"` string for classes whose time is \"To Be Announced\")\n   */\n  periods: string[];\n  /**\n   * List of all possible start/ending dates that classes can be offered between\n   * (e.g. `\"Aug 17, 2020 - Dec 10, 2020\"`)\n   */\n  dateRanges: string[];\n  /**\n   * List of the different types of classes for each time block\n   * (e.g. `\"Lecture*\"`, `\"Recitation*\"`, or `\"Internship/Practicum*\"`)\n   */\n  scheduleTypes: string[];\n  /**\n   * List of the different GT campus locations that a class could take place at\n   * (e.g. `\"Georgia Tech-Atlanta *\"` or `\"Online\"`)\n   */\n  campuses: string[];\n  /**\n   * List of other miscellaneous attributes that can be associated with a class\n   * (e.g. `\"Hybrid Course\"`, `\"Honors Program\"`, or `\"Capstone\"`)\n   */\n  attributes: string[];\n  /**\n   * List of the different kinds of grading schemes a course can have\n   */\n  gradeBases: string[];\n  /**\n   * List of the different building locations a class can be at\n   */\n  locations: Location[];\n}\n\n// Course type (imported as `CrawlerCourse`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains information about a single class\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerCourse = [\n  /**\n   * the full, human-readable name of the course (e.g. \"Accounting I\")\n   */\n  fullName: string,\n  /**\n   * a JSON object with information about each section of the course;\n   * the section IDs are the keys (`\"A\"`, `\"B\"`, `\"S2\"`, etc.)\n   */\n  sections: Record<string, CrawlerSection>,\n  /**\n     * a tree of prerequisite classes and the necessary grades in them\n     * (using boolean expressions in prefix order)\n     *\n     * @example\n     *\n     * ```json\n       [\n         \"and\",\n         [\n            \"or\",\n            {\"id\":\"CS 3510\", \"grade\":\"C\"},\n            {\"id\":\"CS 3511\", \"grade\":\"C\"}\n         ]\n       ]\n     * ```\n     */\n  prerequisites: CrawlerPrerequisites,\n  /**\n   * Description pulled from Oscar\n   */\n  description: string | null\n];\n\n// TermData type (imported as `CrawlerTermData`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Primary JSON object returned by the API.\n * See https://github.com/GTBitsOfGood/gt-scheduler/issues/1#issuecomment-694326220\n * for more info on the shape\n */\nexport interface CrawlerTermData {\n  /**\n   * Contains information about each class;\n   * this makes up the vast bulk of the resultant JSON.\n   * The course IDs are the keys (`\"ACCT 2101\"`, `\"CS 2340\"`, etc.)\n   */\n  courses: Record<string, CrawlerCourse>;\n  /**\n   * Contains data shared by multiple class descriptions\n   */\n  caches: CrawlerCaches;\n  /**\n   * Contains the time this JSON file was retrieved\n   */\n  updatedAt: Date;\n  /**\n   * Version number for the term data\n   */\n  version: number;\n}\n","import React from 'react';\nimport { Theme, defaultTermData, TermData } from '../types';\nimport Oscar from '../beans/Oscar';\n\ntype Setter<T> = (next: T) => void;\n\nexport type ThemeContextValue = [Theme, Setter<Theme>];\nexport const ThemeContext = React.createContext<ThemeContextValue>([\n  'light',\n  () => {}\n]);\n\nexport type TermsContextValue = [string[], Setter<string[]>];\nexport const TermsContext = React.createContext<TermsContextValue>([\n  [],\n  () => {}\n]);\n\nexport type TermContextData = {\n  term: string;\n  oscar: Oscar;\n} & TermData;\nexport type TermContextSetters = {\n  setTerm: Setter<string>;\n  setOscar: Setter<Oscar>;\n  patchTermData: Setter<Partial<TermData>>;\n};\nexport type TermContextValue = [TermContextData, TermContextSetters];\nexport const TermContext = React.createContext<TermContextValue>([\n  {\n    term: '',\n    oscar: (null as unknown) as Oscar,\n    ...defaultTermData\n  },\n  {\n    setTerm: () => {},\n    setOscar: () => {},\n    patchTermData: () => {}\n  }\n]);\n\nexport type OverlayCrnsContextValue = [string[], Setter<string[]>];\nexport const OverlayCrnsContext = React.createContext<OverlayCrnsContextValue>([\n  [],\n  () => {}\n]);\n","import React, { useContext } from 'react';\nimport { CLOSE, DAYS, OPEN } from '../../constants';\nimport { classes, timeToShortString } from '../../utils';\nimport { TimeBlocks } from '..';\nimport './stylesheet.scss';\nimport { TermContext } from '../../contexts';\n\nexport default function Calendar({\n  className,\n  overlayCrns,\n  preview,\n  capture,\n  isAutosized\n}) {\n  const [{ pinnedCrns, oscar }] = useContext(TermContext);\n\n  // Contains the rowIndex's and rowSize's passed into each crn's TimeBlocks\n  // e.g. crnSizeInfo[crn][day][\"period.start-period.end\"].rowIndex\n  const crnSizeInfo = {};\n\n  // Recursively sets the rowSize of all time blocks within the current\n  // connected grouping of blocks to the current block's rowSize\n  const updateJoinedRowSizes = (\n    periodInfos,\n    seen,\n    curCrn,\n    curPeriod,\n    newRowSize\n  ) => {\n    if (seen.has(curCrn)) {\n      return;\n    }\n    seen.add(curCrn);\n\n    periodInfos\n      .filter(\n        (period2Info) =>\n          period2Info.period.start < curPeriod.end &&\n          period2Info.period.end > curPeriod.start\n      )\n      .forEach((period2Info) => {\n        period2Info.rowSize = newRowSize;\n        updateJoinedRowSizes(\n          periodInfos,\n          seen,\n          period2Info.crn,\n          period2Info.period,\n          newRowSize\n        );\n      });\n  };\n\n  const crns = [...new Set([...pinnedCrns, ...(overlayCrns || [])])];\n  const maxMeetingLen = (crn) =>\n    Math.max(\n      ...oscar\n        .findSection(crn)\n        .meetings.filter((m) => m.period)\n        .map((m) => m.period.end - m.period.start)\n    );\n  crns.sort((a, b) => maxMeetingLen(a) - maxMeetingLen(b));\n\n  // Populates crnSizeInfo by iteratively finding the next time block's\n  // rowSize and rowIndex (1 more than greatest of already processed connected\n  // blocks), updating the processed connected blocks to match its rowSize\n  crns.forEach((crn) => {\n    crnSizeInfo[crn] = {};\n\n    oscar\n      .findSection(crn)\n      .meetings.filter((m) => m.period)\n      .forEach((meeting) => {\n        meeting.days.forEach((day) => {\n          crnSizeInfo[crn][day] = crnSizeInfo[crn][day] || {};\n\n          const dayPeriodInfos = Object.values(crnSizeInfo)\n            .filter((days) => days[day])\n            .map((days) => Object.values(days[day]))\n            .flat();\n\n          const curRowSize = dayPeriodInfos\n            .filter(\n              (period2Info) =>\n                period2Info.period.start < meeting.period.end &&\n                period2Info.period.end > meeting.period.start\n            )\n            .reduce(\n              (acc, period2Info) => Math.max(acc, period2Info.rowSize + 1),\n              1\n            );\n\n          updateJoinedRowSizes(\n            dayPeriodInfos,\n            new Set(),\n            crn,\n            meeting.period,\n            curRowSize\n          );\n\n          crnSizeInfo[crn][day][\n            [meeting.period.start, meeting.period.end].join('-')\n          ] = {\n            period: meeting.period,\n            rowIndex: curRowSize - 1,\n            rowSize: curRowSize\n          };\n        });\n      });\n  });\n\n  return (\n    <div\n      className={classes(\n        'Calendar',\n        capture && 'capture',\n        preview && 'preview',\n        className\n      )}\n    >\n      {!preview && (\n        <div className=\"times\">\n          {new Array((CLOSE - OPEN) / 60).fill(0).map((_, i) => {\n            const time = OPEN + i * 60;\n            return (\n              <div className=\"time\" key={time}>\n                <span className=\"label\">{timeToShortString(time)}</span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {!preview && (\n        <div className=\"days\">\n          {DAYS.map((day) => (\n            <div className=\"day\" key={day}>\n              <span className=\"label\">{day}</span>\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"meetings\">\n        {pinnedCrns.map((crn) => (\n          <TimeBlocks\n            key={crn}\n            crn={crn}\n            preview={preview}\n            capture={capture}\n            isAutosized={isAutosized}\n            sizeInfo={crnSizeInfo[crn]}\n          />\n        ))}\n        {overlayCrns &&\n          overlayCrns\n            .filter((crn) => !pinnedCrns.includes(crn))\n            .map((crn) => (\n              <TimeBlocks\n                key={crn}\n                crn={crn}\n                overlay={!preview}\n                preview={preview}\n                capture={capture}\n                isAutosized\n                sizeInfo={crnSizeInfo[crn]}\n              />\n            ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport { AutoSizer, List } from 'react-virtualized/dist/commonjs';\nimport { Button, Calendar, Select } from '..';\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\nimport { OverlayCrnsContext, TermContext } from '../../contexts';\n\nexport default function CombinationContainer() {\n  const [\n    { oscar, desiredCourses, pinnedCrns, excludedCrns, sortingOptionIndex },\n    { patchTermData }\n  ] = useContext(TermContext);\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n\n  const handleResetPinnedCrns = useCallback(() => {\n    if (window.confirm('Are you sure to reset sections you selected?')) {\n      patchTermData({\n        pinnedCrns: []\n      });\n    }\n  }, [patchTermData]);\n\n  const combinations = useMemo(\n    () => oscar.getCombinations(desiredCourses, pinnedCrns, excludedCrns),\n    [oscar, desiredCourses, pinnedCrns, excludedCrns]\n  );\n  const sortedCombinations = useMemo(\n    () => oscar.sortCombinations(combinations, sortingOptionIndex),\n    [oscar, combinations, sortingOptionIndex]\n  );\n\n  return (\n    <div className=\"CombinationContainer\">\n      <Select\n        // eslint-disable-next-line no-shadow\n        onChange={(sortingOptionIndex) => patchTermData({ sortingOptionIndex })}\n        value={sortingOptionIndex}\n        options={oscar.sortingOptions.map((sortingOption, i) => ({\n          value: i,\n          label: sortingOption.label\n        }))}\n      />\n      <Button\n        className=\"reset\"\n        onClick={handleResetPinnedCrns}\n        disabled={pinnedCrns.length === 0}\n      >\n        Reset Sections\n      </Button>\n      <div className=\"scroller\">\n        <AutoSizer>\n          {({ width, height }) => (\n            <List\n              width={width}\n              height={height}\n              style={{ outline: 'none' }}\n              rowCount={sortedCombinations.length}\n              rowHeight={108}\n              rowRenderer={({ index, key, style }) => {\n                const { crns } = sortedCombinations[index];\n                return (\n                  <div className=\"list-item\" style={style} key={key}>\n                    <div\n                      className=\"combination\"\n                      onMouseEnter={() => setOverlayCrns(crns)}\n                      onMouseLeave={() => setOverlayCrns([])}\n                      onClick={() =>\n                        patchTermData({\n                          pinnedCrns: [...pinnedCrns, ...crns]\n                        })\n                      }\n                    >\n                      <div className=\"number\">{index + 1}</div>\n                      <Calendar\n                        className=\"calendar-preview\"\n                        overlayCrns={crns}\n                        isAutosized\n                        preview\n                      />\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst Comparison = () => {\n  // TODO implement\n  return <>Not yet implemented</>;\n};\n\nexport default Comparison;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faInfoCircle,\n  faShareAlt,\n  faPalette,\n  faPlus,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport { classes, getContentClassName } from '../../utils';\nimport { ActionRow, Instructor, Palette, Prerequisite } from '..';\nimport './stylesheet.scss';\nimport { TermContext } from '../../contexts';\n\nexport default function Course({ className, courseId, onAddCourse }) {\n  const [expanded, setExpanded] = useState(false);\n  const [prereqOpen, setPrereqOpen] = useState(false);\n  const [paletteShown, setPaletteShown] = useState(false);\n  const [gpaMap, setGpaMap] = useState({});\n  const isSearching = Boolean(onAddCourse);\n  const [\n    { oscar, term, desiredCourses, pinnedCrns, excludedCrns, colorMap },\n    { patchTermData }\n  ] = useContext(TermContext);\n\n  useEffect(() => {\n    if (!isSearching) {\n      const course = oscar.findCourse(courseId);\n      course.fetchGpa().then(setGpaMap);\n    }\n  }, [isSearching, oscar, courseId]);\n\n  const handleRemoveCourse = useCallback(\n    (course) => {\n      patchTermData({\n        desiredCourses: desiredCourses.filter((id) => id !== course.id),\n        pinnedCrns: pinnedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        excludedCrns: excludedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        colorMap: { ...colorMap, [course.id]: undefined }\n      });\n    },\n    [desiredCourses, pinnedCrns, excludedCrns, colorMap, patchTermData]\n  );\n\n  const handleIncludeSections = useCallback(\n    (sections) => {\n      const crns = sections.map((section) => section.crn);\n      patchTermData({\n        excludedCrns: excludedCrns.filter((crn) => !crns.includes(crn))\n      });\n    },\n    [excludedCrns, patchTermData]\n  );\n\n  const course = oscar.findCourse(courseId);\n  const color = colorMap[course.id];\n  const contentClassName = color && getContentClassName(color);\n\n  const hasPrereqs = oscar.version > 1;\n  let prereqs = null;\n\n  if (hasPrereqs) {\n    prereqs = course.prereqs.slice(1, course.prereqs.length);\n    if (prereqs.length && prereqs.every((prereq) => !prereq[0]))\n      prereqs = [prereqs];\n  }\n\n  const instructorMap = {};\n  course.sections.forEach((section) => {\n    const [primaryInstructor = 'Not Assigned'] = section.instructors;\n    if (!(primaryInstructor in instructorMap)) {\n      instructorMap[primaryInstructor] = [];\n    }\n    instructorMap[primaryInstructor].push(section);\n  });\n\n  const instructors = Object.keys(instructorMap);\n  const excludedInstructors = instructors.filter((instructor) => {\n    const sections = instructorMap[instructor];\n    return sections.every((section) => excludedCrns.includes(section.crn));\n  });\n  const includedInstructors = instructors.filter(\n    (instructor) => !excludedInstructors.includes(instructor)\n  );\n\n  const prereqControl = (pre, exp) => {\n    setPrereqOpen(pre);\n    setExpanded(exp);\n  };\n  const prereqAction = {\n    icon: faShareAlt,\n    styling: { transform: 'rotate(90deg)' },\n    onClick: () => {\n      prereqControl(true, !prereqOpen ? true : !expanded);\n    }\n  };\n\n  const infoAction = {\n    icon: faInfoCircle,\n    href:\n      `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n      `course_detail?cat_term_in=${term}&subj_code_in=` +\n      `${course.subject}&crse_numb_in=${course.number}`\n  };\n\n  const pinnedSections = course.sections.filter((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n  const totalCredits = pinnedSections.reduce(\n    (credits, section) => credits + section.credits,\n    0\n  );\n\n  return (\n    <div\n      className={classes('Course', contentClassName, 'default', className)}\n      style={{ backgroundColor: color }}\n      key={course.id}\n    >\n      <ActionRow\n        label={[\n          course.id,\n          pinnedSections.map((section) => section.id).join(', ')\n        ].join(' ')}\n        actions={\n          isSearching\n            ? [\n                { icon: faPlus, onClick: onAddCourse },\n                hasPrereqs ? prereqAction : infoAction\n              ]\n            : [\n                {\n                  icon: expanded ? faAngleUp : faAngleDown,\n                  onClick: () => prereqControl(false, !expanded)\n                },\n                hasPrereqs ? prereqAction : infoAction,\n                {\n                  icon: faPalette,\n                  onClick: () => setPaletteShown(!paletteShown)\n                },\n                { icon: faTrash, onClick: () => handleRemoveCourse(course) }\n              ]\n        }\n      >\n        <div className=\"course-row\">\n          <span\n            className=\"course-title\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: course.title }}\n          />\n          <span className=\"section-crns\">\n            {pinnedSections.map((section) => section.crn).join(', ')}\n          </span>\n        </div>\n        {!isSearching && (\n          <div className=\"course-row\">\n            <span className=\"gpa\">\n              Course GPA:{' '}\n              {Object.keys(gpaMap).length === 0\n                ? 'Loading...'\n                : gpaMap.averageGpa\n                ? gpaMap.averageGpa.toFixed(2)\n                : 'N/A'}\n            </span>\n            {totalCredits > 0 && (\n              <span className=\"credits\">{totalCredits} Credits</span>\n            )}\n          </div>\n        )}\n        {paletteShown && (\n          <Palette\n            className=\"palette\"\n            onSelectColor={(col) =>\n              patchTermData({ colorMap: { ...colorMap, [courseId]: col } })\n            }\n            color={color}\n            onMouseLeave={() => setPaletteShown(false)}\n          />\n        )}\n      </ActionRow>\n      {expanded && !prereqOpen && (\n        <div className={classes('hover-container', 'nested')}>\n          {includedInstructors.map((name) => (\n            <Instructor\n              key={name}\n              color={color}\n              name={name}\n              sections={instructorMap[name]}\n              gpa={\n                Object.keys(gpaMap).length === 0\n                  ? 'Loading...'\n                  : gpaMap[name]\n                  ? gpaMap[name].toFixed(2)\n                  : 'N/A'\n              }\n            />\n          ))}\n          {excludedInstructors.length > 0 && (\n            <div className=\"excluded-instructor-container\">\n              {excludedInstructors.map((name) => (\n                <span\n                  className=\"excluded-instructor\"\n                  key={name}\n                  onClick={() => handleIncludeSections(instructorMap[name])}\n                >\n                  {name}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      {expanded && prereqOpen && (\n        <div className={classes('hover-container')}>\n          <div\n            className={classes(\n              !desiredCourses.includes(course.id) && 'dark-content',\n              'nested'\n            )}\n          >\n            <Prerequisite course={course} isHeader />\n            <div className={classes('nested')}>\n              {!!prereqs.length > 0 &&\n                prereqs.map((req, i) => (\n                  <Prerequisite\n                    key={i}\n                    option={i + 1}\n                    course={course}\n                    req={req}\n                    isHeader\n                  />\n                ))}\n              {!prereqs.length && <Prerequisite course={course} isEmpty />}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, {\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Course, CourseFilter } from '..';\nimport { classes, getRandomColor } from '../../utils';\nimport './stylesheet.scss';\nimport { ASYNC_DELIVERY_MODE, CAMPUSES, DELIVERY_MODES } from '../../constants';\nimport { TermContext } from '../../contexts';\n\nexport default function CourseAdd({ className }) {\n  const [\n    { oscar, desiredCourses, excludedCrns, colorMap },\n    { patchTermData }\n  ] = useContext(TermContext);\n  const [keyword, setKeyword] = useState('');\n  const [filter, setFilter] = useState({\n    deliveryMode: [],\n    campus: []\n  });\n  const [activeIndex, setActiveIndex] = useState(0);\n  const inputRef = useRef(null);\n\n  const handleChangeKeyword = useCallback((e) => {\n    let input = e.target.value.trim();\n    const results = input.match(/^([A-Z]+)(\\d.*)$/i);\n    if (results) {\n      const [, subject, number] = results;\n      input = `${subject} ${number}`;\n    }\n    setKeyword(input);\n  }, []);\n\n  const courses = useMemo(() => {\n    const results = /^([A-Z]+) ?((\\d.*)?)$/i.exec(keyword.toUpperCase());\n    if (!results) {\n      return [];\n    }\n    const [, subject, number] = results;\n\n    setActiveIndex(0);\n\n    return oscar.courses\n      .filter((course) => {\n        const keywordMatch =\n          course.subject === subject && course.number.startsWith(number);\n        const filterMatch = Object.entries(filter).every(\n          ([key, tags]) =>\n            tags.length === 0 ||\n            course.sections.some((section) => tags.includes(section[key]))\n        );\n        return keywordMatch && filterMatch;\n      })\n      .filter((course) => !desiredCourses.includes(course.id));\n  }, [oscar, keyword, filter, desiredCourses]);\n\n  const handleAddCourse = useCallback(\n    (course) => {\n      if (desiredCourses.includes(course.id)) return;\n      const toBeExcludedCrns = course.sections\n        .filter((section) => {\n          const timeDecided =\n            section.deliveryMode === ASYNC_DELIVERY_MODE ||\n            (section.meetings.length &&\n              section.meetings.every(\n                (meeting) => meeting.days.length && meeting.period\n              ));\n          const filterMatch = Object.entries(filter).every(\n            ([key, tags]) => tags.length === 0 || tags.includes(section[key])\n          );\n          return !timeDecided || !filterMatch;\n        })\n        .map((section) => section.crn);\n      patchTermData({\n        desiredCourses: [...desiredCourses, course.id],\n        excludedCrns: [...excludedCrns, ...toBeExcludedCrns],\n        colorMap: { ...colorMap, [course.id]: getRandomColor() }\n      });\n      setKeyword('');\n      inputRef.current.focus();\n    },\n    [filter, desiredCourses, excludedCrns, colorMap, inputRef, patchTermData]\n  );\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      switch (e.key) {\n        case 'Enter':\n          if (courses[activeIndex]) {\n            handleAddCourse(courses[activeIndex]);\n          }\n          break;\n        case 'ArrowDown':\n          setActiveIndex(Math.min(activeIndex + 1, courses.length - 1));\n          break;\n        case 'ArrowUp':\n          setActiveIndex(Math.max(activeIndex - 1, 0));\n          break;\n        default:\n          return;\n      }\n      e.preventDefault();\n    },\n    [courses, handleAddCourse, activeIndex]\n  );\n\n  const handleToggleFilter = useCallback(\n    (key, tag) => {\n      const tags = filter[key];\n      setFilter({\n        ...filter,\n        [key]: tags.includes(tag)\n          ? tags.filter((v) => v !== tag)\n          : [...tags, tag]\n      });\n    },\n    [filter]\n  );\n\n  const handleResetFilter = useCallback(\n    (key) => {\n      setFilter({\n        ...filter,\n        [key]: []\n      });\n    },\n    [filter]\n  );\n\n  const activeCourse = courses[activeIndex];\n\n  return (\n    <div className={classes('CourseAdd', className)}>\n      <div className=\"add\">\n        <div className=\"primary\">\n          <FontAwesomeIcon\n            className={classes('icon', courses.length && 'active')}\n            fixedWidth\n            icon={faPlus}\n          />\n          <div className=\"keyword-wrapper\">\n            {activeCourse && (\n              <div className={classes('keyword', 'autocomplete')}>\n                {activeCourse.id}\n              </div>\n            )}\n            <input\n              type=\"text\"\n              ref={inputRef}\n              value={keyword}\n              onChange={handleChangeKeyword}\n              className=\"keyword\"\n              placeholder=\"XX 0000\"\n              onKeyDown={handleKeyDown}\n            />\n          </div>\n        </div>\n        {[\n          ['Delivery Mode', 'deliveryMode', DELIVERY_MODES],\n          ['Campus', 'campus', CAMPUSES]\n        ].map(([name, property, labels]) => (\n          <CourseFilter\n            key={property}\n            name={name}\n            labels={labels}\n            selectedTags={filter[property]}\n            onReset={() => handleResetFilter(property)}\n            onToggle={(tag) => handleToggleFilter(property, tag)}\n          />\n        ))}\n      </div>\n      {courses.length > 0 ? (\n        courses.map((course) => (\n          <Course\n            key={course.id}\n            className={course === activeCourse && 'active'}\n            courseId={course.id}\n            pinnedCrns={[]}\n            onAddCourse={() => handleAddCourse(course)}\n          />\n        ))\n      ) : (\n        <div className=\"disclaimer\">\n          Disclaimer: GT Scheduler should be used as general reference only, and\n          users are solely responsible for ensuring any information including\n          registration restrictions.\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport ago from 's-ago';\nimport { Button, Course, CourseAdd } from '..';\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\nimport { TermContext } from '../../contexts';\n\nexport default function CourseContainer() {\n  const [{ oscar, desiredCourses }] = useContext(TermContext);\n\n  return (\n    <div className=\"CourseContainer\">\n      <div className=\"scroller\">\n        <div className=\"course-list\">\n          {desiredCourses.map((courseId) => {\n            return <Course courseId={courseId} expandable key={courseId} />;\n          })}\n        </div>\n        <CourseAdd className=\"course-add\" />\n      </div>\n      <Button\n        className=\"updated-at\"\n        href=\"https://github.com/gt-scheduler/crawler\"\n      >\n        Course data fetched {ago(oscar.updatedAt)}\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { classes, humanizeArray } from '../../utils';\nimport './stylesheet.scss';\n\nexport default function CourseFilter({\n  name,\n  labels,\n  selectedTags,\n  onReset,\n  onToggle\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"CourseFilter\">\n      <div\n        className={classes('header', selectedTags.length > 0 && 'active')}\n        onClick={() => setExpanded(!expanded)}\n      >\n        {!expanded && selectedTags.length > 0 ? (\n          <div\n            className=\"name\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{\n              __html: humanizeArray(\n                selectedTags.map((tag) => labels[tag]),\n                '<span class=\"or\">or</span>'\n              )\n            }}\n          />\n        ) : (\n          <div className=\"name\">{name}</div>\n        )}\n        <FontAwesomeIcon fixedWidth icon={expanded ? faAngleUp : faAngleDown} />\n      </div>\n      {expanded && (\n        <div className=\"tag-container\">\n          <div\n            className={classes('tag', selectedTags.length === 0 && 'active')}\n            onClick={onReset}\n          >\n            All\n          </div>\n          {Object.keys(labels).map((tag) => (\n            <div\n              key={tag}\n              className={classes('tag', selectedTags.includes(tag) && 'active')}\n              property={tag}\n              onClick={() => onToggle(tag)}\n            >\n              {labels[tag]}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/* global saveAs, BlobBuilder */\n/* exported ics */\n\nconst ics = (uidDomain, prodId) => {\n  if (\n    navigator.userAgent.indexOf('MSIE') > -1 &&\n    navigator.userAgent.indexOf('MSIE 10') === -1\n  ) {\n    // eslint-disable-next-line no-console\n    console.log('Unsupported Browser');\n    return;\n  }\n\n  if (typeof uidDomain === 'undefined') {\n    uidDomain = 'default';\n  }\n  if (typeof prodId === 'undefined') {\n    prodId = 'Calendar';\n  }\n\n  const SEPARATOR = navigator.appVersion.indexOf('Win') !== -1 ? '\\r\\n' : '\\n';\n  const calendarEvents = [];\n  const calendarStart = [\n    'BEGIN:VCALENDAR',\n    `PRODID:${prodId}`,\n    'VERSION:2.0'\n  ].join(SEPARATOR);\n  const calendarEnd = `${SEPARATOR}END:VCALENDAR`;\n  const BYDAY_VALUES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n  return {\n    /**\n     * Returns events array\n     * @return {array} Events\n     */\n    events() {\n      return calendarEvents;\n    },\n\n    /**\n     * Returns calendar\n     * @return {string} Calendar in iCalendar format\n     */\n    calendar() {\n      return (\n        calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd\n      );\n    },\n\n    /**\n     * Add event to the calendar\n     * @param  {string} subject     Subject/Title of event\n     * @param  {string} description Description of event\n     * @param  {string} location    Location of event\n     * @param  {string} begin       Beginning date of event\n     * @param  {string} stop        Ending date of event\n     */\n    addEvent(subject, description, location, begin, stop, rrule) {\n      // I'm not in the mood to make these optional... So they are all required\n      if (\n        typeof subject === 'undefined' ||\n        typeof description === 'undefined' ||\n        typeof location === 'undefined' ||\n        typeof begin === 'undefined' ||\n        typeof stop === 'undefined'\n      ) {\n        return false;\n      }\n\n      // validate rrule\n      if (rrule) {\n        if (!rrule.rrule) {\n          if (\n            rrule.freq !== 'YEARLY' &&\n            rrule.freq !== 'MONTHLY' &&\n            rrule.freq !== 'WEEKLY' &&\n            rrule.freq !== 'DAILY'\n          ) {\n            throw new Error(\n              \"Recurrence rrule frequency must be provided and be one of the following: 'YEARLY', 'MONTHLY', 'WEEKLY', or 'DAILY'\"\n            );\n          }\n\n          if (rrule.until) {\n            if (Number.isNaN(Date.parse(rrule.until))) {\n              throw new Error(\n                \"Recurrence rrule 'until' must be a valid date string\"\n              );\n            }\n          }\n\n          if (rrule.interval) {\n            if (Number.isNaN(parseInt(rrule.interval, 10))) {\n              throw new Error(\"Recurrence rrule 'interval' must be an integer\");\n            }\n          }\n\n          if (rrule.count) {\n            if (Number.isNaN(parseInt(rrule.count, 10))) {\n              throw new Error(\"Recurrence rrule 'count' must be an integer\");\n            }\n          }\n\n          if (typeof rrule.byday !== 'undefined') {\n            if (\n              Object.prototype.toString.call(rrule.byday) !== '[object Array]'\n            ) {\n              throw new Error(\"Recurrence rrule 'byday' must be an array\");\n            }\n\n            if (rrule.byday.length > 7) {\n              throw new Error(\n                \"Recurrence rrule 'byday' array must not be longer than the 7 days in a week\"\n              );\n            }\n\n            // Filter any possible repeats\n            rrule.byday = rrule.byday.filter((elem, pos) => {\n              return rrule.byday.indexOf(elem) === pos;\n            });\n\n            for (const d in rrule.byday) {\n              if (BYDAY_VALUES.indexOf(rrule.byday[d]) < 0) {\n                throw new Error(\n                  \"Recurrence rrule 'byday' values must include only the following: 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'\"\n                );\n              }\n            }\n          }\n        }\n      }\n\n      // TODO add time and time zone? use moment to format?\n      const start_date = new Date(begin);\n      const end_date = new Date(stop);\n      const now_date = new Date();\n\n      const start_year = `0000${start_date.getFullYear().toString()}`.slice(-4);\n      const start_month = `00${(start_date.getMonth() + 1).toString()}`.slice(\n        -2\n      );\n      const start_day = `00${start_date.getDate().toString()}`.slice(-2);\n      const start_hours = `00${start_date.getHours().toString()}`.slice(-2);\n      const start_minutes = `00${start_date.getMinutes().toString()}`.slice(-2);\n      const start_seconds = `00${start_date.getSeconds().toString()}`.slice(-2);\n\n      const end_year = `0000${end_date.getFullYear().toString()}`.slice(-4);\n      const end_month = `00${(end_date.getMonth() + 1).toString()}`.slice(-2);\n      const end_day = `00${end_date.getDate().toString()}`.slice(-2);\n      const end_hours = `00${end_date.getHours().toString()}`.slice(-2);\n      const end_minutes = `00${end_date.getMinutes().toString()}`.slice(-2);\n      const end_seconds = `00${end_date.getSeconds().toString()}`.slice(-2);\n\n      const now_year = `0000${now_date.getFullYear().toString()}`.slice(-4);\n      const now_month = `00${(now_date.getMonth() + 1).toString()}`.slice(-2);\n      const now_day = `00${now_date.getDate().toString()}`.slice(-2);\n      const now_hours = `00${now_date.getHours().toString()}`.slice(-2);\n      const now_minutes = `00${now_date.getMinutes().toString()}`.slice(-2);\n      const now_seconds = `00${now_date.getSeconds().toString()}`.slice(-2);\n\n      let start_time = '';\n      let end_time = '';\n      if (\n        start_hours +\n          start_minutes +\n          start_seconds +\n          end_hours +\n          end_minutes +\n          end_seconds !==\n        0\n      ) {\n        start_time = `T${start_hours}${start_minutes}${start_seconds}`;\n        end_time = `T${end_hours}${end_minutes}${end_seconds}`;\n      }\n      const now_time = `T${now_hours}${now_minutes}${now_seconds}`;\n\n      const start = start_year + start_month + start_day + start_time;\n      const end = end_year + end_month + end_day + end_time;\n      const now = now_year + now_month + now_day + now_time;\n\n      // recurrence rrule vars\n      let rruleString;\n      if (rrule) {\n        if (rrule.rrule) {\n          rruleString = rrule.rrule;\n        } else {\n          rruleString = `RRULE:FREQ=${rrule.freq}`;\n\n          if (rrule.until) {\n            const uDate = new Date(Date.parse(rrule.until)).toISOString();\n            rruleString += `;UNTIL=${uDate\n              .substring(0, uDate.length - 13)\n              .replace(/[-]/g, '')}000000Z`;\n          }\n\n          if (rrule.interval) {\n            rruleString += `;INTERVAL=${rrule.interval}`;\n          }\n\n          if (rrule.count) {\n            rruleString += `;COUNT=${rrule.count}`;\n          }\n\n          if (rrule.byday && rrule.byday.length > 0) {\n            rruleString += `;BYDAY=${rrule.byday.join(',')}`;\n          }\n        }\n      }\n\n      // var stamp = new Date().toISOString();\n\n      let calendarEvent = [\n        'BEGIN:VEVENT',\n        `UID:${calendarEvents.length}@${uidDomain}`,\n        'CLASS:PUBLIC',\n        `DESCRIPTION:${description}`,\n        `DTSTAMP;VALUE=DATE-TIME:${now}`,\n        `DTSTART;VALUE=DATE-TIME:${start}`,\n        `DTEND;VALUE=DATE-TIME:${end}`,\n        `LOCATION:${location}`,\n        `SUMMARY;LANGUAGE=en-us:${subject}`,\n        'TRANSP:TRANSPARENT',\n        'END:VEVENT'\n      ];\n\n      if (rruleString) {\n        calendarEvent.splice(4, 0, rruleString);\n      }\n\n      calendarEvent = calendarEvent.join(SEPARATOR);\n\n      calendarEvents.push(calendarEvent);\n      return calendarEvent;\n    },\n\n    /**\n     * Download calendar using the saveAs function from filesave.js\n     * @param  {string} filename Filename\n     * @param  {string} ext      Extention\n     */\n    download(filename, ext) {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      ext = typeof ext !== 'undefined' ? ext : '.ics';\n      filename = typeof filename !== 'undefined' ? filename : 'calendar';\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      let blob;\n      if (navigator.userAgent.indexOf('MSIE 10') === -1) {\n        // chrome or firefox\n        blob = new Blob([calendar]);\n      } else {\n        // ie\n        const bb = new BlobBuilder();\n        bb.append(calendar);\n        blob = bb.getBlob(`text/x-vCalendar;charset=${document.characterSet}`);\n      }\n      saveAs(blob, filename + ext);\n      return calendar;\n    },\n\n    /**\n     * Build and return the ical contents\n     */\n    build() {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      return calendar;\n    }\n  };\n};\n\nexport default ics;\n","import { useCallback, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\n\nexport default function useCookie(key, defaultValue) {\n  const [value, setValue] = useState(defaultValue);\n\n  const setCookieValue = useCallback(\n    (val) => {\n      setValue(val);\n      Cookies.set(key, val, { expires: 1460 });\n    },\n    [key, setValue]\n  );\n\n  useEffect(() => {\n    let val;\n    if (key !== undefined) {\n      val = Cookies.get(key);\n    }\n    setValue(val === undefined ? defaultValue : val);\n  }, [key, defaultValue]);\n\n  return [value, setCookieValue];\n}\n","import { useState, useEffect } from 'react';\nimport { isMobile } from '../utils';\n\n/**\n * Subscribes to resize events on the page\n *\n * ? Would this be better to subscribe to a media query ?\n */\nexport default function useMobile() {\n  const [mobile, setMobile] = useState(isMobile());\n  useEffect(() => {\n    const handleResize = () => {\n      const newMobile = isMobile();\n      if (mobile !== newMobile) {\n        setMobile(newMobile);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [mobile]);\n\n  return mobile;\n}\n","import React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAdjust,\n  faBars,\n  faCalendarAlt,\n  faDownload,\n  faPaste\n} from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport Cookies from 'js-cookie';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport ReactTooltip from 'react-tooltip';\nimport copy from 'copy-to-clipboard';\nimport { getSemesterName } from '../../utils';\nimport { PNG_SCALE_FACTOR } from '../../constants';\nimport ics from '../../libs/ics';\nimport { Button, Calendar, Select, Tab } from '..';\nimport { useMobile } from '../../hooks';\nimport { TermContext, TermsContext, ThemeContext } from '../../contexts';\nimport { ICS } from '../../types';\n\nexport type HeaderProps = {\n  currentTab: number;\n  onChangeTab: (newTab: number) => void;\n  onToggleMenu: () => void;\n  tabs: string[];\n};\n\n/**\n * Renders the top header component,\n * and includes controls for top-level tab-based navigation\n */\nconst Header = ({\n  currentTab,\n  onChangeTab,\n  onToggleMenu,\n  tabs\n}: HeaderProps) => {\n  const [{ term, oscar, pinnedCrns }, { setTerm }] = useContext(TermContext);\n  const [terms] = useContext(TermsContext);\n  const [theme, setTheme] = useContext(ThemeContext);\n  const captureRef = useRef<HTMLDivElement>(null);\n\n  const handleThemeChange = useCallback(() => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    Cookies.set('theme', newTheme, { expires: 1460 });\n    setTheme(newTheme);\n  }, [theme, setTheme]);\n\n  const totalCredits = useMemo(() => {\n    return pinnedCrns.reduce((credits, crn) => {\n      const crnSection = oscar.findSection(crn);\n      return credits + (crnSection != null ? crnSection.credits : 0);\n    }, 0);\n  }, [pinnedCrns, oscar]);\n\n  const handleExport = useCallback(() => {\n    const cal = ics() as ICS | undefined;\n    if (cal == null) {\n      window.alert('This browser does not support calendar export');\n      return;\n    }\n\n    pinnedCrns.forEach((crn) => {\n      const section = oscar.findSection(crn);\n      if (section == null) return;\n\n      section.meetings.forEach((meeting) => {\n        if (!meeting.period || !meeting.days.length) return;\n        const { from, to } = meeting.dateRange;\n        const subject = section.course.id;\n        const description = section.course.title;\n        const location = meeting.where;\n        const begin = new Date(from.getTime());\n        while (\n          !meeting.days.includes(\n            ['-', 'M', 'T', 'W', 'R', 'F', '-'][begin.getDay()]\n          )\n        ) {\n          begin.setDate(begin.getDate() + 1);\n        }\n        begin.setHours(meeting.period.start / 60, meeting.period.start % 60);\n        const end = new Date(begin.getTime());\n        end.setHours(meeting.period.end / 60, meeting.period.end % 60);\n        const rrule = {\n          freq: 'WEEKLY',\n          until: to,\n          byday: meeting.days\n            .map(\n              (day) =>\n                ({ M: 'MO', T: 'TU', W: 'WE', R: 'TH', F: 'FR' }[day] ?? null)\n            )\n            .filter((day) => !!day)\n        };\n        cal.addEvent(subject, description, location, begin, end, rrule);\n      });\n    });\n    cal.download('gt-scheduler');\n  }, [oscar, pinnedCrns]);\n\n  const handleDownload = useCallback(() => {\n    const captureElement = captureRef.current;\n    if (captureElement == null) return;\n\n    const computed = window\n      .getComputedStyle(captureElement)\n      .getPropertyValue('left');\n\n    domtoimage\n      .toBlob(captureElement, {\n        width: captureElement.offsetWidth * PNG_SCALE_FACTOR,\n        height: captureElement.offsetHeight * PNG_SCALE_FACTOR,\n        style: {\n          transform: `scale(${PNG_SCALE_FACTOR})`,\n          'transform-origin': `${computed} 0px`,\n          'background-color': theme === 'light' ? '#FFFFFF' : '#333333'\n        }\n      })\n      .then((blob) => saveAs(blob, 'schedule.png'));\n  }, [captureRef, theme]);\n\n  // Obtain a ref to the copy button to only close its tooltip\n  const crnButton = useRef<HTMLDivElement>(null);\n\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = useMobile();\n  return (\n    <div className=\"Header\">\n      {/* Menu button, only displayed on mobile */}\n      {mobile && (\n        <Button className=\"nav-menu-button\" onClick={onToggleMenu}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faBars} />\n        </Button>\n      )}\n\n      {/* Left-aligned logo */}\n      <Button className=\"logo\">\n        <span className=\"gt\">GT </span>\n        <span className=\"scheduler\">Scheduler</span>\n      </Button>\n\n      {/* Term selector */}\n      <Select\n        onChange={setTerm}\n        value={term}\n        options={terms.map((currentTerm) => ({\n          value: currentTerm,\n          label: getSemesterName(currentTerm)\n        }))}\n        className=\"semester\"\n      />\n\n      <span className=\"credits\">{totalCredits} Credits</span>\n\n      {/* Include middle-aligned tabs on desktop */}\n      {!mobile && (\n        <div className=\"tabs\">\n          {tabs.map((tabLabel, tabIdx) => (\n            <Tab\n              key={tabIdx}\n              active={tabIdx === currentTab}\n              onClick={() => onChangeTab(tabIdx)}\n              label={tabLabel}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Action bar */}\n      <div className=\"menu\">\n        <Button onClick={handleDownload} disabled={pinnedCrns.length === 0}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faDownload} />\n          <div className=\"text\">Download</div>\n        </Button>\n        <Button onClick={handleExport} disabled={pinnedCrns.length === 0}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faCalendarAlt} />\n          <div className=\"text\">Export</div>\n        </Button>\n\n        {/* Include separate button and tooltip component\n            with manually controlled closing logic */}\n        <div\n          className=\"menu\"\n          data-tip\n          data-for=\"copy-crn\"\n          delay-hide=\"1000\"\n          ref={crnButton}\n        >\n          <Button disabled={pinnedCrns.length === 0}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faPaste} />\n            <div className=\"text\">CRNs</div>\n          </Button>\n        </div>\n        {/* Only enable the tooltip logic if there are CRNS to copy */}\n        {pinnedCrns.length > 0 && (\n          <ReactTooltip\n            id=\"copy-crn\"\n            type=\"dark\"\n            place=\"bottom\"\n            effect=\"solid\"\n            event=\"click\"\n            delayHide={1000}\n            afterShow={() => {\n              copy(pinnedCrns.join(', '));\n              setTimeout(\n                () => ReactTooltip.hide(crnButton.current ?? undefined),\n                1000\n              );\n            }}\n          >\n            Copied to clipboard!\n          </ReactTooltip>\n        )}\n\n        <Button onClick={handleThemeChange}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faAdjust} />\n          <div className=\"text\">Theme</div>\n        </Button>\n        <Button href=\"https://github.com/gt-scheduler/website\">\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faGithub} />\n          <div className=\"text\">GitHub</div>\n        </Button>\n      </div>\n\n      {/* Fake calendar used to capture screenshots */}\n      <div className=\"capture-container\" ref={captureRef}>\n        {/* TODO remove once Calendar gets typing */}\n        {/*\n          // @ts-ignore */}\n        <Calendar className=\"fake-calendar\" capture />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useCallback, useContext, useState } from 'react';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faBan,\n  faGraduationCap\n} from '@fortawesome/free-solid-svg-icons';\nimport { classes, simplifyName, unique } from '../../utils';\nimport { ActionRow, Section } from '..';\nimport './stylesheet.scss';\nimport { TermContext } from '../../contexts';\n\nexport default function Instructor({ className, color, name, sections, gpa }) {\n  const [{ pinnedCrns, excludedCrns }, { patchTermData }] = useContext(\n    TermContext\n  );\n  const [expanded, setExpanded] = useState(true);\n\n  const includeSection = useCallback(\n    (section) => {\n      patchTermData({\n        excludedCrns: excludedCrns.filter((crn) => crn !== section.crn)\n      });\n    },\n    [excludedCrns, patchTermData]\n  );\n\n  const excludeSections = useCallback(\n    (sectionList) => {\n      const crns = sectionList.map((section) => section.crn);\n      patchTermData({\n        excludedCrns: unique([...excludedCrns, ...crns]),\n        pinnedCrns: pinnedCrns.filter((crn) => !crns.includes(crn))\n      });\n    },\n    [excludedCrns, pinnedCrns, patchTermData]\n  );\n\n  const instructorPinned = sections.some((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n\n  const includedSections = sections.filter(\n    (section) => !excludedCrns.includes(section.crn)\n  );\n  const excludedSections = sections.filter((section) =>\n    excludedCrns.includes(section.crn)\n  );\n\n  return (\n    <div\n      className={classes(\n        'Instructor',\n        !expanded && 'divider-bottom',\n        className\n      )}\n    >\n      <ActionRow\n        label={name || 'Not Assigned'}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: () => setExpanded(!expanded)\n          },\n          !['TBA', 'Not Assigned'].includes(name) && {\n            icon: faGraduationCap,\n            href: `http://www.ratemyprofessors.com/search.jsp?queryBy=teacherName&schoolName=Georgia+Institute+of+Technology&query=${encodeURIComponent(\n              simplifyName(name)\n            )}`\n          },\n          {\n            icon: faBan,\n            title: 'Exclude from Combinations',\n            onClick: () => excludeSections(sections)\n          }\n        ]}\n        style={instructorPinned ? { backgroundColor: color } : undefined}\n      >\n        <div className=\"instructor-row\">\n          <span className=\"gpa\">Instructor GPA: {gpa || 'N/A'}</span>\n        </div>\n      </ActionRow>\n      {expanded && (\n        <div className={classes('section-container', 'nested')}>\n          {includedSections.map((section) => {\n            const pinned = pinnedCrns.includes(section.crn);\n            return (\n              <Section\n                key={section.id}\n                className=\"divider-bottom\"\n                section={section}\n                color={color}\n                pinned={pinned}\n              />\n            );\n          })}\n          {excludedSections.length > 0 && (\n            <div className=\"excluded-section-container\">\n              {excludedSections.map((section) => (\n                <span\n                  className=\"excluded-section\"\n                  key={section.id}\n                  onClick={() => includeSection(section)}\n                >\n                  {section.id}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin } from '@fortawesome/free-solid-svg-icons';\nimport './stylesheet.scss';\n\nconst MapView = ({ locations }) => {\n  const [viewport, setViewport] = useState({\n    latitude: 33.7765,\n    longitude: -84.3963,\n    height: '100%',\n    width: '100%',\n    zoom: 15\n  });\n\n  const unknown = [];\n  locations.forEach((location) => {\n    if (!location.coords) unknown.push(location);\n  });\n\n  return (\n    <div className=\"mapbox\">\n      <ReactMapGL\n        {...viewport}\n        showZoom\n        showCompass\n        mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        onViewportChange={(display) => setViewport(display)}\n      >\n        {locations.map((location, i) =>\n          !location.coords ? (\n            <React.Fragment key={i} />\n          ) : (\n            <Marker\n              key={i}\n              latitude={location.coords.lat}\n              longitude={location.coords.long}\n            >\n              <FontAwesomeIcon icon={faMapPin} className=\"pin-icon\" />\n              <p className=\"pin-text\">\n                {location.id} {location.section}\n              </p>\n            </Marker>\n          )\n        )}\n        {unknown.length > 0 && (\n          <div className=\"unknown-container\">\n            <b>Undetermined</b>\n            {unknown.map((location, i) => (\n              <div className=\"class\" key={i}>\n                {location.id} {location.section}\n              </div>\n            ))}\n          </div>\n        )}\n        <div className=\"navigation\">\n          <NavigationControl />\n        </div>\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default MapView;\n","import React from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { ActionRow } from '..';\nimport { classes, getContentClassName } from '../../utils';\n\nimport './stylesheet.scss';\n\ntype Day = 'M' | 'T' | 'W' | 'R' | 'F';\nexport type DaySelectionProps = {\n  courseDateMap: Record<Day, object[]>;\n  activeDay: Day | '';\n  setActiveDay: (next: Day | '') => void;\n};\n\nexport default function DaySelection({\n  courseDateMap,\n  activeDay,\n  setActiveDay\n}: DaySelectionProps) {\n  const colorPalette = ['#FCB9AA', '#FFDBCC', '#ECEAE4', '#A2E1DB', '#55CBCD'];\n  const daysOfTheWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday'\n  ];\n\n  const formatTime = (time: number): string => {\n    if (Math.floor(time / 60) >= 12) {\n      const adjustedHour = Math.floor(time / 60) % 12;\n      const hour = adjustedHour === 0 ? '12' : adjustedHour;\n      const minute = String(time % 60).padStart(2, '0');\n      return `${hour}:${minute}pm`;\n    }\n\n    const hour = Math.floor(time / 60);\n    const minute = String(time % 60).padStart(2, '0');\n    return `${hour}:${minute}am`;\n  };\n\n  return (\n    <div className=\"date-container\">\n      {Object.keys(courseDateMap).map((date, i) => (\n        <div\n          key={date}\n          className={classes(\n            'date',\n            getContentClassName(colorPalette[i]),\n            'default'\n          )}\n          style={{ backgroundColor: colorPalette[i] }}\n        >\n          <ActionRow\n            label={daysOfTheWeek[i]}\n            className=\"day-select\"\n            actions={[\n              {\n                icon: date === activeDay ? faAngleUp : faAngleDown,\n                onClick: () =>\n                  date !== activeDay\n                    ? setActiveDay(date as Day)\n                    : setActiveDay('')\n              }\n            ]}\n          />\n          {activeDay === date && (\n            <div className=\"dropdown-content\">\n              {courseDateMap[date as Day].length === 0 ? (\n                <div className=\"course-content\" style={{ padding: 8 }}>\n                  No classes this day!\n                </div>\n              ) : (\n                courseDateMap[date as Day].map((course: any) => (\n                  <div className=\"course-content\">\n                    <div className=\"course-id\">{course.id}</div>\n                    <span className=\"course-row\">{course.title}</span>\n                    <span className=\"course-row\">\n                      {course.daysOfWeek} {formatTime(course.times.start)} -{' '}\n                      {formatTime(course.times.end)}\n                    </span>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport MapView from '../MapView';\nimport { periodToString } from '../../utils';\nimport { TermContext } from '../../contexts';\nimport DaySelection from '../DaySelection';\n\nimport './stylesheet.scss';\n\nconst Map = () => {\n  const [{ oscar, pinnedCrns }] = useContext(TermContext);\n  const [activeDay, setActiveDay] = useState('M');\n  const locations = [];\n  const courseDateMap = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: []\n  };\n\n  // Construct the courseDateMap and locations data structures\n  pinnedCrns.forEach((crn) => {\n    const info = oscar.crnMap[crn.toString()];\n    const meetings = info.meetings[0];\n\n    meetings.days.forEach((day) => {\n      courseDateMap[day].push({\n        id: info.course.id,\n        title: info.course.title,\n        times: meetings.period,\n        daysOfWeek: meetings.days\n      });\n    });\n\n    locations.push({\n      section: info.id,\n      id: info.course.id,\n      title: info.course.title,\n      days: meetings.days,\n      time: periodToString(meetings.period),\n      coords: meetings.location\n    });\n  });\n\n  let activeLocations = [];\n  if (activeDay !== '') {\n    activeLocations = locations.filter((loc) =>\n      courseDateMap[activeDay].some((course) => course.id === loc.id)\n    );\n  }\n\n  return (\n    <div className=\"map-content\">\n      <DaySelection\n        courseDateMap={courseDateMap}\n        activeDay={activeDay}\n        setActiveDay={setActiveDay}\n      />\n      <MapView locations={activeLocations} />\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { classes } from '../../utils';\nimport { Button } from '..';\n\nimport './stylesheet.scss';\n\nexport type NavDrawerProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\n\n/**\n * Renders a nav drawer and the overlay when it is open\n */\nconst NavDrawer = ({ open, onClose, children }: NavDrawerProps) => {\n  return (\n    <>\n      <div\n        className={classes('drawer-overlay', open && 'open')}\n        tabIndex={-1}\n        onClick={onClose}\n        role=\"presentation\"\n      />\n      <div className={classes('drawer-outer', open && 'open')}>\n        <div className=\"drawer-header\">\n          <Button className=\"drawer-close\" onClick={onClose}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faTimes} />\n          </Button>\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default NavDrawer;\n","import React from 'react';\nimport { Button } from '..';\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type NavMenuProps = {\n  items: string[];\n  currentItem: number;\n  onChangeItem: (next: number) => void;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a vertical nav menu with a single active item\n */\nconst NavMenu = ({\n  items,\n  currentItem,\n  onChangeItem,\n  className,\n  style\n}: NavMenuProps) => {\n  return (\n    <div className={classes('nav-menu', className)} style={style}>\n      {items.map((item, idx) => (\n        <Button\n          className={classes('nav-button', currentItem === idx && 'active')}\n          onClick={() => onChangeItem(idx)}\n        >\n          {item}\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nexport default NavMenu;\n","import React from 'react';\nimport { classes } from '../../utils';\nimport { PALETTE } from '../../constants';\nimport './stylesheet.scss';\n\nexport default function Palette({\n  className,\n  color,\n  onSelectColor,\n  ...restProps\n}) {\n  return (\n    <div className={classes('Palette', className)} {...restProps}>\n      {PALETTE.map((colors, i) => (\n        <div className=\"palette-row\" key={i}>\n          {colors.map((paletteColor) => (\n            <div\n              className={classes('color', paletteColor === color && 'frame')}\n              key={paletteColor}\n              style={{ backgroundColor: paletteColor }}\n              onClick={() => onSelectColor(paletteColor)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport {\n  faInfoCircle,\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport { TermContext } from '../../contexts';\nimport { classes, decryptReqs } from '../../utils';\nimport { ActionRow } from '..';\n\nexport default function Prerequisite({\n  course,\n  req,\n  option,\n  isHeader,\n  isEmpty,\n  isLast\n}) {\n  const [{ term }] = useContext(TermContext);\n  const [expanded, setExpanded] = useState(true);\n  const reqStyle = { fontSize: '0.9em', padding: '8px' };\n\n  const subreqs =\n    typeof req === 'undefined'\n      ? []\n      : !req[0]\n      ? [req]\n      : typeof req[0] !== 'object'\n      ? req.slice(1, req.length)\n      : typeof req[0] === 'object'\n      ? [req]\n      : null;\n\n  return (\n    <div>\n      {!isHeader && !isEmpty && (\n        <div style={reqStyle}>\n          {decryptReqs(req)} {!isLast && <strong>and</strong>}\n        </div>\n      )}\n      {isHeader && (\n        <ActionRow\n          className={classes('hover-container')}\n          label={req ? `Option ${option}` : `Prerequisites`}\n          actions={[\n            !req && {\n              icon: faInfoCircle,\n              href:\n                `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n                `course_detail?cat_term_in=${term}&subj_code_in=` +\n                `${course.subject}&crse_numb_in=${course.number}`\n            },\n            req && {\n              icon: expanded ? faAngleUp : faAngleDown,\n              onClick: () => setExpanded(!expanded)\n            }\n          ]}\n        />\n      )}\n      {isEmpty && (\n        <div style={reqStyle}>No prerequisites. You&apos;re good to go!</div>\n      )}\n      {expanded &&\n        isHeader &&\n        subreqs.map((reqs, i) => (\n          <div key={i} className={classes('divider-bottom', 'nested')}>\n            <Prerequisite req={reqs} isLast={i === subreqs.length - 1} />\n          </div>\n        ))}\n    </div>\n  );\n}\n","import React, { useMemo, useState } from 'react';\nimport { classes } from '../../utils';\nimport { Button, Calendar, CombinationContainer, CourseContainer } from '..';\nimport { OverlayCrnsContext } from '../../contexts';\nimport { useMobile } from '../../hooks';\n\n/**\n * Wraps around the root top-level component of the Scheduler tab\n */\nconst Scheduler = () => {\n  const mobile = useMobile();\n\n  // Store the current set of CRNs that are shown on the Calendar overlay\n  const [overlayCrns, setOverlayCrns] = useState([]);\n\n  // Control second-level navigation between panes on mobile\n  const [tabIndex, setTabIndex] = useState(0);\n\n  // Memoize the CRN overlay set's context value so it is stable\n  const overlayContextValue = useMemo(() => [overlayCrns, setOverlayCrns], [\n    overlayCrns,\n    setOverlayCrns\n  ]);\n\n  return (\n    <>\n      {mobile && (\n        <div className=\"tab-container\">\n          {['Courses', 'Combinations', 'Calendar'].map((tabTitle, i) => (\n            <Button\n              key={tabTitle}\n              className={classes('tab', tabIndex === i && 'active')}\n              onClick={() => setTabIndex(i)}\n            >\n              {tabTitle}\n            </Button>\n          ))}\n        </div>\n      )}\n      <OverlayCrnsContext.Provider value={overlayContextValue}>\n        <div className=\"main\">\n          {(!mobile || tabIndex === 0) && <CourseContainer />}\n          {(!mobile || tabIndex === 1) && <CombinationContainer />}\n          {(!mobile || tabIndex === 2) && (\n            <div className=\"calendar-container\">\n              <Calendar className=\"calendar\" overlayCrns={overlayCrns} />\n            </div>\n          )}\n        </div>\n      </OverlayCrnsContext.Provider>\n    </>\n  );\n};\n\nexport default Scheduler;\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faBan,\n  faChair,\n  faThumbtack,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport { classes, periodToString } from '../../utils';\nimport { ActionRow } from '..';\nimport './stylesheet.scss';\nimport { OverlayCrnsContext, TermContext } from '../../contexts';\nimport { DELIVERY_MODES } from '../../constants';\n\nexport default function Section({ className, section, pinned, color }) {\n  const [{ term, pinnedCrns, excludedCrns }, { patchTermData }] = useContext(\n    TermContext\n  );\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n  const [seating, setSeating] = useState([[], []]);\n\n  let hovering = false;\n  const handleHover = () => {\n    hovering = true;\n    setTimeout(async () => {\n      if (hovering) setSeating(await section.fetchSeating(term));\n    }, 333);\n  };\n\n  const excludeSection = useCallback(\n    (sect) => {\n      patchTermData({\n        excludedCrns: [...excludedCrns, sect.crn],\n        pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn)\n      });\n    },\n    [pinnedCrns, excludedCrns, patchTermData]\n  );\n\n  const pinSection = useCallback(\n    (sect) => {\n      if (pinnedCrns.includes(sect.crn)) {\n        patchTermData({\n          pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn)\n        });\n      } else {\n        patchTermData({\n          pinnedCrns: [...pinnedCrns, sect.crn],\n          excludedCrns: excludedCrns.filter((crn) => crn !== sect.crn)\n        });\n      }\n    },\n    [pinnedCrns, excludedCrns, patchTermData]\n  );\n\n  return (\n    <ActionRow\n      label={section.id}\n      className={classes('Section', className)}\n      onMouseEnter={() => setOverlayCrns([section.crn])}\n      onMouseLeave={() => setOverlayCrns([])}\n      actions={[\n        {\n          icon: pinned ? faTimes : faThumbtack,\n          onClick: () => pinSection(section)\n        },\n        {\n          icon: faChair,\n          dataTip: true,\n          dataFor: section.id,\n          href: `https://oscar.gatech.edu/pls/bprod/bwckschd.p_disp_detail_sched?term_in=${term}&crn_in=${section.crn}`\n        },\n        {\n          icon: faBan,\n          title: 'Exclude from Combinations',\n          onClick: () => excludeSection(section)\n        }\n      ]}\n      style={pinned ? { backgroundColor: color } : undefined}\n    >\n      <div className=\"section-details\">\n        <div className=\"delivery-mode\">\n          {DELIVERY_MODES[section.deliveryMode]}\n        </div>\n        <div className=\"meeting-container\">\n          {section.meetings.map((meeting, i) => {\n            return (\n              <div className=\"meeting\" key={i}>\n                <span className=\"days\">{meeting.days.join('')}</span>\n                <span className=\"period\">{periodToString(meeting.period)}</span>\n              </div>\n            );\n          })}\n        </div>\n\n        <ReactTooltip\n          id={section.id}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"right\"\n          effect=\"solid\"\n          afterShow={() => handleHover()}\n          afterHide={() => {\n            hovering = false;\n          }}\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Seats Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][1]} of ${seating[0][0]}`\n                    : `N/A`}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Waitlist Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][3]} of ${seating[0][2]}`\n                    : `N/A`}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      </div>\n    </ActionRow>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { classes } from '../../utils';\nimport { Button } from '..';\nimport './stylesheet.scss';\n\nexport default function Select({ className, value, onChange, options }) {\n  const [opened, setOpened] = useState(false);\n\n  const selectedOption = options.find((option) => option.value === value);\n  const label = selectedOption ? selectedOption.label : '-';\n\n  return (\n    <div\n      className={classes('Button', 'Select', className)}\n      onClick={() => setOpened(!opened)}\n    >\n      <div className=\"text\">{label}</div>\n      <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n      {opened && <div className=\"intercept\" onClick={() => setOpened(false)} />}\n      {opened && (\n        <div className=\"option-container\">\n          {/* eslint-disable-next-line no-shadow */}\n          {options.map(({ value, label }) => (\n            <Button\n              className=\"option\"\n              key={value}\n              onClick={() => onChange(value)}\n            >\n              {label}\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { classes } from '../../utils';\n\nimport './stylesheet.scss';\n\nexport type TabProps = {\n  label: string;\n  onClick: () => void;\n  active?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a single top-level tab that is used in a horizontal list\n */\nconst Tab = ({\n  label,\n  active = false,\n  onClick,\n  className,\n  style\n}: TabProps) => (\n  <button\n    className={classes('Tab', active && 'active', className)}\n    style={style}\n    onClick={onClick}\n    type=\"button\"\n  >\n    {label}\n  </button>\n);\n\nexport default Tab;\n","import React, { useContext } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { classes, getContentClassName, periodToString } from '../../utils';\nimport { CLOSE, OPEN, DAYS } from '../../constants';\nimport './stylesheet.scss';\nimport { TermContext } from '../../contexts';\n\nexport default function TimeBlocks({\n  className,\n  crn,\n  overlay,\n  preview,\n  capture,\n  isAutosized,\n  sizeInfo\n}) {\n  const [{ oscar, colorMap }] = useContext(TermContext);\n\n  const section = oscar.findSection(crn);\n  const color = colorMap[section.course.id];\n  const contentClassName = getContentClassName(color);\n\n  return (\n    <div\n      className={classes(\n        'TimeBlocks',\n        capture && 'capture',\n        overlay && 'overlay',\n        className\n      )}\n    >\n      {section.meetings.map(\n        (meeting, i) =>\n          meeting.period &&\n          meeting.days.map((day) => (\n            <div\n              className={classes('meeting', contentClassName, 'default', day)}\n              key={[i, day].join('-')}\n              style={{\n                top: `${\n                  ((meeting.period.start - OPEN) / (CLOSE - OPEN)) * 100\n                }%`,\n                height: `${\n                  ((meeting.period.end - meeting.period.start) /\n                    (CLOSE - OPEN)) *\n                  100\n                }%`,\n                width: `${\n                  20 /\n                  sizeInfo[day][\n                    [meeting.period.start, meeting.period.end].join('-')\n                  ].rowSize\n                }%`,\n                left: `${\n                  DAYS.indexOf(day) * 20 +\n                  sizeInfo[day][\n                    [meeting.period.start, meeting.period.end].join('-')\n                  ].rowIndex *\n                    (20 /\n                      sizeInfo[day][\n                        [meeting.period.start, meeting.period.end].join('-')\n                      ].rowSize)\n                }%`,\n                backgroundColor: color\n              }}\n              data-tip\n              data-for={crn}\n            >\n              {!preview && (\n                <div className=\"meeting-wrapper\">\n                  <div className=\"ids\">\n                    <span className=\"course-id\">{section.course.id}</span>\n                    <span className=\"section-id\">&nbsp;{section.id}</span>\n                  </div>\n                  <span className=\"period\">\n                    {periodToString(meeting.period)}\n                  </span>\n                  <span className=\"where\">{meeting.where}</span>\n                  <span className=\"instructors\">\n                    {meeting.instructors.join(', ')}\n                  </span>\n                </div>\n              )}\n            </div>\n          ))\n      )}\n\n      {!isAutosized && (\n        <ReactTooltip\n          id={crn}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"top\"\n          effect=\"solid\"\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Course Name</b>\n                </td>\n                <td>{section.course.title}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Delivery Type</b>\n                </td>\n                <td>{section.deliveryMode}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Course Number</b>\n                </td>\n                <td>{section.crn}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Credit Hours</b>\n                </td>\n                <td>{section.credits}</td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport './stylesheet.scss';\nimport { classes } from '../../utils';\nimport { useMobile } from '../../hooks';\n\nexport default function Attribution() {\n  const mobile = useMobile();\n  return (\n    <div className={classes('Attribution')}>\n      <p>\n        Copyright (c) 2021 with{' '}\n        <span role=\"img\" aria-label=\"love\">\n          ❤️\n        </span>{' '}\n        by <a href=\"https://jasonpark.me\">Jinseo Park</a>,{' '}\n        <a href=\"https://bitsofgood.org\">Bits of Good</a>, and{' '}\n        <a href=\"https://github.com/gt-scheduler/website/graphs/contributors\">\n          {mobile ? 'others' : 'the GT Scheduler contributors'}\n        </a>\n        .\n      </p>\n    </div>\n  );\n}\n","import { Course, Section, SortingOption } from '.';\nimport { hasConflictBetween, stringToTime } from '../utils';\nimport {\n  Combination,\n  Period,\n  DateRange,\n  Location,\n  CrawlerTermData\n} from '../types';\n\n// `new Oscar(...)` gets the entirety of the crawler JSON data\ntype OscarConstructionDate = CrawlerTermData;\n\nclass Oscar {\n  periods: (Period | undefined)[];\n\n  dateRanges: DateRange[];\n\n  scheduleTypes: string[];\n\n  campuses: string[];\n\n  attributes: string[];\n\n  gradeBases: string[];\n\n  locations: (Location | null)[];\n\n  updatedAt: Date;\n\n  version: number;\n\n  courses: Course[];\n\n  courseMap: Record<string, Course>;\n\n  crnMap: Record<string, Section>;\n\n  sortingOptions: SortingOption[];\n\n  constructor(data: OscarConstructionDate) {\n    const { courses, caches, updatedAt, version } = data;\n\n    this.periods = caches.periods.map((period) => {\n      if (period === 'TBA') {\n        return undefined;\n      }\n      return {\n        start: stringToTime(period.split(' - ')[0]),\n        end: stringToTime(period.split(' - ')[1])\n      };\n    });\n    this.dateRanges = caches.dateRanges.map((dateRange) => {\n      const [from, to] = dateRange.split(' - ').map((v) => new Date(v));\n      from.setHours(0);\n      to.setHours(23, 59, 59, 999);\n      return { from, to };\n    });\n    this.scheduleTypes = caches.scheduleTypes;\n    this.campuses = caches.campuses;\n    this.attributes = caches.attributes;\n    this.gradeBases = caches.gradeBases;\n    this.locations = caches.locations;\n    this.updatedAt = new Date(updatedAt);\n    this.version = version;\n    this.courses = Object.keys(courses).map(\n      (courseId) => new Course(this, courseId, courses[courseId])\n    );\n    this.courseMap = {};\n    this.crnMap = {};\n    this.courses.forEach((course) => {\n      this.courseMap[course.id] = course;\n      course.sections.forEach((section) => {\n        this.crnMap[section.crn] = section;\n      });\n    });\n    this.sortingOptions = [\n      new SortingOption('Most Compact', (combination) => {\n        const { startMap, endMap } = combination;\n        const diffs = Object.keys(startMap).map(\n          (day) => endMap[day] - startMap[day]\n        );\n        const sum = diffs.reduce((tot, min) => tot + min, 0);\n        return +sum;\n      }),\n      new SortingOption('Earliest Ending', (combination) => {\n        const { endMap } = combination;\n        const ends = Object.values(endMap);\n        const sum = ends.reduce((tot, end) => tot + end, 0);\n        const avg = sum / ends.length;\n        return +avg;\n      }),\n      new SortingOption('Latest Beginning', (combination) => {\n        const { startMap } = combination;\n        const starts = Object.values(startMap);\n        const sum = starts.reduce((tot, min) => tot + min, 0);\n        const avg = sum / starts.length;\n        return -avg;\n      })\n    ];\n  }\n\n  findCourse(courseId: string): Course | undefined {\n    return this.courseMap[courseId];\n  }\n\n  findSection(crn: string): Section | undefined {\n    return this.crnMap[crn];\n  }\n\n  getCombinations(\n    desiredCourses: string[],\n    pinnedCrns: string[],\n    excludedCrns: string[]\n  ): Combination[] {\n    const crnsList: string[][] = [];\n    const dfs = (courseIndex: number = 0, crns: string[] = []): void => {\n      if (courseIndex === desiredCourses.length) {\n        crnsList.push(crns);\n        return;\n      }\n      const course = this.findCourse(desiredCourses[courseIndex]);\n      if (course === undefined) return;\n      const isIncluded = (section: Section) =>\n        !excludedCrns.includes(section.crn);\n      const isPinned = (section: Section) => pinnedCrns.includes(section.crn);\n      const hasConflict = (section: Section) =>\n        [...pinnedCrns, ...crns].some((crn) => {\n          const crnSection = this.findSection(crn);\n          if (crnSection === undefined) return false;\n          return hasConflictBetween(crnSection, section);\n        });\n      if (course.hasLab) {\n        // If a course has a lab, then `onlyLectures`, `onlyLabs`,\n        // and `allInOnes` should be non-undefined, but we have to check\n        // anyways here to satisfy TypeScript\n        const pinnedOnlyLecture = (course.onlyLectures ?? []).find(isPinned);\n        const pinnedOnlyLab = (course.onlyLabs ?? []).find(isPinned);\n        const pinnedAllInOne = (course.allInOnes ?? []).find(isPinned);\n        if ((pinnedOnlyLecture && pinnedOnlyLab) || pinnedAllInOne) {\n          dfs(courseIndex + 1, crns);\n        } else if (pinnedOnlyLecture) {\n          pinnedOnlyLecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n            if (hasConflict(lab)) return;\n            dfs(courseIndex + 1, [...crns, lab.crn]);\n          });\n        } else if (pinnedOnlyLab) {\n          pinnedOnlyLab.associatedLectures\n            .filter(isIncluded)\n            .forEach((lecture) => {\n              if (hasConflict(lecture)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn]);\n            });\n        } else {\n          (course.onlyLectures ?? []).filter(isIncluded).forEach((lecture) => {\n            if (hasConflict(lecture)) return;\n            lecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n              if (hasConflict(lab)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn, lab.crn]);\n            });\n          });\n          (course.allInOnes ?? []).filter(isIncluded).forEach((section) => {\n            if (hasConflict(section)) return;\n            dfs(courseIndex + 1, [...crns, section.crn]);\n          });\n        }\n      } else if (course.sections.some(isPinned)) {\n        dfs(courseIndex + 1, crns);\n      } else {\n        // If a course does not have a lab, then `sectionGroups` should be\n        // non-undefined, but we have to check anyways here to satisfy\n        // TypeScript\n        Object.values(course.sectionGroups ?? []).forEach((sectionGroup) => {\n          const section = sectionGroup.sections.find(isIncluded);\n          if (!section || hasConflict(section)) return;\n          dfs(courseIndex + 1, [...crns, section.crn]);\n        });\n      }\n    };\n    dfs();\n    return crnsList.map((crns) => {\n      const startMap: Record<string, number> = {};\n      const endMap: Record<string, number> = {};\n      this.iterateTimeBlocks([...pinnedCrns, ...crns], (day, period) => {\n        if (period === undefined) return;\n        if (!(day in startMap) || startMap[day] > period.start)\n          startMap[day] = period.start;\n        if (!(day in endMap) || endMap[day] < period.end)\n          endMap[day] = period.end;\n      });\n      return {\n        crns,\n        startMap,\n        endMap\n      };\n    });\n  }\n\n  sortCombinations(\n    combinations: Combination[],\n    sortingOptionIndex: number\n  ): Combination[] {\n    const sortingOption = this.sortingOptions[sortingOptionIndex];\n    return combinations\n      .map((combination) => ({\n        ...combination,\n        factor: sortingOption.calculateFactor(combination)\n      }))\n      .sort((a, b) => a.factor - b.factor);\n  }\n\n  iterateTimeBlocks(\n    crns: string[],\n    callback: (day: string, period: Period | undefined) => void\n  ): void {\n    crns.forEach((crn) => {\n      const section = this.findSection(crn);\n      if (section !== undefined) {\n        section.meetings.forEach(\n          (meeting) =>\n            meeting.period &&\n            meeting.days.forEach((day) => {\n              callback(day, meeting.period);\n            })\n        );\n      }\n    });\n  }\n}\n\nexport default Oscar;\n","import axios from 'axios';\nimport { Oscar, Section } from '.';\nimport {\n  CourseGpa,\n  CrawlerCourse,\n  CrawlerPrerequisites,\n  Period\n} from '../types';\nimport { hasConflictBetween, isLab, isLecture } from '../utils';\n\ninterface SectionGroupMeeting {\n  days: string[];\n  period: Period | undefined;\n}\n\ninterface SectionGroup {\n  /**\n   * Equal to`JSON.stringify(this.sectionGroupMeetings)`\n   */\n  hash: string;\n  meetings: SectionGroupMeeting[];\n  sections: Section[];\n}\n\nclass Course {\n  id: string;\n\n  subject: string;\n\n  number: string;\n\n  title: string;\n\n  sections: Section[];\n\n  prereqs: CrawlerPrerequisites;\n\n  hasLab: boolean;\n\n  onlyLectures: Section[] | undefined;\n\n  onlyLabs: Section[] | undefined;\n\n  allInOnes: Section[] | undefined;\n\n  sectionGroups: Record<string, SectionGroup> | undefined;\n\n  constructor(oscar: Oscar, courseId: string, data: CrawlerCourse) {\n    const [title, sections, prereqs] = data;\n\n    this.id = courseId;\n    [this.subject, this.number] = this.id.split(' ');\n    this.title = title;\n    this.sections = Object.keys(sections).map(\n      (sectionId) => new Section(oscar, this, sectionId, sections[sectionId])\n    );\n    this.prereqs = prereqs;\n\n    const onlyLectures = this.sections.filter(\n      (section) => isLecture(section) && !isLab(section)\n    );\n    const onlyLabs = this.sections.filter(\n      (section) => isLab(section) && !isLecture(section)\n    );\n    this.hasLab = !!onlyLectures.length && !!onlyLabs.length;\n    if (this.hasLab) {\n      for (const lecture of onlyLectures) {\n        lecture.associatedLabs = onlyLabs.filter((lab) =>\n          lab.id.startsWith(lecture.id)\n        );\n      }\n      for (const lab of onlyLabs) {\n        lab.associatedLectures = onlyLectures.filter((lecture) =>\n          lab.id.startsWith(lecture.id)\n        );\n      }\n      const lonelyLectures = onlyLectures.filter(\n        (lecture) => !lecture.associatedLabs.length\n      );\n      const lonelyLabs = onlyLabs.filter(\n        (lab) => !lab.associatedLectures.length\n      );\n      for (const lecture of lonelyLectures) {\n        lecture.associatedLabs = lonelyLabs.filter(\n          (lab) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      for (const lab of lonelyLabs) {\n        lab.associatedLectures = lonelyLectures.filter(\n          (lecture) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      this.onlyLectures = onlyLectures;\n      this.onlyLabs = onlyLabs;\n      this.allInOnes = this.sections.filter(\n        (section) => isLecture(section) && isLab(section)\n      );\n    } else {\n      this.sectionGroups = this.distinct(this.sections);\n    }\n  }\n\n  distinct(sections: Section[]): Record<string, SectionGroup> {\n    const groups: Record<string, SectionGroup> = {};\n    sections.forEach((section) => {\n      const sectionGroupMeetings = section.meetings.map<SectionGroupMeeting>(\n        ({ days, period }) => ({\n          days,\n          period\n        })\n      );\n      const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n      const sectionGroup = groups[sectionGroupHash];\n      if (sectionGroup) {\n        sectionGroup.sections.push(section);\n      } else {\n        groups[sectionGroupHash] = {\n          hash: sectionGroupHash,\n          meetings: sectionGroupMeetings,\n          sections: [section]\n        };\n      }\n    });\n    return groups;\n  }\n\n  async fetchGpa(): Promise<CourseGpa> {\n    const base =\n      'https://c4citk6s9k.execute-api.us-east-1.amazonaws.com/test/data';\n    // We have to clean up the course ID before sending it to the API,\n    // since courses like CHEM 1212K should become CHEM 1212\n    let { id } = this;\n    try {\n      const [subject, number] = id.split(' ');\n      id = `${subject} ${number.replace(/\\D/g, '')}`;\n    } catch (_) {\n      // Ignore errors during cleaning\n    }\n    const encodedCourse = encodeURIComponent(id);\n    return axios({\n      url: `${base}/course?courseID=${encodedCourse}`,\n      method: 'get'\n    })\n      .then((response) => {\n        const { data } = response;\n        const averageGpa = data.header[0].avg_gpa;\n        const gpaMap: CourseGpa = { averageGpa };\n\n        data.raw.forEach((datum: { instructor_name: string; GPA: number }) => {\n          const instructor = datum.instructor_name;\n          const gpa = datum.GPA;\n\n          const [lastName, firstName] = instructor.split(', ');\n          const fullName = `${firstName} ${lastName}`;\n          gpaMap[fullName] = gpa;\n        });\n\n        return gpaMap;\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error(err);\n        return {};\n      });\n  }\n}\n\nexport default Course;\n","import axios from 'axios';\nimport cheerio from 'cheerio';\nimport { unique } from '../utils';\nimport { DELIVERY_MODES, BACKEND_BASE_URL } from '../constants';\nimport Course from './Course';\nimport Oscar from './Oscar';\nimport { CrawlerMeeting, Meeting } from '../types';\n\nexport type Seating = [\n  seating:\n    | [] // Loading state\n    | [\n        // Loaded state\n        seatsCurrent: number,\n        seatsTotal: number,\n        waitlistCurrent: number,\n        waitlistTotal: number\n      ]\n    | string[], // Error state\n  fetchTime: number\n];\n\ntype SectionConstructionData = [\n  crn: string,\n  meetings: CrawlerMeeting[],\n  credits: number,\n  scheduleTypeIndex: number,\n  campusIndex: number,\n  attributeIndices: number[],\n  gradeBasisIndex: number\n];\n\nclass Section {\n  course: Course;\n\n  id: string;\n\n  crn: string;\n\n  seating: Seating;\n\n  credits: number;\n\n  scheduleType: string;\n\n  campus: string;\n\n  deliveryMode: string | undefined;\n\n  gradeBasis: string;\n\n  meetings: Meeting[];\n\n  instructors: string[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLabs: Section[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLectures: Section[];\n\n  constructor(\n    oscar: Oscar,\n    course: Course,\n    sectionId: string,\n    data: SectionConstructionData\n  ) {\n    const [\n      crn,\n      meetings,\n      credits,\n      scheduleTypeIndex,\n      campusIndex,\n      attributeIndices,\n      gradeBasisIndex\n    ] = data;\n\n    this.course = course;\n    this.id = sectionId;\n    this.crn = crn;\n    this.seating = [[], 0];\n    this.credits = credits;\n    this.scheduleType = oscar.scheduleTypes[scheduleTypeIndex];\n    this.campus = oscar.campuses[campusIndex];\n\n    const attributes = attributeIndices.map(\n      (attributeIndex) => oscar.attributes[attributeIndex]\n    );\n    this.deliveryMode = attributes.find(\n      (attribute) => attribute in DELIVERY_MODES\n    );\n\n    this.gradeBasis = oscar.gradeBases[gradeBasisIndex];\n    this.meetings = meetings.map<Meeting>(\n      ([\n        periodIndex,\n        days,\n        where,\n        locationIndex,\n        instructors,\n        dateRangeIndex\n      ]) => ({\n        period: oscar.periods[periodIndex],\n        days: days === '&nbsp;' ? [] : days.split(''),\n        where,\n        location: oscar.locations[locationIndex],\n        instructors: instructors.map((instructor) =>\n          instructor.replace(/ \\(P\\)$/, '')\n        ),\n        dateRange: oscar.dateRanges[dateRangeIndex]\n      })\n    );\n    this.instructors = unique(\n      this.meetings\n        .map<string[]>(({ instructors }) => instructors)\n        .reduce((accum, instructors) => [...accum, ...instructors], [])\n    );\n\n    // These fields are initialized after construction\n    // inside `Course.constructor`\n    this.associatedLabs = [];\n    this.associatedLectures = [];\n  }\n\n  async fetchSeating(term: string): Promise<Seating> {\n    const prevDate = this.seating[1];\n    const currDate = Date.now();\n\n    if (currDate - prevDate > 300000) {\n      const url = `${BACKEND_BASE_URL}/proxy/class_section?term=${term}&crn=${this.crn}`;\n      return axios({\n        url,\n        method: 'get',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          'Content-Type': 'text/html'\n        }\n      })\n        .then((response) => {\n          const $ = cheerio.load(response.data);\n          const availabilityTable = $('.datadisplaytable .datadisplaytable');\n          const tableRow = availabilityTable.find('tr');\n\n          this.seating = [\n            [\n              parseInt(tableRow.eq(1).children('td').first().text(), 10),\n              parseInt(tableRow.eq(1).children('td').eq(1).text(), 10),\n              parseInt(tableRow.eq(2).children('td').first().text(), 10),\n              parseInt(tableRow.eq(2).children('td').eq(1).text(), 10)\n            ],\n            currDate\n          ];\n\n          return this.seating;\n        })\n        .catch(() => [new Array(4).fill('N/A'), currDate]);\n    }\n    return this.seating;\n  }\n}\n\nexport default Section;\n","import { Combination } from '../types';\n\nclass SortingOption {\n  label: string;\n\n  calculateFactor: (combo: Combination) => number;\n\n  constructor(label: string, calculateFactor: (combo: Combination) => number) {\n    this.label = label;\n    this.calculateFactor = calculateFactor;\n  }\n}\n\nexport default SortingOption;\n","import axios from 'axios';\nimport { BACKEND_BASE_URL } from '../constants';\n\nconst FormSubmit = async ({\n  rating,\n  feedback\n}: {\n  rating: number;\n  feedback: string;\n}): Promise<void> => {\n  const url = `${BACKEND_BASE_URL}/feedback`;\n  await axios({\n    method: 'post',\n    url,\n    data: {\n      rating,\n      feedback\n    },\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    }\n  });\n};\n\nexport default FormSubmit;\n","import React, { useState } from 'react';\nimport './stylesheet.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCommentAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '..';\nimport { classes } from '../../utils';\n\nimport { FormSubmit } from '../../beans';\n\nexport default function Feedback() {\n  const [expanded, setExpanded] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [rating, setRating] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = () => {\n    setLoading(true);\n    // Add 1 to the rating to move it from [0,4] to [1,5]\n    FormSubmit({ rating: rating + 1, feedback })\n      .then(() => {\n        setSubmit(true);\n        setLoading(false);\n      })\n      .catch(() => {\n        setSubmit(true);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      {!expanded && (\n        <Button\n          className=\"FeedbackButton\"\n          onClick={() => setExpanded(true)}\n          onMouse\n        >\n          <FontAwesomeIcon icon={faCommentAlt} size=\"2x\" />\n        </Button>\n      )}\n      {expanded && (\n        <div>\n          <form className=\"FeedbackForm\">\n            <div className=\"container\">\n              <FontAwesomeIcon\n                icon={faTimes}\n                className=\"CloseIcon\"\n                onClick={() => setExpanded(false)}\n              />\n              <h3 className=\"FeedbackTitle\">Feedback</h3>\n              {!submit && (\n                <div>\n                  <p className=\"text\">How would you rate your experience?</p>\n                  <div className=\"FormButtons\">\n                    {[1, 2, 3, 4, 5].map((i) => (\n                      <Button\n                        className={classes(\n                          'FormButton',\n                          rating === i - 1 && 'active'\n                        )}\n                        onClick={() => setRating(i - 1)}\n                      >\n                        {i}\n                      </Button>\n                    ))}\n                  </div>\n                  <div className=\"ScoreLabels\">\n                    <span className=\"score\" style={{ marginLeft: '4px' }}>\n                      Poor\n                    </span>\n                    <span className=\"score\" style={{ marginRight: '4px' }}>\n                      Great\n                    </span>\n                  </div>\n                  <textarea\n                    className=\"FeedbackTextArea\"\n                    placeholder=\"Please let us know if you have any more feedback!\"\n                    onChange={(event) => setFeedback(event.target.value)}\n                    value={feedback}\n                  />\n                  <Button\n                    className=\"SubmitButton\"\n                    onClick={onSubmit}\n                    disabled={rating == null || loading}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              )}\n              {submit && (\n                <div className=\"submitted\">\n                  <p className=\"submitted-thanks text\">\n                    <span>Thank you for your feedback!</span>\n                  </p>\n                  <div>\n                    <Button\n                      className=\"SubmitButton\"\n                      onClick={() => setExpanded(false)}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport swal from '@sweetalert/with-react';\nimport * as Sentry from '@sentry/react';\nimport Cookies from 'js-cookie';\nimport { classes } from '../../utils';\nimport { Header, Scheduler, Map, NavDrawer, NavMenu, Attribution } from '..';\nimport Feedback from '../Feedback';\nimport { Oscar } from '../../beans';\nimport { useCookie, useJsonCookie, useMobile } from '../../hooks';\nimport { TermContext, TermsContext, ThemeContext } from '../../contexts';\nimport { defaultTermData } from '../../types';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nconst NAV_TABS = ['Scheduler', 'Map'];\n\nconst App = () => {\n  const [terms, setTerms] = useState([]);\n  const [oscar, setOscar] = useState(null);\n\n  // Persist the theme, term, and some term data as cookies\n  const [theme, setTheme] = useCookie('theme', 'dark');\n  const [term, setTerm] = useCookie('term');\n  const [termData, patchTermData] = useJsonCookie(term, defaultTermData);\n\n  // Only consider courses and CRNs that exist\n  // (fixes issues where a CRN/course is removed from Oscar\n  // after a schedule was made with them)\n  const filteredTermData = useMemo(() => {\n    const courseFilter = (courseId) =>\n      oscar != null && oscar.findCourse(courseId) != null;\n    const crnFilter = (crn) => oscar != null && oscar.findSection(crn) != null;\n\n    const desiredCourses = termData.desiredCourses.filter(courseFilter);\n    const pinnedCrns = termData.pinnedCrns.filter(crnFilter);\n    const excludedCrns = termData.excludedCrns.filter(crnFilter);\n\n    return { ...termData, desiredCourses, pinnedCrns, excludedCrns };\n  }, [oscar, termData]);\n\n  // Memoize context values so that their references are stable\n  const themeContextValue = useMemo(() => [theme, setTheme], [theme, setTheme]);\n  const termsContextValue = useMemo(() => [terms, setTerms], [terms, setTerms]);\n  const termContextValue = useMemo(\n    () => [\n      { term, oscar, ...filteredTermData },\n      { setTerm, setOscar, patchTermData }\n    ],\n    [term, oscar, filteredTermData, setTerm, setOscar, patchTermData]\n  );\n\n  // display popup when first visiting the site\n  useEffect(() => {\n    const cookieKey = 'visited-merge-notice';\n    if (!Cookies.get(cookieKey)) {\n      swal({\n        button: 'Got It!',\n        content: (\n          <div>\n            <img\n              style={{ width: '175px' }}\n              alt=\"GT Scheduler Logo\"\n              src=\"/mascot.png\"\n            />\n            <h1>GT Scheduler</h1>\n            <p>\n              Hey there, yellow jackets!{' '}\n              <a href=\"https://github.com/gt-scheduler\">GT Scheduler</a> is a\n              new collaboration between{' '}\n              <a href=\"https://bitsofgood.org/\">Bits of Good</a> and{' '}\n              <a href=\"https://jasonpark.me/\">Jason (Jinseo) Park</a> aimed at\n              making class registration easier for everybody! Now, you can\n              access course prerequisites, instructor GPAs, live seating\n              information, and more all in one location.\n            </p>\n            <p>\n              If you enjoy our work and are interested in contributing, feel\n              free to{' '}\n              <a href=\"https://github.com/gt-scheduler/website/pulls\">\n                open a pull request\n              </a>{' '}\n              with your improvements. Thank you and enjoy!\n            </p>\n          </div>\n        )\n      });\n\n      Cookies.set(cookieKey, true, { expires: 365 });\n    }\n  }, []);\n\n  // Fetch the current term's scraper information\n  useEffect(() => {\n    setOscar(null);\n    if (term) {\n      axios\n        .get(`https://gt-scheduler.github.io/crawler/${term}.json`)\n        .then((res) => {\n          const newOscar = new Oscar(res.data);\n          setOscar(newOscar);\n        });\n    }\n  }, [term]);\n\n  // Fetch all terms via the GitHub API\n  useEffect(() => {\n    axios\n      .get(\n        'https://api.github.com/repos/gt-scheduler/crawler/contents?ref=gh-pages'\n      )\n      .then((res) => {\n        const newTerms = res.data\n          .map((content) => content.name)\n          .filter((name) => /\\d{6}\\.json/.test(name))\n          .map((name) => name.replace(/\\.json$/, ''))\n          .sort()\n          .reverse();\n        setTerms(newTerms);\n      });\n  }, [setTerms]);\n\n  // Set the term to be the first one if it is unset\n  // (once the terms load)\n  useEffect(() => {\n    if (!term) {\n      const [recentTerm] = terms;\n      setTerm(recentTerm);\n    }\n  }, [terms, term, setTerm]);\n\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = useMobile();\n  const className = classes('App', mobile && 'mobile', theme);\n\n  // Allow top-level tab-based navigation\n  const [currentTabIndex, setTabIndex] = useState(0);\n\n  // Handle the status of the drawer being open on mobile\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const openDrawer = useCallback(() => setIsDrawerOpen(true), []);\n  const closeDrawer = useCallback(() => setIsDrawerOpen(false), []);\n  useEffect(() => {\n    // Close the drawer if switching to desktop\n    if (isDrawerOpen && !mobile) {\n      setIsDrawerOpen(false);\n    }\n  }, [isDrawerOpen, mobile]);\n\n  // If the scraped JSON hasn't been loaded,\n  // then show an empty div as a loading intermediate\n  if (!oscar) {\n    return <div className={className} />;\n  }\n\n  return (\n    <ThemeContext.Provider value={themeContextValue}>\n      <TermsContext.Provider value={termsContextValue}>\n        <TermContext.Provider value={termContextValue}>\n          <div className={classes('App', className)}>\n            <Sentry.ErrorBoundary fallback=\"An error has occurred\">\n              {/* On mobile, show the nav drawer + overlay */}\n              {mobile && (\n                <NavDrawer open={isDrawerOpen} onClose={closeDrawer}>\n                  <NavMenu\n                    items={NAV_TABS}\n                    currentItem={currentTabIndex}\n                    onChangeItem={setTabIndex}\n                  />\n                </NavDrawer>\n              )}\n              {/* The header controls top-level navigation\n              and is always present */}\n              <Header\n                currentTab={currentTabIndex}\n                onChangeTab={setTabIndex}\n                onToggleMenu={openDrawer}\n                tabs={NAV_TABS}\n              />\n              {currentTabIndex === 0 && <Scheduler />}\n              {currentTabIndex === 1 && <Map />}\n              <Feedback />\n            </Sentry.ErrorBoundary>\n            <Attribution />\n          </div>\n        </TermContext.Provider>\n      </TermsContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","import { useCallback, useMemo } from 'react';\nimport { useCookie } from '.';\n\nexport default function useJsonCookie(key, defaultValue) {\n  const [rawValue, setRawValue] = useCookie(key);\n\n  const value = useMemo(() => {\n    if (rawValue !== undefined) {\n      const parsedValue = JSON.parse(rawValue);\n      return {\n        ...defaultValue,\n        ...parsedValue\n      };\n    }\n    return defaultValue;\n  }, [rawValue, defaultValue]);\n\n  const patchValue = useCallback(\n    (patch) => {\n      const rawVal = JSON.stringify({\n        ...value,\n        ...patch\n      });\n      setRawValue(rawVal);\n    },\n    [value, setRawValue]\n  );\n\n  return [value, patchValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport App from './components/App';\nimport 'normalize.css';\nimport './stylesheet.scss';\n\n// Only initialize sentry on production\nif (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line no-console\n  console.log('Initializing Sentry');\n  Sentry.init({\n    dsn:\n      'https://8955ef982197469e97c7644a8c090db1@o552970.ingest.sentry.io/5679614',\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 0.8\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}